{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sunohk/dataon_pj/blob/main/2_LDA_analysis.(%ED%86%A0%ED%94%BD%EB%AA%A8%EB%8D%B8%EB%A7%81)ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 데이터 불러오기"
      ],
      "metadata": {
        "id": "FllpJ8yTwSlQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#환경설정\n",
        "!pip install pyLDAvis\n",
        "!pip install pyLDAvis --upgrade\n",
        "!pip install pandas --upgrade"
      ],
      "metadata": {
        "id": "SuJcMgmeowsj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from tqdm import tqdm\n",
        "import re\n",
        "import pickle\n",
        "import csv\n",
        "import pandas as pd\n",
        "from pandas import DataFrame\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "ksRLkFVSUeeO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "J4NjcxlW-tgU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f5e802c4-5bcb-46c0-cee5-ea0292c41e2e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /gdrive; to attempt to forcibly remount, call drive.mount(\"/gdrive\", force_remount=True).\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/gdrive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "\n",
        "# 폴더 경로 설정\n",
        "folder_path = '/gdrive/MyDrive/policy/youth_filter/'\n",
        "\n",
        "# 각 엑셀 파일을 담을 딕셔너리 생성\n",
        "dfs = {}\n",
        "\n",
        "# 폴더 내의 모든 엑셀 파일 불러오기\n",
        "for filename in os.listdir(folder_path):\n",
        "    if filename.startswith('youth_') and filename.endswith('.xlsx'):\n",
        "        # 엑셀 파일 불러오기\n",
        "        file_path = os.path.join(folder_path, filename)\n",
        "        df_name = filename.split('youth_')[1].split('.')[0]  # 파일 이름에서 중요한 부분 추출\n",
        "        dfs[df_name] = pd.read_excel(file_path)\n",
        "\n",
        "# 각각의 엑셀 파일은 dfs 딕셔너리의 키로 접근 가능\n",
        "# 예를 들어, 첫 번째 엑셀 파일에 접근하려면 dfs['뒤에붙는부분'] 사용\n",
        "\n"
      ],
      "metadata": {
        "id": "lPPDgb-Q_MSl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dfs['peak2']"
      ],
      "metadata": {
        "id": "Ui448q70mece",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "782df7cf-f8f0-48c1-cb2c-0162f6c71680"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Unnamed: 0        작성일      작성자  \\\n",
              "0         12036 2022-03-01  CJB청주방송   \n",
              "1         12037 2022-03-01     국민일보   \n",
              "2         12038 2022-03-01     전자신문   \n",
              "3         12039 2022-03-01      뉴스1   \n",
              "4         12040 2022-03-01     동아일보   \n",
              "..          ...        ...      ...   \n",
              "497       12533 2022-03-31     한국일보   \n",
              "498       12534 2022-03-31      뉴스1   \n",
              "499       12535 2022-03-31      KBS   \n",
              "500       12536 2022-03-31      뉴스1   \n",
              "501       12537 2022-03-31      더팩트   \n",
              "\n",
              "                                             제목  \\\n",
              "0                      청주 상당 재선거 공약 점검/ 정우택·김시진   \n",
              "1                         울산시, 청년 고용장려에 18억원 투입   \n",
              "2             대학일자리플러스센터 운영, “전국 111개 대학서 취업상담”   \n",
              "3                   성남시 ‘청년 정규직 일자리’ 참여자 30명 모집   \n",
              "4    이재명 “청년엔 기본소득 年200만원” 윤석열 “청년원가주택 30만채 공급”   \n",
              "..                                          ...   \n",
              "497           \"윤 당선인의 청년정책, '시험' 중심 사고에 머물러 있다\"   \n",
              "498          염태영 경기지사 예비후보, 청년 위한 '하이브리드 주택' 제안   \n",
              "499                    대구 수성구-경산시 ‘청년 정책’ 공동 추진   \n",
              "500                       [오늘의 주요일정] 경남(31일, 목)   \n",
              "501        [전남 단신] 화순군, 농지원부 → ‘농지대장’으로 전면 개편 등   \n",
              "\n",
              "                                                    내용  \\\n",
              "0    <오프닝> 저희 CJB는 다음달 대선과 함께 치러지는 청주 상당 국회의원 재선거를 ...   \n",
              "1    기업 1곳당 최대 160만원 6개월 지원 울산시가 올해 청년 일자리 고용장려금으로 ...   \n",
              "2    고용노동부가 2일부터 전국 111개 대학을 통해 '2022년도 대학일자리플러스센터 ...   \n",
              "3    지역 주도형 일자리…4차산업·바이오·디지털 관련 업체 취업 성남시 ‘청년 정규직 일...   \n",
              "4    [3 ·9대선 공약 줌인]현금부터 집까지 2030 지원 경쟁 여야 대선 후보들은 이...   \n",
              "..                                                 ...   \n",
              "497  '새 정부 1826일:코로나 이후, 청년정책의 과제' 토론회 \"청년부채, 사회적으로...   \n",
              "498  '주거·복지' 문제 화상 소통…임대·분양 동시 가능 주택 염태영 경기도지사 예비후보...   \n",
              "499  [KBS 대구] 대구 수성구와 경산시가 함께 대구경북권에서는 처음으로 청년들이 직접...   \n",
              "500  경남도청 전경. © 뉴스1 (경남=뉴스1) = ◇경남도 -하병필 권한대행 14:00...   \n",
              "501  전남 화순군청사 전경./ 화순군 제공 ■화순군, 농지원부→‘농지대장’으로 전면 개편...   \n",
              "\n",
              "                                            clean_text  \\\n",
              "0     오프닝  저희 는 다음달 대선과 함께 치러지는 청주 상당 국회의원 재선거를 앞두고...   \n",
              "1    기업  곳당 최대    만원  개월 지원 울산시가 올해 청년 일자리 고용장려금으로 ...   \n",
              "2    고용노동부가  일부터 전국    개 대학을 통해      년도 대학일자리플러스센터 ...   \n",
              "3    지역 주도형 일자리  차산업 바이오 디지털 관련 업체 취업 성남시  청년 정규직 일...   \n",
              "4         대선 공약 줌인 현금부터 집까지      지원 경쟁 여야 대선 후보들은 이...   \n",
              "..                                                 ...   \n",
              "497   새 정부     일 코로나 이후  청년정책의 과제  토론회  청년부채  사회적으로...   \n",
              "498   주거 복지  문제 화상 소통 임대 분양 동시 가능 주택 염태영 경기도지사 예비후보...   \n",
              "499    대구  대구 수성구와 경산시가 함께 대구경북권에서는 처음으로 청년들이 직접 정책...   \n",
              "500  경남도청 전경    뉴스   경남 뉴스      경남도  하병필 권한대행      ...   \n",
              "501  전남 화순군청사 전경   화순군 제공  화순군  농지원부  농지대장 으로 전면 개편...   \n",
              "\n",
              "                         clean_title  \\\n",
              "0             청주 상당 선거 공약 점검 정우택 김시진   \n",
              "1                울산시 청년 고용 장려 억 원 투입   \n",
              "2     대학 일자리 플러스 센터 운영 전국 개 대학 취업 상담   \n",
              "3             성남시 청년 정규직 일자리 참여 명 모집   \n",
              "4    이재명 청년 기본소득 만 원 윤석열 청년 원가 주택 공급   \n",
              "..                               ...   \n",
              "497             윤 당선인 청년 정책 시험 중심 사고   \n",
              "498   염태영 경기 지사 예비 후보 청년 하이브리드 주택 제안   \n",
              "499           대구 수성구 경산시 청년 정책 공동 추진   \n",
              "500                    오늘 주요 일정 경남 목   \n",
              "501      전남 단신 화순군 농지 원부 농 지대장 전면 개편   \n",
              "\n",
              "                                          clean_text_2  \\\n",
              "0    오프닝 달 대선 청주 상당 국회의원 재선거 차례 후보 공약 점검 순서 마련 기호 순...   \n",
              "1    기업 곳 최대 원 개월 지원 울산 시 올해 청년 일자리 고용 장려금 개월 간 최대 ...   \n",
              "2    고용 노동부 전국 개 대학 대학 일자리 플러스 센터 사업 본격 실시 대학 일자리 플...   \n",
              "3    지역 주도 일자리 차 산업 바이오 디지털 관련 업체 취업 청년 정규직 일자리 남 참...   \n",
              "4    대선 공약 줌 현금 집 지원 경쟁 대선 후보 대선 캐스팅 보트 청년 세대 표 공약 ...   \n",
              "..                                                 ...   \n",
              "497  정부 코로나 이후 청년 정책 과제 토론회 청년 부채 사회 해결 정책 필요 게티 이미...   \n",
              "498  주거 복지 문제 화상 소통 임대 분양 동시 가능 주택 염태영 경기도지사 예비 후보 ...   \n",
              "499  대구 대구 수성구 경산시 대구경북 처음 청년 정책 프로젝트 시작 프로젝트 수성구 경...   \n",
              "500  경남 도청 전경 뉴스 경남 뉴스 경남 하병필 권한 대행 지속 가능 경영 사업 업무 ...   \n",
              "501  전남 화순군 청사 전경 화순군 제공 화순군 농지 원부 농 지대장 전면 개편 화순군 ...   \n",
              "\n",
              "                                        clean_contents  \\\n",
              "0    오프닝 달 대선 청주 상당 국회의원 재선거 차례 후보 공약 점검 순서 마련 기호 순...   \n",
              "1    기업 곳 최대 원 개월 지원 울산 시 올해 청년 일자리 고용 장려금 개월 간 최대 ...   \n",
              "2    고용 노동부 전국 개 대학 대학 일자리 플러스 센터 사업 본격 실시 대학 일자리 플...   \n",
              "3    지역 주도 일자리 차 산업 바이오 디지털 관련 업체 취업 청년 정규직 일자리 남 참...   \n",
              "4    대선 공약 줌 현금 집 지원 경쟁 대선 후보 대선 캐스팅 보트 청년 세대 표 공약 ...   \n",
              "..                                                 ...   \n",
              "497  정부 코로나 이후 청년 정책 과제 토론회 청년 부채 사회 해결 정책 필요 게티 이미...   \n",
              "498  주거 복지 문제 화상 소통 임대 분양 동시 가능 주택 염태영 경기도지사 예비 후보 ...   \n",
              "499  대구 대구 수성구 경산시 대구경북 처음 청년 정책 프로젝트 시작 프로젝트 수성구 경...   \n",
              "500  경남 도청 전경 뉴스 경남 뉴스 경남 하병필 권한 대행 지속 가능 경영 사업 업무 ...   \n",
              "501  전남 화순군 청사 전경 화순군 제공 화순군 농지 원부 농 지대장 전면 개편 화순군 ...   \n",
              "\n",
              "                                               summary        월  \n",
              "0    청주 상당 선거 공약 점검 정우택 김시진 오프닝 달 대선 청주 상당 국회의원 재선거...  2022-03  \n",
              "1    울산시 청년 고용 장려 억 원 투입 기업 곳 최대 원 개월 지원 울산 시 올해 청년...  2022-03  \n",
              "2    대학 일자리 플러스 센터 운영 전국 개 대학 취업 상담 고용 노동부 전국 개 대학 ...  2022-03  \n",
              "3    성남시 청년 정규직 일자리 참여 명 모집 지역 주도 일자리 차 산업 바이오 디지털 ...  2022-03  \n",
              "4    이재명 청년 기본소득 만 원 윤석열 청년 원가 주택 공급 대선 공약 줌 현금 집 지...  2022-03  \n",
              "..                                                 ...      ...  \n",
              "497  윤 당선인 청년 정책 시험 중심 사고 정부 코로나 이후 청년 정책 과제 토론회 청년...  2022-03  \n",
              "498  염태영 경기 지사 예비 후보 청년 하이브리드 주택 제안 주거 복지 문제 화상 소통 ...  2022-03  \n",
              "499  대구 수성구 경산시 청년 정책 공동 추진 대구 대구 수성구 경산시 대구경북 처음 청...  2022-03  \n",
              "500  오늘 주요 일정 경남 목 경남 도청 전경 뉴스 경남 뉴스 경남 하병필 권한 대행 지...  2022-03  \n",
              "501  전남 단신 화순군 농지 원부 농 지대장 전면 개편 전남 화순군 청사 전경 화순군 제...  2022-03  \n",
              "\n",
              "[502 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8c569e19-9e5a-4cb4-86dd-86abf14c0df5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>작성일</th>\n",
              "      <th>작성자</th>\n",
              "      <th>제목</th>\n",
              "      <th>내용</th>\n",
              "      <th>clean_text</th>\n",
              "      <th>clean_title</th>\n",
              "      <th>clean_text_2</th>\n",
              "      <th>clean_contents</th>\n",
              "      <th>summary</th>\n",
              "      <th>월</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>12036</td>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>CJB청주방송</td>\n",
              "      <td>청주 상당 재선거 공약 점검/ 정우택·김시진</td>\n",
              "      <td>&lt;오프닝&gt; 저희 CJB는 다음달 대선과 함께 치러지는 청주 상당 국회의원 재선거를 ...</td>\n",
              "      <td>오프닝  저희 는 다음달 대선과 함께 치러지는 청주 상당 국회의원 재선거를 앞두고...</td>\n",
              "      <td>청주 상당 선거 공약 점검 정우택 김시진</td>\n",
              "      <td>오프닝 달 대선 청주 상당 국회의원 재선거 차례 후보 공약 점검 순서 마련 기호 순...</td>\n",
              "      <td>오프닝 달 대선 청주 상당 국회의원 재선거 차례 후보 공약 점검 순서 마련 기호 순...</td>\n",
              "      <td>청주 상당 선거 공약 점검 정우택 김시진 오프닝 달 대선 청주 상당 국회의원 재선거...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>12037</td>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>국민일보</td>\n",
              "      <td>울산시, 청년 고용장려에 18억원 투입</td>\n",
              "      <td>기업 1곳당 최대 160만원 6개월 지원 울산시가 올해 청년 일자리 고용장려금으로 ...</td>\n",
              "      <td>기업  곳당 최대    만원  개월 지원 울산시가 올해 청년 일자리 고용장려금으로 ...</td>\n",
              "      <td>울산시 청년 고용 장려 억 원 투입</td>\n",
              "      <td>기업 곳 최대 원 개월 지원 울산 시 올해 청년 일자리 고용 장려금 개월 간 최대 ...</td>\n",
              "      <td>기업 곳 최대 원 개월 지원 울산 시 올해 청년 일자리 고용 장려금 개월 간 최대 ...</td>\n",
              "      <td>울산시 청년 고용 장려 억 원 투입 기업 곳 최대 원 개월 지원 울산 시 올해 청년...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>12038</td>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>전자신문</td>\n",
              "      <td>대학일자리플러스센터 운영, “전국 111개 대학서 취업상담”</td>\n",
              "      <td>고용노동부가 2일부터 전국 111개 대학을 통해 '2022년도 대학일자리플러스센터 ...</td>\n",
              "      <td>고용노동부가  일부터 전국    개 대학을 통해      년도 대학일자리플러스센터 ...</td>\n",
              "      <td>대학 일자리 플러스 센터 운영 전국 개 대학 취업 상담</td>\n",
              "      <td>고용 노동부 전국 개 대학 대학 일자리 플러스 센터 사업 본격 실시 대학 일자리 플...</td>\n",
              "      <td>고용 노동부 전국 개 대학 대학 일자리 플러스 센터 사업 본격 실시 대학 일자리 플...</td>\n",
              "      <td>대학 일자리 플러스 센터 운영 전국 개 대학 취업 상담 고용 노동부 전국 개 대학 ...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12039</td>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>뉴스1</td>\n",
              "      <td>성남시 ‘청년 정규직 일자리’ 참여자 30명 모집</td>\n",
              "      <td>지역 주도형 일자리…4차산업·바이오·디지털 관련 업체 취업 성남시 ‘청년 정규직 일...</td>\n",
              "      <td>지역 주도형 일자리  차산업 바이오 디지털 관련 업체 취업 성남시  청년 정규직 일...</td>\n",
              "      <td>성남시 청년 정규직 일자리 참여 명 모집</td>\n",
              "      <td>지역 주도 일자리 차 산업 바이오 디지털 관련 업체 취업 청년 정규직 일자리 남 참...</td>\n",
              "      <td>지역 주도 일자리 차 산업 바이오 디지털 관련 업체 취업 청년 정규직 일자리 남 참...</td>\n",
              "      <td>성남시 청년 정규직 일자리 참여 명 모집 지역 주도 일자리 차 산업 바이오 디지털 ...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>12040</td>\n",
              "      <td>2022-03-01</td>\n",
              "      <td>동아일보</td>\n",
              "      <td>이재명 “청년엔 기본소득 年200만원” 윤석열 “청년원가주택 30만채 공급”</td>\n",
              "      <td>[3 ·9대선 공약 줌인]현금부터 집까지 2030 지원 경쟁 여야 대선 후보들은 이...</td>\n",
              "      <td>대선 공약 줌인 현금부터 집까지      지원 경쟁 여야 대선 후보들은 이...</td>\n",
              "      <td>이재명 청년 기본소득 만 원 윤석열 청년 원가 주택 공급</td>\n",
              "      <td>대선 공약 줌 현금 집 지원 경쟁 대선 후보 대선 캐스팅 보트 청년 세대 표 공약 ...</td>\n",
              "      <td>대선 공약 줌 현금 집 지원 경쟁 대선 후보 대선 캐스팅 보트 청년 세대 표 공약 ...</td>\n",
              "      <td>이재명 청년 기본소득 만 원 윤석열 청년 원가 주택 공급 대선 공약 줌 현금 집 지...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>497</th>\n",
              "      <td>12533</td>\n",
              "      <td>2022-03-31</td>\n",
              "      <td>한국일보</td>\n",
              "      <td>\"윤 당선인의 청년정책, '시험' 중심 사고에 머물러 있다\"</td>\n",
              "      <td>'새 정부 1826일:코로나 이후, 청년정책의 과제' 토론회 \"청년부채, 사회적으로...</td>\n",
              "      <td>새 정부     일 코로나 이후  청년정책의 과제  토론회  청년부채  사회적으로...</td>\n",
              "      <td>윤 당선인 청년 정책 시험 중심 사고</td>\n",
              "      <td>정부 코로나 이후 청년 정책 과제 토론회 청년 부채 사회 해결 정책 필요 게티 이미...</td>\n",
              "      <td>정부 코로나 이후 청년 정책 과제 토론회 청년 부채 사회 해결 정책 필요 게티 이미...</td>\n",
              "      <td>윤 당선인 청년 정책 시험 중심 사고 정부 코로나 이후 청년 정책 과제 토론회 청년...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>498</th>\n",
              "      <td>12534</td>\n",
              "      <td>2022-03-31</td>\n",
              "      <td>뉴스1</td>\n",
              "      <td>염태영 경기지사 예비후보, 청년 위한 '하이브리드 주택' 제안</td>\n",
              "      <td>'주거·복지' 문제 화상 소통…임대·분양 동시 가능 주택 염태영 경기도지사 예비후보...</td>\n",
              "      <td>주거 복지  문제 화상 소통 임대 분양 동시 가능 주택 염태영 경기도지사 예비후보...</td>\n",
              "      <td>염태영 경기 지사 예비 후보 청년 하이브리드 주택 제안</td>\n",
              "      <td>주거 복지 문제 화상 소통 임대 분양 동시 가능 주택 염태영 경기도지사 예비 후보 ...</td>\n",
              "      <td>주거 복지 문제 화상 소통 임대 분양 동시 가능 주택 염태영 경기도지사 예비 후보 ...</td>\n",
              "      <td>염태영 경기 지사 예비 후보 청년 하이브리드 주택 제안 주거 복지 문제 화상 소통 ...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499</th>\n",
              "      <td>12535</td>\n",
              "      <td>2022-03-31</td>\n",
              "      <td>KBS</td>\n",
              "      <td>대구 수성구-경산시 ‘청년 정책’ 공동 추진</td>\n",
              "      <td>[KBS 대구] 대구 수성구와 경산시가 함께 대구경북권에서는 처음으로 청년들이 직접...</td>\n",
              "      <td>대구  대구 수성구와 경산시가 함께 대구경북권에서는 처음으로 청년들이 직접 정책...</td>\n",
              "      <td>대구 수성구 경산시 청년 정책 공동 추진</td>\n",
              "      <td>대구 대구 수성구 경산시 대구경북 처음 청년 정책 프로젝트 시작 프로젝트 수성구 경...</td>\n",
              "      <td>대구 대구 수성구 경산시 대구경북 처음 청년 정책 프로젝트 시작 프로젝트 수성구 경...</td>\n",
              "      <td>대구 수성구 경산시 청년 정책 공동 추진 대구 대구 수성구 경산시 대구경북 처음 청...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>500</th>\n",
              "      <td>12536</td>\n",
              "      <td>2022-03-31</td>\n",
              "      <td>뉴스1</td>\n",
              "      <td>[오늘의 주요일정] 경남(31일, 목)</td>\n",
              "      <td>경남도청 전경. © 뉴스1 (경남=뉴스1) = ◇경남도 -하병필 권한대행 14:00...</td>\n",
              "      <td>경남도청 전경    뉴스   경남 뉴스      경남도  하병필 권한대행      ...</td>\n",
              "      <td>오늘 주요 일정 경남 목</td>\n",
              "      <td>경남 도청 전경 뉴스 경남 뉴스 경남 하병필 권한 대행 지속 가능 경영 사업 업무 ...</td>\n",
              "      <td>경남 도청 전경 뉴스 경남 뉴스 경남 하병필 권한 대행 지속 가능 경영 사업 업무 ...</td>\n",
              "      <td>오늘 주요 일정 경남 목 경남 도청 전경 뉴스 경남 뉴스 경남 하병필 권한 대행 지...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>501</th>\n",
              "      <td>12537</td>\n",
              "      <td>2022-03-31</td>\n",
              "      <td>더팩트</td>\n",
              "      <td>[전남 단신] 화순군, 농지원부 → ‘농지대장’으로 전면 개편 등</td>\n",
              "      <td>전남 화순군청사 전경./ 화순군 제공 ■화순군, 농지원부→‘농지대장’으로 전면 개편...</td>\n",
              "      <td>전남 화순군청사 전경   화순군 제공  화순군  농지원부  농지대장 으로 전면 개편...</td>\n",
              "      <td>전남 단신 화순군 농지 원부 농 지대장 전면 개편</td>\n",
              "      <td>전남 화순군 청사 전경 화순군 제공 화순군 농지 원부 농 지대장 전면 개편 화순군 ...</td>\n",
              "      <td>전남 화순군 청사 전경 화순군 제공 화순군 농지 원부 농 지대장 전면 개편 화순군 ...</td>\n",
              "      <td>전남 단신 화순군 농지 원부 농 지대장 전면 개편 전남 화순군 청사 전경 화순군 제...</td>\n",
              "      <td>2022-03</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>502 rows × 11 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c569e19-9e5a-4cb4-86dd-86abf14c0df5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8c569e19-9e5a-4cb4-86dd-86abf14c0df5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8c569e19-9e5a-4cb4-86dd-86abf14c0df5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c66bf736-c020-49fd-a1bd-f8b22c8795ec\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c66bf736-c020-49fd-a1bd-f8b22c8795ec')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c66bf736-c020-49fd-a1bd-f8b22c8795ec button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dfs['peak2']['summary'].apply(lambda x: len(x)).hist()\n",
        "pd.Series([len(x) for x in dfs['peak2']['summary']]).hist()"
      ],
      "metadata": {
        "id": "_ST8JAOjA3P5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "outputId": "7ea26880-87ee-42f4-a3bc-daec61d31932"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 6
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dfs['peak1']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "WoiXsxhK8qzQ",
        "outputId": "bfd9a6e7-bc9d-4d02-fda4-d196446611cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Unnamed: 0        작성일     작성자                                    제목  \\\n",
              "0          6327 2021-04-01  파이낸셜뉴스          \"청년이 살고 싶은 충남\" 청년정책에 989억 투입   \n",
              "1          6328 2021-04-01    서울경제       청년국민의힘, 강남·광화문역서 사전투표 독려 캠페인 펼쳐   \n",
              "2          6329 2021-04-01    매일경제      박영선 \"서울 19~24세 청년들에게 교통비 40% 할인\"   \n",
              "3          6330 2021-04-01    부산일보                  김해시 청년거점 ‘김해청년다옴’ 개소   \n",
              "4          6331 2021-04-01    부산일보       지친 청년들 따뜻한 한 끼로 위로할 젊은 외식사업가 모집   \n",
              "..          ...        ...     ...                                   ...   \n",
              "418        6745 2021-04-30    부산일보               중앙-부산시 청년정책조정위원회 간담회 개최   \n",
              "419        6746 2021-04-30     뉴스1  정세균 1호 공약 '신생아 1억 적립'…포퓰리즘이냐 '국가찬스'냐   \n",
              "420        6747 2021-04-30    노컷뉴스        천안시, 청년정책 발굴 함께할 '청년정책네트워커' 모집   \n",
              "421        6748 2021-04-30    JTBC        [뉴스체크｜정치] 위안부 피해자 지원단체, 청와대 면담   \n",
              "422        6749 2021-04-30     뉴시스     '재보선 참패 수습' 與 비대위 활동 종료…\"치열하게 쇄신\"   \n",
              "\n",
              "                                                    내용  \\\n",
              "0    충남도,청년정책 시행계획 수립…일자리‧주거‧교육 등 5개 추진 전략   충남도청사 ...   \n",
              "1    황보승희 국민의힘 의원/연합뉴스 [서울경제]  청년국민의힘(대표 황보승희 국민의힘 ...   \n",
              "2    청년 표심 겨냥…朴 \"서울청년패스 도입\" 사전투표 하루 앞두고 투표 독려하며 지지 ...   \n",
              "3    지역 청년층 소통·교류·커뮤니티 지원 김해시는 1일 지역청년활동 거점공간이 될 청년...   \n",
              "4    지난해 5월 열린 부산 청년 행복박스 사전 오프라인 행사의 모습. 부산시 제공 부산...   \n",
              "..                                                 ...   \n",
              "418  부산청년센터에서 중앙 청년정책조정위원회, 부산시 청년위원회 등과 함께 간담회 개최 ...   \n",
              "419  기금 조성해 신생아에게 20년간 지원금 적립·자립지원 이재명 기본소득은 비판 \"청년...   \n",
              "420  5월 1일~17일까지 접수 60명 모집해 각 분야별로 정책 발굴 [천안=대전CBS ...   \n",
              "421  동영상 뉴스                  1. 정부, EU에 백신수출 신속허가 요...   \n",
              "422  윤호중 \"민심 경청…당 새로운 출발 밑거름 삼겠다\" 이학영 \"당이 주체 돼 손실보상...   \n",
              "\n",
              "                                            clean_text  \\\n",
              "0    충남도 청년정책 시행계획 수립 일자리 주거 교육 등  개 추진 전략   충남도청사 ...   \n",
              "1    황보승희 국민의힘 의원      청년국민의힘 대표 황보승희 국민의힘 의원 이 청년들...   \n",
              "2    청년 표심 겨냥    서울청년패스 도입  사전투표 하루 앞두고 투표 독려하며 지지 ...   \n",
              "3    지역 청년층 소통 교류 커뮤니티 지원 김해시는  일 지역청년활동 거점공간이 될 청년...   \n",
              "4    지난해  월 열린 부산 청년 행복박스 사전 오프라인 행사의 모습  부산시 제공 부산...   \n",
              "..                                                 ...   \n",
              "418  부산청년센터에서 중앙 청년정책조정위원회  부산시 청년위원회 등과 함께 간담회 개최 ...   \n",
              "419  기금 조성해 신생아에게   년간 지원금 적립 자립지원 이재명 기본소득은 비판  청년...   \n",
              "420   월  일   일까지 접수   명 모집해 각 분야별로 정책 발굴  천안 대전 인상준...   \n",
              "421  동영상 뉴스                     정부  에 백신수출 신속허가 요청 ...   \n",
              "422  윤호중  민심 경청 당 새로운 출발 밑거름 삼겠다  이학영  당이 주체 돼 손실보상...   \n",
              "\n",
              "                       clean_title  \\\n",
              "0                청년 충남 청년 정책 억 투 입   \n",
              "1     청년 국민 힘 강남 광화문역 사전 투표 독려 캠페인   \n",
              "2                 박영선 서울 청년 교통비 할인   \n",
              "3               김해시 청년 거점 김해 청년 개소   \n",
              "4               청년 끼 위 로 외식 사업가 모집   \n",
              "..                             ...   \n",
              "418     중앙 부산시 청년 정책 조정 위원회 간담회 개최   \n",
              "419   정세균 호 공약 신생아 억 적립 포퓰리즘 국가 찬스   \n",
              "420    천안시 청년 정책 발굴 청년 정책 네트 워커 모집   \n",
              "421  뉴스 체크 정치 위안부 피해자 지원 단체 청와대 면담   \n",
              "422       보선 참패 수습 비대위 활동 종료 치열 쇄신   \n",
              "\n",
              "                                          clean_text_2  \\\n",
              "0    충남 청년 정책 시행 계획 수립 일자리 주거 교육 개 추진 전략 충남 도청사 전경 ...   \n",
              "1    황보승희 국민 힘 의원 청년 국민 힘 대표 황보승희 국민 힘 의원 청년 투표 참여 ...   \n",
              "2    청년 표 겨냥 서울 청년 패스 도입 사전 투표 하루 투표 독려 호소 박영선 서울 시...   \n",
              "3    지역 청년층 소통 교류 커뮤니티 지원 김해시 지역 청년 활동 거점 공간 청년 센터 ...   \n",
              "4    지난해 부산 청년 행복 박스 사전 오프라인 행사 모습 부산시 제공 부산시 청년 행복...   \n",
              "..                                                 ...   \n",
              "418  부산 청년 센터 중앙 청년 정책 조정 위원회 부산시 청년 위원회 간담회 개최 중앙 ...   \n",
              "419  기금 조성 신생아 간 지원금 적립 자립 지원 이재명 기본소득 비판 청년 정책 쟁점 ...   \n",
              "420  접수 모집 분야 정책 발굴 천안 대전 인상 기자 천안시 제공 충남 천안시 청년 정책...   \n",
              "421  동영상 뉴스 정부 백신 수출 신속 허가 요청 정부 화이자 백신 국내 공급 원활 수출...   \n",
              "422  윤호중 민심 경청 출발 밑거름 이학영 당 주체 손실 보상제 재난 지원금 협의 오영환...   \n",
              "\n",
              "                                        clean_contents  \\\n",
              "0    충남 청년 정책 시행 계획 수립 일자리 주거 교육 개 추진 전략 충남 도청사 전경 ...   \n",
              "1    황보승희 국민 힘 의원 청년 국민 힘 대표 황보승희 국민 힘 의원 청년 투표 참여 ...   \n",
              "2    청년 표 겨냥 서울 청년 패스 도입 사전 투표 하루 투표 독려 호소 박영선 서울 시...   \n",
              "3    지역 청년층 소통 교류 커뮤니티 지원 김해시 지역 청년 활동 거점 공간 청년 센터 ...   \n",
              "4    지난해 부산 청년 행복 박스 사전 오프라인 행사 모습 부산시 제공 부산시 청년 행복...   \n",
              "..                                                 ...   \n",
              "418  부산 청년 센터 중앙 청년 정책 조정 위원회 부산시 청년 위원회 간담회 개최 중앙 ...   \n",
              "419  기금 조성 신생아 간 지원금 적립 자립 지원 이재명 기본소득 비판 청년 정책 쟁점 ...   \n",
              "420  접수 모집 분야 정책 발굴 천안 대전 인상 기자 천안시 제공 충남 천안시 청년 정책...   \n",
              "421  동영상 뉴스 정부 백신 수출 신속 허가 요청 정부 화 이 자 백신 국내 공급 원활 ...   \n",
              "422  윤호중 민심 경청 출발 밑거름 이학영 당 주체 손실 보상제 재난 지원금 협의 오영환...   \n",
              "\n",
              "                                               summary        월  \n",
              "0    청년 충남 청년 정책 억 투 입 충남 청년 정책 시행 계획 수립 일자리 주거 교육 ...  2021-04  \n",
              "1    청년 국민 힘 강남 광화문역 사전 투표 독려 캠페인 황보승희 국민 힘 의원 청년 국...  2021-04  \n",
              "2    박영선 서울 청년 교통비 할인 청년 표 겨냥 서울 청년 패스 도입 사전 투표 하루 ...  2021-04  \n",
              "3    김해시 청년 거점 김해 청년 개소 지역 청년층 소통 교류 커뮤니티 지원 김해시 지역...  2021-04  \n",
              "4    청년 끼 위 로 외식 사업가 모집 지난해 부산 청년 행복 박스 사전 오프라인 행사 ...  2021-04  \n",
              "..                                                 ...      ...  \n",
              "418  중앙 부산시 청년 정책 조정 위원회 간담회 개최 부산 청년 센터 중앙 청년 정책 조...  2021-04  \n",
              "419  정세균 호 공약 신생아 억 적립 포퓰리즘 국가 찬스 기금 조성 신생아 간 지원금 적...  2021-04  \n",
              "420  천안시 청년 정책 발굴 청년 정책 네트 워커 모집 접수 모집 분야 정책 발굴 천안 ...  2021-04  \n",
              "421  뉴스 체크 정치 위안부 피해자 지원 단체 청와대 면담 동영상 뉴스 정부 백신 수출 ...  2021-04  \n",
              "422  보선 참패 수습 비대위 활동 종료 치열 쇄신 윤호중 민심 경청 출발 밑거름 이학영 ...  2021-04  \n",
              "\n",
              "[423 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ac921ba0-914e-47b8-8457-77519fb84103\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>작성일</th>\n",
              "      <th>작성자</th>\n",
              "      <th>제목</th>\n",
              "      <th>내용</th>\n",
              "      <th>clean_text</th>\n",
              "      <th>clean_title</th>\n",
              "      <th>clean_text_2</th>\n",
              "      <th>clean_contents</th>\n",
              "      <th>summary</th>\n",
              "      <th>월</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6327</td>\n",
              "      <td>2021-04-01</td>\n",
              "      <td>파이낸셜뉴스</td>\n",
              "      <td>\"청년이 살고 싶은 충남\" 청년정책에 989억 투입</td>\n",
              "      <td>충남도,청년정책 시행계획 수립…일자리‧주거‧교육 등 5개 추진 전략   충남도청사 ...</td>\n",
              "      <td>충남도 청년정책 시행계획 수립 일자리 주거 교육 등  개 추진 전략   충남도청사 ...</td>\n",
              "      <td>청년 충남 청년 정책 억 투 입</td>\n",
              "      <td>충남 청년 정책 시행 계획 수립 일자리 주거 교육 개 추진 전략 충남 도청사 전경 ...</td>\n",
              "      <td>충남 청년 정책 시행 계획 수립 일자리 주거 교육 개 추진 전략 충남 도청사 전경 ...</td>\n",
              "      <td>청년 충남 청년 정책 억 투 입 충남 청년 정책 시행 계획 수립 일자리 주거 교육 ...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6328</td>\n",
              "      <td>2021-04-01</td>\n",
              "      <td>서울경제</td>\n",
              "      <td>청년국민의힘, 강남·광화문역서 사전투표 독려 캠페인 펼쳐</td>\n",
              "      <td>황보승희 국민의힘 의원/연합뉴스 [서울경제]  청년국민의힘(대표 황보승희 국민의힘 ...</td>\n",
              "      <td>황보승희 국민의힘 의원      청년국민의힘 대표 황보승희 국민의힘 의원 이 청년들...</td>\n",
              "      <td>청년 국민 힘 강남 광화문역 사전 투표 독려 캠페인</td>\n",
              "      <td>황보승희 국민 힘 의원 청년 국민 힘 대표 황보승희 국민 힘 의원 청년 투표 참여 ...</td>\n",
              "      <td>황보승희 국민 힘 의원 청년 국민 힘 대표 황보승희 국민 힘 의원 청년 투표 참여 ...</td>\n",
              "      <td>청년 국민 힘 강남 광화문역 사전 투표 독려 캠페인 황보승희 국민 힘 의원 청년 국...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6329</td>\n",
              "      <td>2021-04-01</td>\n",
              "      <td>매일경제</td>\n",
              "      <td>박영선 \"서울 19~24세 청년들에게 교통비 40% 할인\"</td>\n",
              "      <td>청년 표심 겨냥…朴 \"서울청년패스 도입\" 사전투표 하루 앞두고 투표 독려하며 지지 ...</td>\n",
              "      <td>청년 표심 겨냥    서울청년패스 도입  사전투표 하루 앞두고 투표 독려하며 지지 ...</td>\n",
              "      <td>박영선 서울 청년 교통비 할인</td>\n",
              "      <td>청년 표 겨냥 서울 청년 패스 도입 사전 투표 하루 투표 독려 호소 박영선 서울 시...</td>\n",
              "      <td>청년 표 겨냥 서울 청년 패스 도입 사전 투표 하루 투표 독려 호소 박영선 서울 시...</td>\n",
              "      <td>박영선 서울 청년 교통비 할인 청년 표 겨냥 서울 청년 패스 도입 사전 투표 하루 ...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6330</td>\n",
              "      <td>2021-04-01</td>\n",
              "      <td>부산일보</td>\n",
              "      <td>김해시 청년거점 ‘김해청년다옴’ 개소</td>\n",
              "      <td>지역 청년층 소통·교류·커뮤니티 지원 김해시는 1일 지역청년활동 거점공간이 될 청년...</td>\n",
              "      <td>지역 청년층 소통 교류 커뮤니티 지원 김해시는  일 지역청년활동 거점공간이 될 청년...</td>\n",
              "      <td>김해시 청년 거점 김해 청년 개소</td>\n",
              "      <td>지역 청년층 소통 교류 커뮤니티 지원 김해시 지역 청년 활동 거점 공간 청년 센터 ...</td>\n",
              "      <td>지역 청년층 소통 교류 커뮤니티 지원 김해시 지역 청년 활동 거점 공간 청년 센터 ...</td>\n",
              "      <td>김해시 청년 거점 김해 청년 개소 지역 청년층 소통 교류 커뮤니티 지원 김해시 지역...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>6331</td>\n",
              "      <td>2021-04-01</td>\n",
              "      <td>부산일보</td>\n",
              "      <td>지친 청년들 따뜻한 한 끼로 위로할 젊은 외식사업가 모집</td>\n",
              "      <td>지난해 5월 열린 부산 청년 행복박스 사전 오프라인 행사의 모습. 부산시 제공 부산...</td>\n",
              "      <td>지난해  월 열린 부산 청년 행복박스 사전 오프라인 행사의 모습  부산시 제공 부산...</td>\n",
              "      <td>청년 끼 위 로 외식 사업가 모집</td>\n",
              "      <td>지난해 부산 청년 행복 박스 사전 오프라인 행사 모습 부산시 제공 부산시 청년 행복...</td>\n",
              "      <td>지난해 부산 청년 행복 박스 사전 오프라인 행사 모습 부산시 제공 부산시 청년 행복...</td>\n",
              "      <td>청년 끼 위 로 외식 사업가 모집 지난해 부산 청년 행복 박스 사전 오프라인 행사 ...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>6745</td>\n",
              "      <td>2021-04-30</td>\n",
              "      <td>부산일보</td>\n",
              "      <td>중앙-부산시 청년정책조정위원회 간담회 개최</td>\n",
              "      <td>부산청년센터에서 중앙 청년정책조정위원회, 부산시 청년위원회 등과 함께 간담회 개최 ...</td>\n",
              "      <td>부산청년센터에서 중앙 청년정책조정위원회  부산시 청년위원회 등과 함께 간담회 개최 ...</td>\n",
              "      <td>중앙 부산시 청년 정책 조정 위원회 간담회 개최</td>\n",
              "      <td>부산 청년 센터 중앙 청년 정책 조정 위원회 부산시 청년 위원회 간담회 개최 중앙 ...</td>\n",
              "      <td>부산 청년 센터 중앙 청년 정책 조정 위원회 부산시 청년 위원회 간담회 개최 중앙 ...</td>\n",
              "      <td>중앙 부산시 청년 정책 조정 위원회 간담회 개최 부산 청년 센터 중앙 청년 정책 조...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>6746</td>\n",
              "      <td>2021-04-30</td>\n",
              "      <td>뉴스1</td>\n",
              "      <td>정세균 1호 공약 '신생아 1억 적립'…포퓰리즘이냐 '국가찬스'냐</td>\n",
              "      <td>기금 조성해 신생아에게 20년간 지원금 적립·자립지원 이재명 기본소득은 비판 \"청년...</td>\n",
              "      <td>기금 조성해 신생아에게   년간 지원금 적립 자립지원 이재명 기본소득은 비판  청년...</td>\n",
              "      <td>정세균 호 공약 신생아 억 적립 포퓰리즘 국가 찬스</td>\n",
              "      <td>기금 조성 신생아 간 지원금 적립 자립 지원 이재명 기본소득 비판 청년 정책 쟁점 ...</td>\n",
              "      <td>기금 조성 신생아 간 지원금 적립 자립 지원 이재명 기본소득 비판 청년 정책 쟁점 ...</td>\n",
              "      <td>정세균 호 공약 신생아 억 적립 포퓰리즘 국가 찬스 기금 조성 신생아 간 지원금 적...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>6747</td>\n",
              "      <td>2021-04-30</td>\n",
              "      <td>노컷뉴스</td>\n",
              "      <td>천안시, 청년정책 발굴 함께할 '청년정책네트워커' 모집</td>\n",
              "      <td>5월 1일~17일까지 접수 60명 모집해 각 분야별로 정책 발굴 [천안=대전CBS ...</td>\n",
              "      <td>월  일   일까지 접수   명 모집해 각 분야별로 정책 발굴  천안 대전 인상준...</td>\n",
              "      <td>천안시 청년 정책 발굴 청년 정책 네트 워커 모집</td>\n",
              "      <td>접수 모집 분야 정책 발굴 천안 대전 인상 기자 천안시 제공 충남 천안시 청년 정책...</td>\n",
              "      <td>접수 모집 분야 정책 발굴 천안 대전 인상 기자 천안시 제공 충남 천안시 청년 정책...</td>\n",
              "      <td>천안시 청년 정책 발굴 청년 정책 네트 워커 모집 접수 모집 분야 정책 발굴 천안 ...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>6748</td>\n",
              "      <td>2021-04-30</td>\n",
              "      <td>JTBC</td>\n",
              "      <td>[뉴스체크｜정치] 위안부 피해자 지원단체, 청와대 면담</td>\n",
              "      <td>동영상 뉴스                  1. 정부, EU에 백신수출 신속허가 요...</td>\n",
              "      <td>동영상 뉴스                     정부  에 백신수출 신속허가 요청 ...</td>\n",
              "      <td>뉴스 체크 정치 위안부 피해자 지원 단체 청와대 면담</td>\n",
              "      <td>동영상 뉴스 정부 백신 수출 신속 허가 요청 정부 화이자 백신 국내 공급 원활 수출...</td>\n",
              "      <td>동영상 뉴스 정부 백신 수출 신속 허가 요청 정부 화 이 자 백신 국내 공급 원활 ...</td>\n",
              "      <td>뉴스 체크 정치 위안부 피해자 지원 단체 청와대 면담 동영상 뉴스 정부 백신 수출 ...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>6749</td>\n",
              "      <td>2021-04-30</td>\n",
              "      <td>뉴시스</td>\n",
              "      <td>'재보선 참패 수습' 與 비대위 활동 종료…\"치열하게 쇄신\"</td>\n",
              "      <td>윤호중 \"민심 경청…당 새로운 출발 밑거름 삼겠다\" 이학영 \"당이 주체 돼 손실보상...</td>\n",
              "      <td>윤호중  민심 경청 당 새로운 출발 밑거름 삼겠다  이학영  당이 주체 돼 손실보상...</td>\n",
              "      <td>보선 참패 수습 비대위 활동 종료 치열 쇄신</td>\n",
              "      <td>윤호중 민심 경청 출발 밑거름 이학영 당 주체 손실 보상제 재난 지원금 협의 오영환...</td>\n",
              "      <td>윤호중 민심 경청 출발 밑거름 이학영 당 주체 손실 보상제 재난 지원금 협의 오영환...</td>\n",
              "      <td>보선 참패 수습 비대위 활동 종료 치열 쇄신 윤호중 민심 경청 출발 밑거름 이학영 ...</td>\n",
              "      <td>2021-04</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>423 rows × 11 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac921ba0-914e-47b8-8457-77519fb84103')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ac921ba0-914e-47b8-8457-77519fb84103 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ac921ba0-914e-47b8-8457-77519fb84103');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f3713805-7f31-4827-ab68-9dbd5d363e23\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3713805-7f31-4827-ab68-9dbd5d363e23')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f3713805-7f31-4827-ab68-9dbd5d363e23 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dfs['peak1'].info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BWXIVjYwMhcI",
        "outputId": "a568787d-319f-4d6b-c0ea-ea4d25c57e0a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 423 entries, 0 to 422\n",
            "Data columns (total 11 columns):\n",
            " #   Column          Non-Null Count  Dtype         \n",
            "---  ------          --------------  -----         \n",
            " 0   Unnamed: 0      423 non-null    int64         \n",
            " 1   작성일             423 non-null    datetime64[ns]\n",
            " 2   작성자             423 non-null    object        \n",
            " 3   제목              423 non-null    object        \n",
            " 4   내용              423 non-null    object        \n",
            " 5   clean_text      423 non-null    object        \n",
            " 6   clean_title     422 non-null    object        \n",
            " 7   clean_text_2    423 non-null    object        \n",
            " 8   clean_contents  423 non-null    object        \n",
            " 9   summary         422 non-null    object        \n",
            " 10  월               423 non-null    object        \n",
            "dtypes: datetime64[ns](1), int64(1), object(9)\n",
            "memory usage: 36.5+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dfs['peak2'].info()      # 데이터프레임의 정보(열의 데이터 타입, 누락된 값 등) 출력\n",
        "dfs['peak2'].describe()  # 숫자형 열의 기술 통계량(평균, 표준편차, 최소, 최대 등) 출력"
      ],
      "metadata": {
        "id": "KiK9sCm2mqvs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 631
        },
        "outputId": "8c9d71ab-821b-4bc3-f8af-ad5a0c526344"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 502 entries, 0 to 501\n",
            "Data columns (total 11 columns):\n",
            " #   Column          Non-Null Count  Dtype         \n",
            "---  ------          --------------  -----         \n",
            " 0   Unnamed: 0      502 non-null    int64         \n",
            " 1   작성일             502 non-null    datetime64[ns]\n",
            " 2   작성자             502 non-null    object        \n",
            " 3   제목              502 non-null    object        \n",
            " 4   내용              502 non-null    object        \n",
            " 5   clean_text      502 non-null    object        \n",
            " 6   clean_title     502 non-null    object        \n",
            " 7   clean_text_2    502 non-null    object        \n",
            " 8   clean_contents  502 non-null    object        \n",
            " 9   summary         502 non-null    object        \n",
            " 10  월               502 non-null    object        \n",
            "dtypes: datetime64[ns](1), int64(1), object(9)\n",
            "memory usage: 43.3+ KB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Unnamed: 0                            작성일\n",
              "count    502.000000                            502\n",
              "mean   12286.500000  2022-03-17 08:24:51.633466112\n",
              "min    12036.000000            2022-03-01 00:00:00\n",
              "25%    12161.250000            2022-03-09 00:00:00\n",
              "50%    12286.500000            2022-03-19 00:00:00\n",
              "75%    12411.750000            2022-03-27 00:00:00\n",
              "max    12537.000000            2022-03-31 00:00:00\n",
              "std      145.059183                            NaN"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e7a9df48-d5e3-4d03-87d7-2e86a4d21326\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>작성일</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>502.000000</td>\n",
              "      <td>502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>12286.500000</td>\n",
              "      <td>2022-03-17 08:24:51.633466112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>12036.000000</td>\n",
              "      <td>2022-03-01 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>12161.250000</td>\n",
              "      <td>2022-03-09 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>12286.500000</td>\n",
              "      <td>2022-03-19 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>12411.750000</td>\n",
              "      <td>2022-03-27 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>12537.000000</td>\n",
              "      <td>2022-03-31 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>145.059183</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7a9df48-d5e3-4d03-87d7-2e86a4d21326')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e7a9df48-d5e3-4d03-87d7-2e86a4d21326 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e7a9df48-d5e3-4d03-87d7-2e86a4d21326');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f0eadae3-0494-4009-bdaa-281b77eb1fde\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0eadae3-0494-4009-bdaa-281b77eb1fde')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f0eadae3-0494-4009-bdaa-281b77eb1fde button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "LDA topic 모델링"
      ],
      "metadata": {
        "id": "QVrT4FqyTNw4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install gensim"
      ],
      "metadata": {
        "id": "iM4Mukz_pH3s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5d07cbcb-4756-497e-a53f-4c7a48a1cbd1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: gensim in /usr/local/lib/python3.10/dist-packages (4.3.2)\n",
            "Requirement already satisfied: numpy>=1.18.5 in /usr/local/lib/python3.10/dist-packages (from gensim) (1.26.0)\n",
            "Requirement already satisfied: scipy>=1.7.0 in /usr/local/lib/python3.10/dist-packages (from gensim) (1.11.3)\n",
            "Requirement already satisfied: smart-open>=1.8.1 in /usr/local/lib/python3.10/dist-packages (from gensim) (6.4.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from gensim.models.ldamodel import LdaModel\n",
        "from gensim.models.callbacks import CoherenceMetric\n",
        "from gensim import corpora, models\n",
        "from gensim.models.callbacks import PerplexityMetric\n",
        "\n",
        "import gensim, spacy, logging, warnings\n",
        "from gensim.models import CoherenceModel\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "ASf_rrsSTQAk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import gensim\n",
        "from gensim import corpora\n",
        "import pandas as pd  # 필요한 패키지를 import\n",
        "\n",
        "def train_lda_model_from_dataframe(dataframe, column_name='summary', num_topics=5, no_below=10, passes=10):\n",
        "    # 'column_name' 열에서 텍스트 데이터 추출\n",
        "    text_data = dataframe[column_name].dropna().tolist()\n",
        "\n",
        "    # 텍스트 데이터를 토큰화\n",
        "    tokenized_text = [text.split() for text in text_data]\n",
        "\n",
        "    data_word = []\n",
        "    for i in range(len(tokenized_text)):\n",
        "        try:\n",
        "            data_word.append(tokenized_text[i])\n",
        "        except Exception as e:\n",
        "            continue\n",
        "\n",
        "    # 한 글자로 이루어진 단어 제거\n",
        "    data_word = [[word for word in text if len(word) > 1] for text in data_word]\n",
        "\n",
        "    # Create dictionary\n",
        "    id2word = corpora.Dictionary(data_word)\n",
        "    id2word.filter_extremes(no_below=no_below)  # no_below 회 이하로 등장한 단어는 삭제\n",
        "\n",
        "    # Create corpus: term document frequency\n",
        "    corpus = [id2word.doc2bow(text) for text in data_word]\n",
        "\n",
        "    # Build LDA model\n",
        "    lda_model = gensim.models.ldamodel.LdaModel(corpus=corpus,\n",
        "                                                id2word=id2word,\n",
        "                                                num_topics=num_topics,\n",
        "                                                random_state=50,\n",
        "                                                update_every=1,\n",
        "                                                chunksize=10,\n",
        "                                                passes=passes,\n",
        "                                                alpha='symmetric',\n",
        "                                                iterations=50,\n",
        "                                                per_word_topics=True)\n",
        "\n",
        "    return lda_model, corpus, id2word  # lda_model, corpus, id2word 모두 반환\n"
      ],
      "metadata": {
        "id": "S6ehdQIgCpx4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 데이터프레임 'df'에서 'summary' 열을 사용하여 LDA 모델 학습\n",
        "lda_model_5, corpus, id2word = train_lda_model_from_dataframe(dfs['peak2'], column_name='summary', num_topics=5, no_below=10, passes=10)\n",
        "# lda_model_7, _, _ = train_lda_model_from_dataframe(dfs['peak2'], column_name='summary', num_topics=7, no_below=10, passes=10)  # 나머지 변수는 사용하지 않으므로 '_'로 표시\n",
        "# lda_model_9, _, _ = train_lda_model_from_dataframe(dfs['peak2'], column_name='summary', num_topics=9, no_below=10, passes=10)"
      ],
      "metadata": {
        "id": "UdNLh8QaFxVZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(lda_model_5.print_topics())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JsxYB2Susk4_",
        "outputId": "33efe5b7-96b8-4a30-c665-0caf4c4e1ea3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[(0, '0.023*\"시장\" + 0.018*\"도시\" + 0.017*\"미래\" + 0.017*\"예비\" + 0.015*\"시민\" + 0.014*\"기업\" + 0.013*\"일자리\" + 0.013*\"추진\" + 0.012*\"지역\" + 0.010*\"주택\"'), (1, '0.032*\"후보\" + 0.032*\"여성\" + 0.025*\"공약\" + 0.022*\"정부\" + 0.021*\"개편\" + 0.021*\"정치\" + 0.019*\"국민\" + 0.019*\"의원\" + 0.018*\"당선인\" + 0.017*\"대통령\"'), (2, '0.024*\"모집\" + 0.023*\"서울\" + 0.021*\"서울시\" + 0.019*\"보유\" + 0.019*\"기준\" + 0.018*\"이하\" + 0.018*\"지난해\" + 0.017*\"올해\" + 0.016*\"대상\" + 0.016*\"화폐\"'), (3, '0.038*\"대전\" + 0.033*\"센터\" + 0.025*\"창업\" + 0.024*\"프로그램\" + 0.022*\"활동\" + 0.021*\"주민\" + 0.021*\"지역\" + 0.020*\"운영\" + 0.019*\"내달\" + 0.019*\"문화\"'), (4, '0.034*\"위원회\" + 0.026*\"정부\" + 0.023*\"위원장\" + 0.021*\"복지\" + 0.019*\"업무\" + 0.018*\"통상\" + 0.018*\"부처\" + 0.017*\"방안\" + 0.017*\"사항\" + 0.016*\"회의\"')]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pyLDAvis\n",
        "import pyLDAvis.gensim_models as gensimvis\n",
        "\n",
        "# Visualize the topics (corpus를 이용하여 lda_model_5 시각화)\n",
        "pyLDAvis.enable_notebook()\n",
        "vis = gensimvis.prepare(lda_model_5, corpus, dictionary=lda_model_5.id2word)\n",
        "pyLDAvis.display(vis)"
      ],
      "metadata": {
        "id": "JQTh7VbTyc1b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 880
        },
        "outputId": "15e0f5f5-49b7-4950-9afd-320308293726"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v1.0.0.css\">\n",
              "\n",
              "\n",
              "<div id=\"ldavis_el16921348818476094885987768546\" style=\"background-color:white;\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "\n",
              "var ldavis_el16921348818476094885987768546_data = {\"mdsDat\": {\"x\": [-0.07346730190315096, -0.185781808207207, 0.2229778513145751, 0.23973108390760056, -0.20345982511181818], \"y\": [0.04827701962686463, -0.29459990317103724, -0.07626370637287035, 0.07097169092427705, 0.2516148989927658], \"topics\": [1, 2, 3, 4, 5], \"cluster\": [1, 1, 1, 1, 1], \"Freq\": [26.612478367758886, 25.960648225775657, 18.42184557145788, 14.983391206496488, 14.021636628511096]}, \"tinfo\": {\"Term\": [\"\\uc5ec\\uc131\", \"\\ub300\\uc804\", \"\\ud6c4\\ubcf4\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc815\\ubd80\", \"\\uc13c\\ud130\", \"\\uacf5\\uc57d\", \"\\ubaa8\\uc9d1\", \"\\uc815\\uce58\", \"\\uac1c\\ud3b8\", \"\\ucc3d\\uc5c5\", \"\\uc11c\\uc6b8\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\ub3c4\\uc2dc\", \"\\uc9c0\\uc5ed\", \"\\ub2f9\\uc120\\uc778\", \"\\uc704\\uc6d0\\uc7a5\", \"\\uc758\\uc6d0\", \"\\ubcf5\\uc9c0\", \"\\uc11c\\uc6b8\\uc2dc\", \"\\ub300\\ud1b5\\ub839\", \"\\ubcf4\\uc720\", \"\\uc608\\ube44\", \"\\ud65c\\ub3d9\", \"\\uc774\\ud558\", \"\\uc8fc\\ubbfc\", \"\\ub0b4\\ub2ec\", \"\\uae30\\uc900\", \"\\uad6d\\ubbfc\", \"\\uc2dc\\uc7a5\", \"\\ub3c4\\uc2dc\", \"\\uc608\\ube44\", \"\\uae30\\uc5c5\", \"\\uc870\\uc131\", \"\\uc911\\uc2ec\", \"\\uc8fc\\uac70\", \"\\ud658\\uacbd\", \"\\uc774\\ud6c4\", \"\\ubcf4\\uc7a5\", \"\\ud3c9\\uac00\", \"\\ub300\\ud68c\", \"\\uacbd\\ud5d8\", \"\\ud65c\\uc131\", \"\\uae30\\ubc18\", \"\\uc778\\uad6c\", \"\\ud504\\ub85c\\uc81d\\ud2b8\", \"\\ud589\\ubcf5\", \"\\uc2dc\\uc2a4\\ud15c\", \"\\uad50\\ud1b5\", \"\\uc2ec\\uc0ac\", \"\\uc790\\uae08\", \"\\uc7ac\\uc0dd\", \"\\uc9c1\\uc6d0\", \"\\ud604\\uc2e4\", \"\\ub300\\ucd9c\", \"\\uc720\\uce58\", \"\\uc544\\uc774\\ub514\\uc5b4\", \"\\uc5f0\\uad6c\", \"\\uc2e4\\ud604\", \"\\ud65c\\uc6a9\", \"\\uad6d\\uc81c\", \"\\uac1c\\ubc1c\", \"\\uc794\\uc561\", \"\\ubbf8\\ub798\", \"\\ud601\\uc2e0\", \"\\uc2dc\\ubbfc\", \"\\uc8fc\\ud0dd\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc2dc\\uc7a5\", \"\\uad6c\\ucd95\", \"\\uc18c\\ud1b5\", \"\\uac74\\uac15\", \"\\ucd94\\uc9c4\", \"\\uc9c0\\uc5ed\", \"\\uacbd\\uc81c\", \"\\uc0ac\\ud68c\", \"\\ubcf5\\uc9c0\", \"\\uacc4\\ud68d\", \"\\uc0b0\\uc5c5\", \"\\uad50\\uc721\", \"\\ucc38\\uc5ec\", \"\\uac00\\ub2a5\", \"\\uc5ec\\uc131\", \"\\uacf5\\uc57d\", \"\\uc815\\uce58\", \"\\ub2f9\\uc120\\uc778\", \"\\ub300\\ud1b5\\ub839\", \"\\uc120\\uac70\", \"\\uc724\\uc11d\\uc5f4\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\uc5f0\\ub839\", \"\\ub300\\uc120\", \"\\uc9c0\\uc801\", \"\\ubb38\\uc7ac\", \"\\ubc15\\uc9c0\\ud604\", \"\\uae30\\uc790\\ub2e8\", \"\\uad6d\\ud68c\", \"\\uc548\\ubcf4\", \"\\ub2f9\\uc6d0\", \"\\uad6d\\uc815\", \"\\uc0ac\\ub78c\", \"\\uc804\\uba74\", \"\\uc758\\uc6d0\", \"\\uac1c\\ud3b8\", \"\\uacf5\\ucc9c\", \"\\ube44\\ud310\", \"\\uc8fc\\uc7a5\", \"\\ub300\\ubcc0\\uc778\", \"\\ubd80\\ubd84\", \"\\ubc1c\\uc5b8\", \"\\ub300\\ubcc0\", \"\\uc5b8\\uae09\", \"\\ud6c4\\ubcf4\", \"\\ud3d0\\uc9c0\", \"\\uad6d\\ubbfc\", \"\\ub54c\\ubb38\", \"\\uacf5\\ub3d9\", \"\\uac00\\uc871\", \"\\ud3c9\\ub4f1\", \"\\uc815\\ubd80\", \"\\ubb38\\uc81c\", \"\\uac15\\uc870\", \"\\uc9c0\\ubc29\", \"\\uae30\\uc790\", \"\\uc11c\\uc6b8\", \"\\ub300\\ud45c\", \"\\ud544\\uc694\", \"\\uc0ac\\ud68c\", \"\\ubaa8\\uc9d1\", \"\\uc774\\ud558\", \"\\ubcf4\\uc720\", \"\\ud654\\ud3d0\", \"\\uc18c\\ub4dd\", \"\\uac00\\uc785\", \"\\uc790\\uc0b0\", \"\\uae08\\uc561\", \"\\uacc4\\uc88c\", \"\\uac00\\uc0c1\", \"\\ube44\\uc911\", \"\\uc9c0\\uae09\", \"\\uce74\\ub4dc\", \"\\ud604\\uae08\", \"\\uc2ec\\ub9ac\", \"\\uc624\\uc138\\ud6c8\", \"\\ud569\\uc0b0\", \"\\uac70\\ub798\", \"\\ubd80\\ub2f4\", \"\\uc218\\ub2f9\", \"\\uc120\\ubc1c\", \"\\uc801\\uae08\", \"\\ub300\\uc911\\uad50\\ud1b5\", \"\\uac70\\uc8fc\", \"\\uc811\\uc218\", \"\\ud615\\uc131\", \"\\uc790\\uaca9\", \"\\uc7a5\\uae30\", \"\\uc774\\uc6a9\\uc790\", \"\\ubcf4\\uc99d\\uae08\", \"\\uc11c\\uc6b8\\uc2dc\", \"\\uae30\\uc900\", \"\\ucc28\\uc9c0\", \"\\uac1c\\uc6d4\", \"\\uc0c1\\ub2f4\", \"\\uc804\\uccb4\", \"\\uc62c\\ud574\", \"\\uae08\\uc735\", \"\\uad6d\\ub0b4\", \"\\uc9c0\\ub09c\\ud574\", \"\\ub300\\uc0c1\", \"\\uc11c\\uc6b8\", \"\\ucde8\\uc5c5\", \"\\uc2e0\\uccad\", \"\\uc628\\ub77c\\uc778\", \"\\ud655\\ub300\", \"\\uacc4\\ud68d\", \"\\uc608\\uc0b0\", \"\\ud22c\\uc790\", \"\\uc885\\ud569\", \"\\uc2dc\\uc7a5\", \"\\ub300\\uc804\", \"\\ub0b4\\ub2ec\", \"\\uc804\\uc2dc\", \"\\uad70\\uc218\", \"\\ubd80\\uc0b0\", \"\\uc81c\\uc791\", \"\\uacbd\\ub0a8\", \"\\uacf5\\ubaa8\", \"\\uc804\\ub0a8\", \"\\uc81c\\ubcf4\", \"\\ud611\\uc57d\", \"\\uc778\\uc99d\", \"\\ud648\\ud398\\uc774\\uc9c0\", \"\\ud655\\ubcf4\", \"\\ud5a5\\uc0c1\", \"\\uc804\\uacbd\", \"\\ub300\\uc804\\uc2dc\", \"\\uc804\\ub2ec\", \"\\uc99d\\uc9c4\", \"\\ud64d\\ubcf4\", \"\\uc0ac\\ubb34\\uc18c\", \"\\uad50\\ub958\", \"\\uce74\\uce74\\uc624\\ud1a1\", \"\\uad6c\\uccad\\uc7a5\", \"\\ud611\\ub825\", \"\\ucd2c\\uc601\", \"\\uccb4\\ud5d8\", \"\\uae30\\ub150\", \"\\uc218\\ud589\", \"\\uc778\\ub825\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\uc13c\\ud130\", \"\\uc8fc\\ubbfc\", \"\\ud65c\\ub3d9\", \"\\uc120\\uc815\", \"\\ucc3d\\uc5c5\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\uc9c4\\ud589\", \"\\uc6b4\\uc601\", \"\\ubb38\\ud654\", \"\\uc81c\\uacf5\", \"\\uc815\\ubcf4\", \"\\uc9c0\\uc5ed\", \"\\uad00\\ub9ac\", \"\\ucc38\\uc5ec\", \"\\uad50\\uc721\", \"\\ucd94\\uc9c4\", \"\\ub2e4\\uc591\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc704\\uc6d0\\uc7a5\", \"\\ud1b5\\uc0c1\", \"\\ubd80\\ucc98\", \"\\ubc29\\uc548\", \"\\ud68c\\uc758\", \"\\uc870\\uc9c1\", \"\\uc704\\uc6d0\", \"\\ucd1d\\ub9ac\", \"\\uc218\\uc704\", \"\\uc778\\uc218\\uc704\", \"\\ubd84\\uacfc\", \"\\uc778\\uc218\", \"\\uc870\\uc815\", \"\\ub17c\\uc758\", \"\\uc804\\ubb38\\uac00\", \"\\ud68c\\uc758\\uc2e4\", \"\\uc2dc\\uc815\", \"\\ubc1c\\uc804\", \"\\ubcf4\\uac74\", \"\\uc911\\uc810\", \"\\uc790\\uce58\", \"\\uacf5\\ubb34\\uc6d0\", \"\\uad6d\\ubb34\", \"\\uad50\\uc721\\ubd80\", \"\\uacc4\\uc2b9\", \"\\uc784\\uc2dc\\ud68c\", \"\\ubcf4\\uace0\\ud68c\", \"\\uad6d\\ubb34\\ucd1d\\ub9ac\", \"\\uc758\\uc7a5\", \"\\uae30\\uc220\", \"\\uae30\\ub2a5\", \"\\uc5c5\\ubb34\", \"\\uc758\\ud68c\", \"\\ub178\\uc778\", \"\\uc758\\uacac\", \"\\uacfc\\uc81c\", \"\\uc0ac\\ud56d\", \"\\ubc29\\ud5a5\", \"\\ubcf5\\uc9c0\", \"\\uc815\\ubd80\", \"\\ud1a0\\ub860\\ud68c\", \"\\uc791\\uc131\", \"\\uad00\\ub9ac\", \"\\uc0b0\\uc5c5\", \"\\uad00\\ub828\", \"\\uacbd\\uc81c\", \"\\ucd94\\uc9c4\", \"\\uc8fc\\uc694\"], \"Freq\": [676.0, 473.0, 684.0, 397.0, 778.0, 442.0, 530.0, 363.0, 455.0, 463.0, 382.0, 560.0, 318.0, 405.0, 511.0, 395.0, 262.0, 399.0, 438.0, 337.0, 372.0, 291.0, 364.0, 307.0, 279.0, 286.0, 241.0, 310.0, 441.0, 688.0, 405.1192301130028, 363.8638931351665, 316.41016167775774, 185.36472201717282, 189.76487529746618, 163.89459757318443, 155.4297502064532, 171.90777364440694, 138.950602267164, 146.55861028447006, 135.88888159006783, 129.48753506491835, 124.62203246378103, 125.2195311370239, 111.93798452711565, 108.89350961141015, 104.50771927999284, 96.45751644661443, 91.1254275731641, 89.31187271024356, 93.73200122335098, 195.62162582583787, 141.0895162573994, 81.06408476948016, 79.08963932229955, 77.20348767543372, 80.58294642761196, 73.09008223569032, 71.00371312604051, 72.19953851441876, 98.61934981861504, 144.5223223752072, 127.86642327145779, 375.47561659830865, 143.91594014141398, 318.9310074352227, 226.62057013197983, 295.3355959126371, 509.8666930777221, 134.09817454973657, 131.9352166764005, 139.78521738110402, 290.7790142738377, 255.0793272576865, 182.87581209763584, 203.3654327135135, 199.28586454122893, 194.57203672477038, 157.39976409609804, 165.4881897521437, 146.81298270929733, 136.67400842250692, 675.4188713386937, 529.6729000618319, 454.6863347294109, 394.41109940647607, 372.04694831459636, 308.62541670295667, 272.0093019201652, 215.91591162797724, 247.44435296344065, 186.1393927507141, 157.47454156108327, 121.63626008591807, 118.7540615354645, 178.71896730673808, 101.35802538984062, 100.1248246758869, 96.45146975855006, 91.37089662423925, 91.9774049632759, 169.43877841443796, 396.2951554987748, 459.079952579306, 78.4873287927509, 77.96162141750918, 75.51233254176123, 73.42584772202359, 71.28976542083775, 70.94432821190534, 68.35038043078133, 69.46024810928502, 675.8649943768092, 275.07316676589215, 396.6991154421757, 115.27074968718539, 132.2610707558536, 213.93614092284247, 157.73562764971214, 480.4203023571414, 305.16594874291377, 149.37383233466983, 136.2429302848486, 174.69428650794544, 212.67848800731824, 146.71277063977354, 134.72154860801353, 133.03285084718567, 362.7525293122148, 278.4883508636302, 290.3603886170448, 239.71600181716084, 201.59274672102404, 174.2547148755439, 169.99029372410047, 162.13497325804016, 129.87649139515133, 181.68486840176297, 154.97951315532163, 121.18733931803652, 116.96193060524935, 98.24465700056757, 101.09757514519634, 99.63565247115407, 91.70244865667172, 85.91289802870504, 82.43694847892257, 75.97822095106658, 89.44799957825671, 73.27107756361517, 70.40774289264829, 71.83869904545715, 69.34169067812135, 67.79345661022995, 60.73888537707829, 60.39847301329107, 63.33781577488134, 54.50722326285961, 321.1584055534631, 287.07374811114624, 137.30058748485857, 110.1682183465554, 127.91074002394822, 187.61563655663406, 265.64412285584405, 216.33593861660364, 145.7124278539993, 267.6127331106345, 247.3614490915529, 347.54029652075025, 182.8597280272782, 143.1433812814176, 145.56233646566278, 191.5888478630599, 237.8161746031356, 177.5222489812299, 153.85287242278727, 148.5173889340945, 147.00826637508268, 472.33465156116125, 240.68903267953638, 138.91170795285518, 184.79974406051204, 155.09432331613954, 118.7601438920289, 121.40957073634891, 110.17199960964074, 97.26895935410954, 96.79408619800624, 98.5332963259808, 90.52979062233241, 86.31929583429782, 85.73409320483084, 75.8118653514676, 76.97463290310573, 67.01888432081192, 67.16641811969195, 64.68845694082019, 58.89292205316512, 58.969753820076896, 57.62134451175495, 56.95347391703561, 52.04608294430968, 48.89534162714409, 48.58932684078067, 41.46301786345807, 41.706158260598, 41.1371145333413, 38.572824815110046, 298.81602564574484, 411.58090889211394, 256.12569671172224, 272.43760631516733, 141.0236404991137, 309.1604857577528, 116.0971568077775, 172.22563746885137, 242.29782046589577, 234.09219466646186, 206.51085082584163, 87.5769505317377, 255.28901379222035, 159.25255132199376, 186.01782887275314, 136.58443465244002, 152.96247632583916, 86.89953711961333, 396.33606864672066, 261.50243890125785, 210.01154964487827, 205.83456884206794, 194.68294036259488, 188.0171145702776, 184.57414051909046, 153.2716147771889, 157.71210893757072, 144.64795648200234, 140.81253475157035, 138.43789827391748, 124.62392524901212, 102.42205769900484, 94.29487571907278, 90.07225244647131, 95.84648270015232, 80.21615051572599, 75.99419512915875, 71.78153628529385, 77.33878975669191, 72.6088100898912, 67.34602972545798, 65.78066106036661, 58.29947568851432, 59.22259113902425, 57.944418854831206, 62.74293763280634, 57.76947041710576, 51.44558611578325, 124.90734591934594, 83.15750983813722, 214.06165364589495, 159.1783342298222, 74.5044483989113, 117.4989062634482, 134.00789638768634, 191.38487603612572, 93.0115542490029, 238.96305191214378, 295.97350216840874, 124.80507317726502, 121.57608119356212, 135.11531606657869, 130.78243773655166, 126.53866833031792, 114.08958505050214, 125.82481665563105, 96.35763096344915], \"Total\": [676.0, 473.0, 684.0, 397.0, 778.0, 442.0, 530.0, 363.0, 455.0, 463.0, 382.0, 560.0, 318.0, 405.0, 511.0, 395.0, 262.0, 399.0, 438.0, 337.0, 372.0, 291.0, 364.0, 307.0, 279.0, 286.0, 241.0, 310.0, 441.0, 688.0, 405.9768593674131, 364.73177969857807, 317.2457080746334, 186.19725524394195, 190.69365487275488, 164.7274731749835, 156.27847472670214, 172.8732147813474, 139.80427486124628, 147.47185105760266, 136.76039931558313, 130.35124436236478, 125.47108526754255, 126.07336229179359, 112.77358949861656, 109.74609105749717, 105.34264772610253, 97.33169987114627, 91.96741612786695, 90.20732435394942, 94.6807486142091, 197.60927477498782, 142.58360546770194, 81.93482749610544, 79.9399674461923, 78.03689397160946, 81.497755848918, 73.94195002811598, 71.86268410817728, 73.07522641291318, 99.95671391248257, 147.11124010832688, 130.10748516318108, 390.91041345792996, 148.6818398663717, 352.2487381799132, 254.67238752121506, 356.4394135912666, 688.0687009303211, 146.6840264389379, 156.0593726675411, 176.25217986724022, 616.799357492982, 511.0294552396187, 321.6457873958154, 425.05103474447685, 438.9191190164696, 479.24012816613975, 288.84129550084015, 414.54908685981, 466.02145640927233, 318.5480402852001, 676.2155146959552, 530.4759756617009, 455.47849796619454, 395.20468680203015, 372.84009726552574, 309.4212271783826, 272.8038562744833, 216.70816002094372, 248.4751784018193, 186.9326304344634, 158.2822671986685, 122.43982868073209, 119.55522914350705, 179.93802167708523, 102.15017981627751, 100.92861432318266, 97.2555389682705, 92.16474831745232, 92.77986800601461, 170.9394757509519, 399.9396075722524, 463.3533657663162, 79.29233828853143, 78.76801427820038, 76.32210752962835, 74.21922218139983, 72.09224108772962, 71.75368487432958, 69.15119261535253, 70.27759920812773, 684.9553430774206, 285.3884199821962, 441.37359583300014, 120.80424844820853, 144.61289102204225, 262.2900242925192, 183.78797528742803, 778.1624087232415, 450.6764435652542, 212.7635484380174, 204.0267371170113, 356.7152376636544, 560.7754208758852, 248.8657786204831, 290.5080495956393, 425.05103474447685, 363.70883525566444, 279.3022312540373, 291.28086576391024, 240.56275787108368, 202.3968381494811, 175.06241538871947, 170.80244236701836, 162.93076993878577, 130.6725438519789, 182.81611036935954, 155.99126184560365, 121.98519139986195, 117.791948963973, 99.03677814512002, 101.91330231371484, 100.44521334586518, 92.52258004510112, 86.73084325697825, 83.22953393760902, 76.77530213292309, 90.3961544256697, 74.06553997283136, 71.20245206961755, 72.66053421694848, 70.15806632558504, 68.6104844155167, 61.548340202004674, 61.210852496863595, 64.22558094585139, 55.30160775020585, 337.12789294856543, 310.51986991299236, 147.16963231162663, 118.28488944168622, 141.46257105401108, 223.67561189687797, 339.47833189624134, 269.3668957345102, 168.53844203947807, 356.6052338475822, 352.0714749223009, 560.7754208758852, 266.504064892296, 186.3625446481349, 194.86254551958, 314.13931989268934, 479.24012816613975, 294.3127598506958, 226.12226017455805, 243.75968093334885, 688.0687009303211, 473.20388528605275, 241.7241600280834, 139.7783472323923, 186.04250044117586, 156.1670458444738, 119.63100643373372, 122.32307592098992, 111.04027605551259, 98.13933949755943, 97.66782484220738, 99.4285405906027, 91.41426406582471, 87.18045733214039, 86.61513648988624, 76.69061673023663, 77.94706451395787, 67.88424984779984, 68.0440447933014, 65.57386355107867, 59.76301801258327, 59.85456939413906, 58.48625161215141, 57.81963757282892, 52.90957385547987, 49.764589659684724, 49.46475520357996, 42.33351279450629, 42.58205508383722, 42.00452438003768, 39.44925493624795, 318.0353839178097, 442.4350090871041, 286.54152480545486, 307.64092547412224, 153.91455693485915, 382.17008291077093, 131.86033522461165, 207.68616792548983, 350.7222848875456, 362.461855882606, 315.84247180430424, 102.9421974156117, 511.0294552396187, 295.08694786130377, 466.02145640927233, 414.54908685981, 616.799357492982, 131.39844291961242, 397.2188728903042, 262.3939590445606, 210.88292202284225, 206.69687081323988, 195.55972719813482, 188.8907537555199, 185.50902626804952, 154.12224956031903, 158.60816468679835, 145.4991112671205, 141.65985555599926, 139.2972065323236, 125.47447054167293, 103.29376911789156, 95.15783648061831, 90.94606150978613, 96.88497552684976, 81.13604339033853, 76.87354834294595, 72.64867974504575, 78.28158788650019, 73.53646463829236, 68.21006860268874, 66.63938120756359, 59.15799115044875, 60.09564575269261, 58.81095775352169, 63.68955152428521, 58.64701706494598, 52.31702125950367, 128.5378488899009, 85.2057970995441, 235.180059546955, 190.7099397620062, 78.7910118610124, 136.89661822387157, 163.95558702992673, 266.70278927516586, 106.57079933628715, 438.9191190164696, 778.1624087232415, 195.5722988071241, 208.50965536196722, 295.08694786130377, 288.84129550084015, 314.9704623099957, 321.6457873958154, 616.799357492982, 142.46693191969308], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -3.9925, -4.0999, -4.2396, -4.7743, -4.7509, -4.8974, -4.9505, -4.8497, -5.0625, -5.0092, -5.0848, -5.1331, -5.1714, -5.1666, -5.2787, -5.3063, -5.3474, -5.4276, -5.4844, -5.5045, -5.4562, -4.7205, -5.0473, -5.6014, -5.6261, -5.6502, -5.6074, -5.705, -5.7339, -5.7172, -5.4054, -5.0232, -5.1457, -4.0685, -5.0274, -4.2317, -4.5734, -4.3086, -3.7625, -5.0981, -5.1144, -5.0566, -4.3241, -4.4551, -4.7879, -4.6817, -4.7019, -4.7259, -4.9379, -4.8878, -5.0075, -5.0791, -3.4565, -3.6996, -3.8523, -3.9945, -4.0528, -4.2397, -4.366, -4.597, -4.4607, -4.7454, -4.9126, -5.1708, -5.1948, -4.7861, -5.3532, -5.3655, -5.4028, -5.4569, -5.4503, -4.8394, -3.9897, -3.8426, -5.6089, -5.6157, -5.6476, -5.6756, -5.7051, -5.71, -5.7472, -5.7311, -3.4559, -4.3548, -3.9887, -5.2246, -5.0871, -4.6062, -4.9109, -3.7972, -4.251, -4.9654, -5.0574, -4.8088, -4.6121, -4.9834, -5.0687, -5.0813, -3.7351, -3.9994, -3.9577, -4.1494, -4.3226, -4.4683, -4.4931, -4.5404, -4.7622, -4.4265, -4.5855, -4.8315, -4.867, -5.0414, -5.0127, -5.0273, -5.1103, -5.1755, -5.2168, -5.2984, -5.1352, -5.3347, -5.3745, -5.3544, -5.3898, -5.4124, -5.5222, -5.5279, -5.4803, -5.6305, -3.8569, -3.9691, -4.7067, -4.9268, -4.7775, -4.3944, -4.0467, -4.252, -4.6472, -4.0393, -4.118, -3.7779, -4.4201, -4.665, -4.6482, -4.3735, -4.1573, -4.4497, -4.5928, -4.6281, -4.6383, -3.2645, -3.9387, -4.4884, -4.203, -4.3782, -4.6451, -4.6231, -4.7202, -4.8447, -4.8496, -4.8318, -4.9165, -4.9642, -4.971, -5.094, -5.0788, -5.2173, -5.2151, -5.2526, -5.3465, -5.3452, -5.3683, -5.38, -5.4701, -5.5325, -5.5388, -5.6974, -5.6916, -5.7053, -5.7697, -3.7224, -3.4022, -3.8766, -3.8148, -4.4733, -3.6884, -4.6678, -4.2734, -3.9321, -3.9665, -4.0919, -4.9497, -3.8798, -4.3517, -4.1964, -4.5053, -4.392, -4.9575, -3.3736, -3.7894, -4.0087, -4.0288, -4.0845, -4.1194, -4.1378, -4.3237, -4.2951, -4.3816, -4.4085, -4.4255, -4.5306, -4.7268, -4.8095, -4.8553, -4.7931, -4.9712, -5.0252, -5.0823, -5.0077, -5.0708, -5.146, -5.1696, -5.2903, -5.2746, -5.2964, -5.2168, -5.2994, -5.4154, -4.5283, -4.9352, -3.9896, -4.2859, -5.045, -4.5895, -4.458, -4.1016, -4.8232, -3.8796, -3.6656, -4.5291, -4.5553, -4.4498, -4.4824, -4.5153, -4.6189, -4.521, -4.7878], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.3217, 1.3214, 1.3212, 1.3193, 1.3189, 1.3187, 1.3183, 1.3182, 1.3177, 1.3176, 1.3174, 1.3171, 1.317, 1.317, 1.3164, 1.316, 1.3158, 1.3148, 1.3146, 1.3138, 1.3137, 1.3137, 1.3133, 1.3131, 1.3131, 1.3131, 1.3125, 1.3122, 1.3118, 1.3117, 1.3103, 1.306, 1.3064, 1.2835, 1.2912, 1.2244, 1.2071, 1.1357, 1.0241, 1.2341, 1.1559, 1.092, 0.5718, 0.6289, 0.7591, 0.5866, 0.5342, 0.4224, 0.7167, 0.4055, 0.1687, 0.4776, 1.3474, 1.3471, 1.3468, 1.3466, 1.3465, 1.346, 1.3457, 1.3449, 1.3444, 1.3443, 1.3435, 1.342, 1.3419, 1.3418, 1.3408, 1.3406, 1.3403, 1.3399, 1.3399, 1.3398, 1.3394, 1.3393, 1.3384, 1.3383, 1.3379, 1.3378, 1.3374, 1.3372, 1.3369, 1.3369, 1.3352, 1.3118, 1.2419, 1.3017, 1.2593, 1.1448, 1.1957, 0.8663, 0.9587, 0.9949, 0.9448, 0.6347, 0.379, 0.8202, 0.5802, 0.187, 1.689, 1.6887, 1.6885, 1.6881, 1.6877, 1.687, 1.6869, 1.6867, 1.6855, 1.6854, 1.6851, 1.6851, 1.6846, 1.6836, 1.6836, 1.6835, 1.6827, 1.6822, 1.6821, 1.6812, 1.6811, 1.6808, 1.6804, 1.6803, 1.6799, 1.6797, 1.6784, 1.6783, 1.6777, 1.6772, 1.6431, 1.6131, 1.6222, 1.6205, 1.5909, 1.5158, 1.4464, 1.4724, 1.5461, 1.4045, 1.3386, 1.2132, 1.315, 1.4278, 1.3999, 1.1971, 0.9909, 1.1861, 1.3066, 1.1962, 0.1482, 1.8964, 1.8939, 1.892, 1.8915, 1.8913, 1.8909, 1.8907, 1.8904, 1.8893, 1.8892, 1.8892, 1.8885, 1.8883, 1.888, 1.8867, 1.8857, 1.8854, 1.8852, 1.8846, 1.8836, 1.8833, 1.8833, 1.8831, 1.8818, 1.8806, 1.8804, 1.8775, 1.8774, 1.8774, 1.8758, 1.8359, 1.8259, 1.786, 1.7767, 1.8108, 1.6862, 1.7709, 1.711, 1.5284, 1.461, 1.4733, 1.7366, 1.2042, 1.2814, 0.9798, 0.788, 0.5039, 1.4847, 1.9623, 1.9612, 1.9604, 1.9604, 1.9601, 1.9599, 1.9595, 1.959, 1.9589, 1.9587, 1.9586, 1.9584, 1.9578, 1.9561, 1.9555, 1.9549, 1.9538, 1.9532, 1.9531, 1.9526, 1.9525, 1.9519, 1.9518, 1.9516, 1.95, 1.9499, 1.9497, 1.9496, 1.9495, 1.9478, 1.9359, 1.9402, 1.8705, 1.7838, 1.9086, 1.8118, 1.7629, 1.6327, 1.8285, 1.3566, 0.9979, 1.5154, 1.4251, 1.1834, 1.1722, 1.0526, 0.9281, 0.3749, 1.5735]}, \"token.table\": {\"Topic\": [1, 2, 3, 4, 3, 3, 2, 5, 1, 2, 1, 4, 1, 3, 2, 3, 4, 3, 3, 1, 3, 4, 1, 3, 5, 1, 5, 3, 1, 3, 5, 2, 5, 4, 5, 2, 2, 3, 5, 1, 2, 5, 4, 5, 4, 1, 3, 4, 5, 5, 1, 4, 1, 3, 4, 1, 3, 5, 5, 1, 2, 2, 1, 2, 1, 4, 3, 2, 3, 4, 4, 5, 1, 4, 5, 1, 1, 2, 3, 4, 5, 2, 2, 3, 4, 3, 4, 5, 2, 5, 5, 1, 4, 5, 2, 2, 2, 2, 2, 3, 4, 2, 4, 4, 3, 1, 2, 1, 2, 4, 1, 1, 1, 2, 3, 2, 1, 2, 5, 1, 4, 5, 1, 2, 3, 2, 2, 2, 5, 5, 4, 5, 5, 5, 3, 1, 3, 1, 5, 3, 2, 4, 5, 5, 3, 2, 2, 4, 3, 5, 1, 2, 3, 5, 1, 5, 3, 4, 2, 3, 3, 5, 2, 3, 3, 4, 1, 4, 3, 1, 5, 3, 5, 4, 1, 2, 1, 1, 3, 4, 5, 3, 4, 1, 3, 1, 1, 2, 2, 1, 5, 2, 1, 2, 1, 2, 3, 4, 3, 3, 4, 3, 4, 1, 4, 5, 5, 5, 5, 1, 2, 1, 5, 2, 5, 5, 3, 5, 3, 3, 1, 1, 4, 5, 5, 4, 1, 4, 5, 3, 1, 3, 5, 3, 4, 5, 1, 2, 3, 3, 1, 4, 3, 4, 4, 4, 2, 4, 5, 4, 2, 3, 5, 3, 1, 4, 1, 2, 5, 2, 1, 3, 4, 4, 4, 1, 5, 5, 2, 3, 4, 1, 2, 4, 1, 2, 5, 2, 1, 2, 1, 5, 4, 3, 1, 3, 4, 1, 2, 1, 4, 2, 1, 3, 1, 3, 4, 2, 3, 1, 3, 4, 5, 1, 3, 4, 4, 5, 4, 1, 3, 4, 5, 3, 4, 3, 4, 2, 5, 5, 1, 3, 1, 1, 2, 2, 3, 3, 4, 1, 1, 2, 3, 5, 3, 1, 4, 1, 5, 3, 1, 4, 4, 3, 4, 4, 3, 1, 3, 4, 5, 4, 1, 1, 4, 5, 1, 1, 5, 5, 1, 2], \"Freq\": [0.4300764176020112, 0.26055724570048855, 0.14754446443280675, 0.16010144012921584, 0.9955358946883255, 0.9939312194090295, 0.8158907323190313, 0.1830035287444556, 0.2961033525832234, 0.7003079291254014, 0.9856486825427326, 0.013595154241968726, 0.059179156636494645, 0.9299581757163444, 0.9906046527597433, 0.00215818007137199, 0.00647454021411597, 0.9915734330541119, 0.990909312406426, 0.7943164169966764, 0.20425279294200252, 0.9891837585751644, 0.5689488473691754, 0.07461624227792464, 0.35442715082014203, 0.9896338207665403, 0.9817683005320977, 0.9948532122192346, 0.40689414040970856, 0.496619514961593, 0.09598528440434151, 0.9127816964801585, 0.08298015422546895, 0.9906315429638114, 0.9822596776769547, 0.9991027385149588, 0.9837015994681753, 0.1768771685389815, 0.8172945029042593, 0.32066498953351136, 0.2762163771229256, 0.403212412581742, 0.5388242385926635, 0.4574922780503747, 0.9916860527261011, 0.39802282824904356, 0.04824519130291437, 0.33047956042496346, 0.2243401395585518, 0.9804254483979385, 0.9894808817231322, 0.9828088984809379, 0.9135282365307987, 0.03408687449741786, 0.04772162429638501, 0.13053401784055157, 0.8662712093054787, 0.9904053549721284, 0.9889676048787023, 0.09968879066487706, 0.8994647703171861, 0.9873623230278842, 0.9904287178416027, 0.988740305515407, 0.005375115888190218, 0.9943964393151903, 0.9942873286664301, 0.19304525100683326, 0.8018802734129996, 0.9863309771524356, 0.011736290652051779, 0.9741121241202977, 0.9914862087257631, 0.023339429015726332, 0.9724762089885971, 0.9960733650828766, 0.3167792907869759, 0.4905873972364671, 0.05326377455710214, 0.08410069666910865, 0.056067131112739095, 0.9947869734904133, 0.07406933413454217, 0.9242564737658089, 0.9970041884601057, 0.04550269032593893, 0.8797186796348192, 0.06825403548890839, 0.05076721196392316, 0.9518852243235593, 0.9878324631639335, 0.29680717011128976, 0.6621083025559541, 0.0380522012963192, 0.9969517395864447, 0.9870903088750542, 0.9833525269512569, 0.9835726898562758, 0.08236963817190826, 0.7015620906365979, 0.21302492630665928, 0.995010874065722, 0.9974558846123485, 0.9869741530652195, 0.9831122098373541, 0.9882415833253249, 0.997746762562055, 0.11251044701770595, 0.5906798468429562, 0.2973490385467943, 0.9944399159450503, 0.9975938052998015, 0.04138927284617487, 0.951953275462022, 0.9980510914584569, 0.9964077973199476, 0.30176860126994487, 0.6767604660833322, 0.019969980966393408, 0.30072129861659946, 0.6455851731769199, 0.052419308933168714, 0.9592990800188999, 0.0025581308800503998, 0.0358138323207056, 0.9967321949442269, 0.9953558773841621, 0.9894962206380119, 0.9886365549428145, 0.9971378197026849, 0.12198463444923721, 0.8726593079830047, 0.9910710043551756, 0.9891732394437999, 0.9956026436527128, 0.9942471368486799, 0.994546130529004, 0.4533864928142556, 0.5445194561940054, 0.9852271918459773, 0.9848493947302809, 0.9925269390980473, 0.9966285371883082, 0.990687490692625, 0.9936454014546996, 0.9902496681522548, 0.9915944264335012, 0.9857225705106695, 0.2812119070964049, 0.7161529900721779, 0.4775897090146721, 0.3129036024578887, 0.12233825058503917, 0.08469571194348866, 0.5435510865154091, 0.45353625690139227, 0.9048329819421209, 0.09189709972849665, 0.37983119814222865, 0.6205692814718101, 0.952160906036256, 0.04449350028206804, 0.9986386610181086, 0.9845551568588271, 0.07796533504676058, 0.9160926867994368, 0.0678065690640086, 0.9312102151457182, 0.9980393065765779, 0.8458319275780016, 0.14737980556283362, 0.9899016726553445, 0.9965696610599621, 0.9760853290243402, 0.9056100573937864, 0.09368379904073652, 0.9863179223941505, 0.74120505599287, 0.21364145731559195, 0.04505364065839014, 0.9859982895040479, 0.7673215681294419, 0.230733058948014, 0.9879953814850744, 0.9910384386240035, 0.9866161161236509, 0.9938923980944855, 0.9907992958249764, 0.981820676538137, 0.08504122347161364, 0.9099410911462659, 0.998202474404182, 0.987260952304371, 0.9940630753892297, 0.9979936497467184, 0.22764898142366968, 0.6047987864688538, 0.16988729956990276, 0.9955676001769027, 0.7492460883681198, 0.25145930363039637, 0.7835551639310536, 0.21503581566528915, 0.19388559817863668, 0.690004628812207, 0.11119909307304163, 0.9927184454968663, 0.9984985971247392, 0.996931482934244, 0.9867127723972883, 0.9970533544303183, 0.13879086456999742, 0.8546595344573525, 0.9901494938294135, 0.007501132529010709, 0.9748261420891882, 0.162550520642427, 0.8337268639401901, 0.9809175576491137, 0.995337555134485, 0.9949488138896945, 0.9931403309759326, 0.9886118270934656, 0.9962185890115763, 0.9953419721246404, 0.9954682776253998, 0.8276301350284457, 0.16833155288714152, 0.9862107711811048, 0.9910909018796447, 0.9928100630363317, 0.995301926858317, 0.9927047806699562, 0.4124509239186372, 0.004795940975798107, 0.585104799047369, 0.9838019683453425, 0.007685952877697988, 0.007685952877697988, 0.9802183363329953, 0.9918562791305202, 0.005060491220053675, 0.9856135528989295, 0.987849901470141, 0.9883905933808759, 0.9846563384573491, 0.9886540207144568, 0.005850023791209804, 0.9895975538238747, 0.9944315607688634, 0.09835672210049769, 0.8405028979497075, 0.06259064133668034, 0.9834934685883336, 0.14571284057051978, 0.8548486646803827, 0.0012850787814856482, 0.6168378151131111, 0.38038331931975183, 0.998949460911259, 0.0759872472593565, 0.2659553654077477, 0.6553900076119498, 0.9931622840655423, 0.9947253939213222, 0.9935699629816057, 0.9874748580776934, 0.9972560566011812, 0.13127683740589466, 0.6112577741711971, 0.25845127364285514, 0.9955837774904085, 0.10469686730524753, 0.8934132676714456, 0.14038345411462755, 0.1824984903490158, 0.6738405797502122, 0.9957796300435845, 0.891341233376116, 0.10601856079804023, 0.996362464848567, 0.9836284888809569, 0.9912485932656436, 0.9919236803372916, 0.22714192701563227, 0.7515313140764129, 0.022433770569445163, 0.3283883325623879, 0.666579301917683, 0.49899276330447917, 0.49899276330447917, 0.991898857519781, 0.9888934954161988, 0.0070134290455049556, 0.15407862892188576, 0.01444487146142679, 0.828172630455136, 0.061153920538055094, 0.9308985681903942, 0.3154361199002407, 0.1738117395368673, 0.3991232537513249, 0.11158284513477901, 0.18316452053716512, 0.005233272015347575, 0.8085405263712003, 0.9684998313043527, 0.9961656155091431, 0.9906043161101842, 0.4717903747221575, 0.07619981997230724, 0.24805473310134055, 0.2042803684363981, 0.6866687008093365, 0.31143990255286846, 0.9932767139780052, 0.9858242353768387, 0.3579239004038854, 0.6391498221497953, 0.9958132123057997, 0.31841181821028436, 0.681047500060886, 0.9968003991662222, 0.13602630945197708, 0.8596862757364951, 0.9635990136430754, 0.03503996413247547, 0.05974178019421321, 0.9401469620036711, 0.9932016616691497, 0.2616106510844882, 0.4647031302158673, 0.17555451585932763, 0.09638287145217987, 0.9943518647572691, 0.9967473028873032, 0.9909947688559356, 0.968511017414235, 0.026903083817062082, 0.9895313825374972, 0.9885905966403618, 0.9846358693015782, 0.995689963987632, 0.9911021701607658, 0.9864596106941366, 0.9872326057492175, 0.9976606608767544, 0.23238097040808822, 0.611193785182917, 0.044566213502921025, 0.11141553375730257, 0.9928980485996456, 0.9918192525942046, 0.07801302756781234, 0.8841476457685399, 0.03575597096858066, 0.9962454674992406, 0.9852860337806195, 0.9952842913810762, 0.9908657093420589, 0.011679593539714542, 0.9869256541058788], \"Term\": [\"\\uac00\\ub2a5\", \"\\uac00\\ub2a5\", \"\\uac00\\ub2a5\", \"\\uac00\\ub2a5\", \"\\uac00\\uc0c1\", \"\\uac00\\uc785\", \"\\uac00\\uc871\", \"\\uac00\\uc871\", \"\\uac15\\uc870\", \"\\uac15\\uc870\", \"\\uac1c\\ubc1c\", \"\\uac1c\\ubc1c\", \"\\uac1c\\uc6d4\", \"\\uac1c\\uc6d4\", \"\\uac1c\\ud3b8\", \"\\uac1c\\ud3b8\", \"\\uac1c\\ud3b8\", \"\\uac70\\ub798\", \"\\uac70\\uc8fc\", \"\\uac74\\uac15\", \"\\uac74\\uac15\", \"\\uacbd\\ub0a8\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacbd\\ud5d8\", \"\\uacc4\\uc2b9\", \"\\uacc4\\uc88c\", \"\\uacc4\\ud68d\", \"\\uacc4\\ud68d\", \"\\uacc4\\ud68d\", \"\\uacf5\\ub3d9\", \"\\uacf5\\ub3d9\", \"\\uacf5\\ubaa8\", \"\\uacf5\\ubb34\\uc6d0\", \"\\uacf5\\uc57d\", \"\\uacf5\\ucc9c\", \"\\uacfc\\uc81c\", \"\\uacfc\\uc81c\", \"\\uad00\\ub828\", \"\\uad00\\ub828\", \"\\uad00\\ub828\", \"\\uad00\\ub9ac\", \"\\uad00\\ub9ac\", \"\\uad50\\ub958\", \"\\uad50\\uc721\", \"\\uad50\\uc721\", \"\\uad50\\uc721\", \"\\uad50\\uc721\", \"\\uad50\\uc721\\ubd80\", \"\\uad50\\ud1b5\", \"\\uad6c\\uccad\\uc7a5\", \"\\uad6c\\ucd95\", \"\\uad6c\\ucd95\", \"\\uad6c\\ucd95\", \"\\uad6d\\ub0b4\", \"\\uad6d\\ub0b4\", \"\\uad6d\\ubb34\", \"\\uad6d\\ubb34\\ucd1d\\ub9ac\", \"\\uad6d\\ubbfc\", \"\\uad6d\\ubbfc\", \"\\uad6d\\uc815\", \"\\uad6d\\uc81c\", \"\\uad6d\\ud68c\", \"\\uad70\\uc218\", \"\\uad70\\uc218\", \"\\uae08\\uc561\", \"\\uae08\\uc735\", \"\\uae08\\uc735\", \"\\uae30\\ub150\", \"\\uae30\\ub2a5\", \"\\uae30\\ub2a5\", \"\\uae30\\ubc18\", \"\\uae30\\uc220\", \"\\uae30\\uc220\", \"\\uae30\\uc5c5\", \"\\uae30\\uc790\", \"\\uae30\\uc790\", \"\\uae30\\uc790\", \"\\uae30\\uc790\", \"\\uae30\\uc790\", \"\\uae30\\uc790\\ub2e8\", \"\\uae30\\uc900\", \"\\uae30\\uc900\", \"\\ub0b4\\ub2ec\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ub178\\uc778\", \"\\ub178\\uc778\", \"\\ub17c\\uc758\", \"\\ub2e4\\uc591\", \"\\ub2e4\\uc591\", \"\\ub2e4\\uc591\", \"\\ub2f9\\uc120\\uc778\", \"\\ub2f9\\uc6d0\", \"\\ub300\\ubcc0\", \"\\ub300\\ubcc0\\uc778\", \"\\ub300\\uc0c1\", \"\\ub300\\uc0c1\", \"\\ub300\\uc0c1\", \"\\ub300\\uc120\", \"\\ub300\\uc804\", \"\\ub300\\uc804\\uc2dc\", \"\\ub300\\uc911\\uad50\\ud1b5\", \"\\ub300\\ucd9c\", \"\\ub300\\ud1b5\\ub839\", \"\\ub300\\ud45c\", \"\\ub300\\ud45c\", \"\\ub300\\ud45c\", \"\\ub300\\ud68c\", \"\\ub3c4\\uc2dc\", \"\\ub54c\\ubb38\", \"\\ub54c\\ubb38\", \"\\ubaa8\\uc9d1\", \"\\ubb38\\uc7ac\", \"\\ubb38\\uc81c\", \"\\ubb38\\uc81c\", \"\\ubb38\\uc81c\", \"\\ubb38\\ud654\", \"\\ubb38\\ud654\", \"\\ubb38\\ud654\", \"\\ubbf8\\ub798\", \"\\ubbf8\\ub798\", \"\\ubbf8\\ub798\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\ubc15\\uc9c0\\ud604\", \"\\ubc1c\\uc5b8\", \"\\ubc1c\\uc804\", \"\\ubc29\\uc548\", \"\\ubc29\\ud5a5\", \"\\ubc29\\ud5a5\", \"\\ubcf4\\uac74\", \"\\ubcf4\\uace0\\ud68c\", \"\\ubcf4\\uc720\", \"\\ubcf4\\uc7a5\", \"\\ubcf4\\uc99d\\uae08\", \"\\ubcf5\\uc9c0\", \"\\ubcf5\\uc9c0\", \"\\ubd80\\ub2f4\", \"\\ubd80\\ubd84\", \"\\ubd80\\uc0b0\", \"\\ubd80\\ucc98\", \"\\ubd84\\uacfc\", \"\\ube44\\uc911\", \"\\ube44\\ud310\", \"\\uc0ac\\ub78c\", \"\\uc0ac\\ubb34\\uc18c\", \"\\uc0ac\\ud56d\", \"\\uc0ac\\ud56d\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0b0\\uc5c5\", \"\\uc0b0\\uc5c5\", \"\\uc0c1\\ub2f4\", \"\\uc0c1\\ub2f4\", \"\\uc11c\\uc6b8\", \"\\uc11c\\uc6b8\", \"\\uc11c\\uc6b8\\uc2dc\", \"\\uc11c\\uc6b8\\uc2dc\", \"\\uc120\\uac70\", \"\\uc120\\ubc1c\", \"\\uc120\\uc815\", \"\\uc120\\uc815\", \"\\uc13c\\ud130\", \"\\uc13c\\ud130\", \"\\uc18c\\ub4dd\", \"\\uc18c\\ud1b5\", \"\\uc18c\\ud1b5\", \"\\uc218\\ub2f9\", \"\\uc218\\uc704\", \"\\uc218\\ud589\", \"\\uc2dc\\ubbfc\", \"\\uc2dc\\ubbfc\", \"\\uc2dc\\uc2a4\\ud15c\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc815\", \"\\uc2e0\\uccad\", \"\\uc2e0\\uccad\", \"\\uc2e4\\ud604\", \"\\uc2ec\\ub9ac\", \"\\uc2ec\\uc0ac\", \"\\uc544\\uc774\\ub514\\uc5b4\", \"\\uc548\\ubcf4\", \"\\uc5b8\\uae09\", \"\\uc5c5\\ubb34\", \"\\uc5c5\\ubb34\", \"\\uc5ec\\uc131\", \"\\uc5f0\\uad6c\", \"\\uc5f0\\ub839\", \"\\uc608\\ube44\", \"\\uc608\\uc0b0\", \"\\uc608\\uc0b0\", \"\\uc608\\uc0b0\", \"\\uc624\\uc138\\ud6c8\", \"\\uc628\\ub77c\\uc778\", \"\\uc628\\ub77c\\uc778\", \"\\uc62c\\ud574\", \"\\uc62c\\ud574\", \"\\uc6b4\\uc601\", \"\\uc6b4\\uc601\", \"\\uc6b4\\uc601\", \"\\uc704\\uc6d0\", \"\\uc704\\uc6d0\\uc7a5\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc720\\uce58\", \"\\uc724\\uc11d\\uc5f4\", \"\\uc758\\uacac\", \"\\uc758\\uacac\", \"\\uc758\\uc6d0\", \"\\uc758\\uc6d0\", \"\\uc758\\uc7a5\", \"\\uc758\\ud68c\", \"\\uc758\\ud68c\", \"\\uc774\\uc6a9\\uc790\", \"\\uc774\\ud558\", \"\\uc774\\ud6c4\", \"\\uc778\\uad6c\", \"\\uc778\\ub825\", \"\\uc778\\uc218\", \"\\uc778\\uc218\\uc704\", \"\\uc778\\uc99d\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc784\\uc2dc\\ud68c\", \"\\uc790\\uaca9\", \"\\uc790\\uae08\", \"\\uc790\\uc0b0\", \"\\uc790\\uce58\", \"\\uc791\\uc131\", \"\\uc791\\uc131\", \"\\uc791\\uc131\", \"\\uc794\\uc561\", \"\\uc794\\uc561\", \"\\uc794\\uc561\", \"\\uc7a5\\uae30\", \"\\uc7ac\\uc0dd\", \"\\uc7ac\\uc0dd\", \"\\uc801\\uae08\", \"\\uc804\\uacbd\", \"\\uc804\\ub0a8\", \"\\uc804\\ub2ec\", \"\\uc804\\uba74\", \"\\uc804\\uba74\", \"\\uc804\\ubb38\\uac00\", \"\\uc804\\uc2dc\", \"\\uc804\\uccb4\", \"\\uc804\\uccb4\", \"\\uc804\\uccb4\", \"\\uc811\\uc218\", \"\\uc815\\ubcf4\", \"\\uc815\\ubcf4\", \"\\uc815\\ubd80\", \"\\uc815\\ubd80\", \"\\uc815\\ubd80\", \"\\uc815\\uce58\", \"\\uc81c\\uacf5\", \"\\uc81c\\uacf5\", \"\\uc81c\\uacf5\", \"\\uc81c\\ubcf4\", \"\\uc81c\\uc791\", \"\\uc870\\uc131\", \"\\uc870\\uc815\", \"\\uc870\\uc9c1\", \"\\uc885\\ud569\", \"\\uc885\\ud569\", \"\\uc885\\ud569\", \"\\uc8fc\\uac70\", \"\\uc8fc\\ubbfc\", \"\\uc8fc\\ubbfc\", \"\\uc8fc\\uc694\", \"\\uc8fc\\uc694\", \"\\uc8fc\\uc694\", \"\\uc8fc\\uc7a5\", \"\\uc8fc\\ud0dd\", \"\\uc8fc\\ud0dd\", \"\\uc911\\uc2ec\", \"\\uc911\\uc810\", \"\\uc99d\\uc9c4\", \"\\uc9c0\\uae09\", \"\\uc9c0\\ub09c\\ud574\", \"\\uc9c0\\ub09c\\ud574\", \"\\uc9c0\\ub09c\\ud574\", \"\\uc9c0\\ubc29\", \"\\uc9c0\\ubc29\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc801\", \"\\uc9c1\\uc6d0\", \"\\uc9c1\\uc6d0\", \"\\uc9c4\\ud589\", \"\\uc9c4\\ud589\", \"\\uc9c4\\ud589\", \"\\ucc28\\uc9c0\", \"\\ucc28\\uc9c0\", \"\\ucc38\\uc5ec\", \"\\ucc38\\uc5ec\", \"\\ucc38\\uc5ec\", \"\\ucc38\\uc5ec\", \"\\ucc3d\\uc5c5\", \"\\ucc3d\\uc5c5\", \"\\ucc3d\\uc5c5\", \"\\uccb4\\ud5d8\", \"\\ucd1d\\ub9ac\", \"\\ucd2c\\uc601\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucde8\\uc5c5\", \"\\ucde8\\uc5c5\", \"\\uce74\\ub4dc\", \"\\uce74\\uce74\\uc624\\ud1a1\", \"\\ud1a0\\ub860\\ud68c\", \"\\ud1a0\\ub860\\ud68c\", \"\\ud1b5\\uc0c1\", \"\\ud22c\\uc790\", \"\\ud22c\\uc790\", \"\\ud3c9\\uac00\", \"\\ud3c9\\ub4f1\", \"\\ud3c9\\ub4f1\", \"\\ud3d0\\uc9c0\", \"\\ud3d0\\uc9c0\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\ud504\\ub85c\\uc81d\\ud2b8\", \"\\ud544\\uc694\", \"\\ud544\\uc694\", \"\\ud544\\uc694\", \"\\ud544\\uc694\", \"\\ud569\\uc0b0\", \"\\ud589\\ubcf5\", \"\\ud5a5\\uc0c1\", \"\\ud601\\uc2e0\", \"\\ud601\\uc2e0\", \"\\ud604\\uae08\", \"\\ud604\\uc2e4\", \"\\ud611\\ub825\", \"\\ud611\\uc57d\", \"\\ud615\\uc131\", \"\\ud648\\ud398\\uc774\\uc9c0\", \"\\ud64d\\ubcf4\", \"\\ud654\\ud3d0\", \"\\ud655\\ub300\", \"\\ud655\\ub300\", \"\\ud655\\ub300\", \"\\ud655\\ub300\", \"\\ud655\\ubcf4\", \"\\ud658\\uacbd\", \"\\ud65c\\ub3d9\", \"\\ud65c\\ub3d9\", \"\\ud65c\\ub3d9\", \"\\ud65c\\uc131\", \"\\ud65c\\uc6a9\", \"\\ud68c\\uc758\", \"\\ud68c\\uc758\\uc2e4\", \"\\ud6c4\\ubcf4\", \"\\ud6c4\\ubcf4\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [1, 2, 3, 4, 5]};\n",
              "\n",
              "function LDAvis_load_lib(url, callback){\n",
              "  var s = document.createElement('script');\n",
              "  s.src = url;\n",
              "  s.async = true;\n",
              "  s.onreadystatechange = s.onload = callback;\n",
              "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
              "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "}\n",
              "\n",
              "if(typeof(LDAvis) !== \"undefined\"){\n",
              "   // already loaded: just create the visualization\n",
              "   !function(LDAvis){\n",
              "       new LDAvis(\"#\" + \"ldavis_el16921348818476094885987768546\", ldavis_el16921348818476094885987768546_data);\n",
              "   }(LDAvis);\n",
              "}else if(typeof define === \"function\" && define.amd){\n",
              "   // require.js is available: use it to load d3/LDAvis\n",
              "   require.config({paths: {d3: \"https://d3js.org/d3.v5\"}});\n",
              "   require([\"d3\"], function(d3){\n",
              "      window.d3 = d3;\n",
              "      LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
              "        new LDAvis(\"#\" + \"ldavis_el16921348818476094885987768546\", ldavis_el16921348818476094885987768546_data);\n",
              "      });\n",
              "    });\n",
              "}else{\n",
              "    // require.js not available: dynamically load d3 & LDAvis\n",
              "    LDAvis_load_lib(\"https://d3js.org/d3.v5.js\", function(){\n",
              "         LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
              "                 new LDAvis(\"#\" + \"ldavis_el16921348818476094885987768546\", ldavis_el16921348818476094885987768546_data);\n",
              "            })\n",
              "         });\n",
              "}\n",
              "</script>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "def create_topics_table(lda_model, num_topics, topn=10):\n",
        "    topics_list = []\n",
        "\n",
        "    for topic_id in range(num_topics):\n",
        "        topic_words = lda_model.show_topic(topic_id, topn=topn)\n",
        "        topic_words_str = \", \".join(word for word, _ in topic_words)\n",
        "        topics_list.append({\"Topic\": f\"Topic {topic_id + 1}\", \"Top Words\": topic_words_str})\n",
        "\n",
        "    topics_table = pd.DataFrame(topics_list)\n",
        "    return topics_table"
      ],
      "metadata": {
        "id": "iZrMFHK4Irls",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "583254b3-61ee-4743-ec96-2e45ee868b2d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Example usage:\n",
        "topics_table1 = create_topics_table(lda_model_5, num_topics=5)\n",
        "# topics_table2 = create_topics_table(lda_model_7, num_topics=7)\n",
        "# topics_table3 = create_topics_table(lda_model_9, num_topics=9)"
      ],
      "metadata": {
        "id": "CIvUrr-_qyAU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "464b8c2a-7fb4-41be-d5c5-69f0ebaac808"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Topics for lda_model_5:\")\n",
        "print(topics_table1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K20QHNOSrzpr",
        "outputId": "f320d33f-27e2-40e1-8faa-a0f11a45afb7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Topics for lda_model_5:\n",
            "     Topic                                 Top Words\n",
            "0  Topic 1   시장, 도시, 미래, 예비, 시민, 기업, 일자리, 추진, 지역, 주택\n",
            "1  Topic 2  후보, 여성, 공약, 정부, 개편, 정치, 국민, 의원, 당선인, 대통령\n",
            "2  Topic 3  모집, 서울, 서울시, 보유, 기준, 이하, 지난해, 올해, 대상, 화폐\n",
            "3  Topic 4  대전, 센터, 창업, 프로그램, 활동, 주민, 지역, 운영, 내달, 문화\n",
            "4  Topic 5  위원회, 정부, 위원장, 복지, 업무, 통상, 부처, 방안, 사항, 회의\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# print(\"\\nTopics for lda_model_7:\")\n",
        "# print(topics_table2)"
      ],
      "metadata": {
        "id": "urxKbH0MIxTB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e48865a5-4491-4e3e-8e77-9ffb5feb36e3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# print(\"\\nTopics for lda_model_9:\")\n",
        "# print(topics_table3)"
      ],
      "metadata": {
        "id": "2mDSQuiEIybC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "507540b9-fc4c-458a-e166-0967ace844a4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dfs['peak2_sns'].info()      # 데이터프레임의 정보(열의 데이터 타입, 누락된 값 등) 출력\n",
        "dfs['peak2_sns'].describe()  # 숫자형 열의 기술 통계량(평균, 표준편차, 최소, 최대 등) 출력"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "id": "pL-YuA5uWYXT",
        "outputId": "a16c9542-2d47-4f59-dfda-328153ddeab5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1967 entries, 0 to 1966\n",
            "Data columns (total 11 columns):\n",
            " #   Column      Non-Null Count  Dtype         \n",
            "---  ------      --------------  -----         \n",
            " 0   Unnamed: 0  1967 non-null   int64         \n",
            " 1   Date        1967 non-null   datetime64[ns]\n",
            " 2   User        1967 non-null   object        \n",
            " 3   Contents    1967 non-null   object        \n",
            " 4   Type        1967 non-null   object        \n",
            " 5   Summary     1967 non-null   object        \n",
            " 6   감성분석        1967 non-null   int64         \n",
            " 7   Topic       1967 non-null   object        \n",
            " 8   Year        1967 non-null   int64         \n",
            " 9   Month       1967 non-null   int64         \n",
            " 10  Year-Month  1967 non-null   object        \n",
            "dtypes: datetime64[ns](1), int64(4), object(6)\n",
            "memory usage: 169.2+ KB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Unnamed: 0                           Date         감성분석    Year  \\\n",
              "count   1967.000000                           1967  1967.000000  1967.0   \n",
              "mean   34464.000000  2022-03-14 22:57:02.470767616     0.477885  2022.0   \n",
              "min    33481.000000            2022-03-01 00:00:00     0.000000  2022.0   \n",
              "25%    33972.500000            2022-03-09 00:00:00     0.000000  2022.0   \n",
              "50%    34464.000000            2022-03-14 00:00:00     0.000000  2022.0   \n",
              "75%    34955.500000            2022-03-23 00:00:00     1.000000  2022.0   \n",
              "max    35447.000000            2022-03-31 00:00:00     1.000000  2022.0   \n",
              "std      567.968309                            NaN     0.499638     0.0   \n",
              "\n",
              "        Month  \n",
              "count  1967.0  \n",
              "mean      3.0  \n",
              "min       3.0  \n",
              "25%       3.0  \n",
              "50%       3.0  \n",
              "75%       3.0  \n",
              "max       3.0  \n",
              "std       0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-950cfbef-daaa-490c-bc00-e29b64d1358c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Date</th>\n",
              "      <th>감성분석</th>\n",
              "      <th>Year</th>\n",
              "      <th>Month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1967.000000</td>\n",
              "      <td>1967</td>\n",
              "      <td>1967.000000</td>\n",
              "      <td>1967.0</td>\n",
              "      <td>1967.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>34464.000000</td>\n",
              "      <td>2022-03-14 22:57:02.470767616</td>\n",
              "      <td>0.477885</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>33481.000000</td>\n",
              "      <td>2022-03-01 00:00:00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>33972.500000</td>\n",
              "      <td>2022-03-09 00:00:00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>34464.000000</td>\n",
              "      <td>2022-03-14 00:00:00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>34955.500000</td>\n",
              "      <td>2022-03-23 00:00:00</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>35447.000000</td>\n",
              "      <td>2022-03-31 00:00:00</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>567.968309</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.499638</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-950cfbef-daaa-490c-bc00-e29b64d1358c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-950cfbef-daaa-490c-bc00-e29b64d1358c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-950cfbef-daaa-490c-bc00-e29b64d1358c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b59ad56c-eab9-42fc-9dce-a77e63024dae\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b59ad56c-eab9-42fc-9dce-a77e63024dae')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b59ad56c-eab9-42fc-9dce-a77e63024dae button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lda_model_sns5, corpus, id2word = train_lda_model_from_dataframe(dfs['peak2_sns'], column_name='Summary', num_topics=5, no_below=10, passes=10)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kXmsEu7kWo9P",
        "outputId": "d97bdd15-18ee-4ee6-b19a-d28d6ade1e04"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualize the topics (corpus를 이용하여 lda_model_5 시각화)\n",
        "pyLDAvis.enable_notebook()\n",
        "vis = gensimvis.prepare(lda_model_sns5, corpus, dictionary=lda_model_sns5.id2word)\n",
        "pyLDAvis.display(vis)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 917
        },
        "id": "7_FtotpXWuRO",
        "outputId": "6365f494-bb2e-4d75-b6da-38b1fd786773"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v1.0.0.css\">\n",
              "\n",
              "\n",
              "<div id=\"ldavis_el16921348818543236484467928600\" style=\"background-color:white;\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "\n",
              "var ldavis_el16921348818543236484467928600_data = {\"mdsDat\": {\"x\": [-0.07872196914747992, 0.19011630481692984, 0.15812709688319018, 0.09270885332233576, -0.36223028587497613], \"y\": [0.35291072304481463, -0.0164677632855649, -0.18381201020632723, 0.010310663576544293, -0.162941613129467], \"topics\": [1, 2, 3, 4, 5], \"cluster\": [1, 1, 1, 1, 1], \"Freq\": [30.834305265295857, 25.39965156964909, 18.154633127241894, 14.172360221997987, 11.439049815815167]}, \"tinfo\": {\"Term\": [\"\\uc2e0\\uccad\", \"\\uc9c0\\uc6d0\", \"\\uba74\\uc811\", \"\\uc0dd\\uac01\", \"\\uc218\\ub2f9\", \"\\uace0\\uc6a9\", \"\\ucde8\\uc5c5\", \"\\uc0ac\\uc5c5\", \"\\ucc3d\\uc5c5\", \"\\uc0ac\\ub78c\", \"\\uc81c\\ub3c4\", \"\\uc11c\\uc6b8\", \"\\uad6d\\ubbfc\", \"\\uc11c\\uc6b8\\uc2dc\", \"\\uc815\\uce58\", \"\\ud6c8\\ub828\", \"\\uc9c0\\uc6d0\\uae08\", \"\\ucc38\\uc5ec\", \"\\uac00\\uc871\", \"\\ubc29\\ubc95\", \"\\ucd5c\\ub300\", \"\\uc2a4\\ud0c0\", \"\\uae30\\uc5c5\", \"\\ub300\\uc804\", \"\\uc9c0\\uae09\", \"\\uae08\\uc561\", \"\\ud655\\uc778\", \"\\uc77c\\uc790\\ub9ac\", \"\\ub300\\uc0c1\", \"\\ubaa8\\uc9d1\", \"\\ubb38\\uc81c\", \"\\ubbf8\\ub798\", \"\\ubb38\\ud654\", \"\\ud589\\uc815\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc911\\uc2ec\", \"\\ub178\\ub3d9\", \"\\uac1c\\uc120\", \"\\uc0b0\\uc5c5\", \"\\uc99d\\uac00\", \"\\uc870\\uc131\", \"\\uc778\\uad6c\", \"\\uacf5\\uc57d\", \"\\uad6c\\ucd95\", \"\\ubcf4\\uace0\\uc11c\", \"\\uc81c\\uc2dc\", \"\\uc801\\uadf9\", \"\\uc18c\\ud1b5\", \"\\uc758\\uc6d0\", \"\\uc591\\uc131\", \"\\uc2dc\\ubbfc\", \"\\uc5f0\\uad6c\", \"\\uc870\\ub840\", \"\\uc8fc\\uc694\", \"\\ubd84\\uacfc\", \"\\uae30\\uc790\", \"\\uc704\\uc6d0\", \"\\uc81c\\uc548\", \"\\uc2a4\\ub9c8\\ud2b8\", \"\\uc9c0\\ub09c\\ud574\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ud611\\uc758\", \"\\uc608\\ube44\", \"\\uae30\\uc220\", \"\\uc2dc\\uc7a5\", \"\\uacfc\\uc815\", \"\\ud604\\ud669\", \"\\ucd94\\uc9c4\", \"\\uc0ac\\ud68c\", \"\\uacbd\\uc81c\", \"\\uad50\\uc721\", \"\\uacc4\\ud68d\", \"\\ud65c\\ub3d9\", \"\\ud6c4\\ubcf4\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc9c0\\uc5ed\", \"\\uc6b4\\uc601\", \"\\uc815\\ubd80\", \"\\ubcf5\\uc9c0\", \"\\uc218\\ub2f9\", \"\\uc11c\\uc6b8\\uc2dc\", \"\\ucd5c\\ub300\", \"\\ubaa8\\uc9d1\", \"\\uc0c1\\ub2f4\", \"\\uc11c\\ube44\\uc2a4\", \"\\uc81c\\uacf5\", \"\\uac1c\\uc6d4\", \"\\uc628\\ub77c\\uc778\", \"\\uc120\\uc815\", \"\\uac74\\uac15\", \"\\uc878\\uc5c5\", \"\\uc2dc\\ud589\", \"\\uc811\\uc218\", \"\\uc791\\uc131\", \"\\uac00\\uc785\", \"\\uacc4\\uc88c\", \"\\uc0ac\\ud56d\", \"\\uacc4\\uce35\", \"\\uacf5\\uace0\", \"\\uc99d\\uba85\\uc11c\", \"\\ucd09\\uc9c4\", \"\\ucd5c\\uc885\", \"\\uc77c\\uc815\", \"\\uc801\\uae08\", \"\\ub9de\\ucda4\", \"\\uc218\\uae09\", \"\\uc9c4\\ub85c\", \"\\ud3ec\\ud138\", \"\\uc2ec\\ub9ac\", \"\\uad6c\\uc9c1\", \"\\uace0\\uc6a9\", \"\\uc11c\\uc6b8\", \"\\ucde8\\uc5c5\", \"\\uc9c0\\uc6d0\", \"\\uc5f0\\uacc4\", \"\\ub300\\uc0c1\", \"\\ucc38\\uc5ec\", \"\\ucc44\\uc6a9\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\ub300\\ud559\", \"\\ub0b4\\uc6a9\", \"\\uc548\\ub0b4\", \"\\uc13c\\ud130\", \"\\ud76c\\ub9dd\", \"\\uc0ac\\uc5c5\", \"\\ud65c\\ub3d9\", \"\\uc608\\uc815\", \"\\uad50\\uc721\", \"\\uc2e0\\uccad\", \"\\uba74\\uc811\", \"\\uc9c0\\uc6d0\\uae08\", \"\\ubc29\\ubc95\", \"\\uae08\\uc561\", \"\\uc7a5\\ub824\\uae08\", \"\\ubaa8\\uc784\", \"\\ucf58\\ud150\\uce20\", \"\\uc2a4\\ud399\", \"\\uce74\\ub4dc\", \"\\ub124\\uc774\\ubc84\", \"\\uc801\\ub9bd\", \"\\uad50\\ud1b5\\ube44\", \"\\ubc1c\\uae09\", \"\\ud654\\ud3d0\", \"\\ubcf4\\uc720\", \"\\ucd94\\uac00\", \"\\uc81c\\uc791\", \"\\ud68c\\uc6d0\", \"\\uc720\\ud615\", \"\\ub300\\uc678\", \"\\ud6c4\\uae30\", \"\\uc804\\ud654\", \"\\ubbf8\\ub9cc\", \"\\ub300\\uc911\\uad50\\ud1b5\", \"\\uc815\\ub9ac\", \"\\uc800\\uc791\", \"\\ud68c\\uc0ac\", \"\\uacf5\\uc81c\", \"\\uc778\\uae30\", \"\\uc791\\uc131\\uc790\", \"\\ud6c8\\ub828\", \"\\ud655\\uc778\", \"\\uacbd\\uae30\\ub3c4\", \"\\uc2e0\\uccad\", \"\\uce74\\ud398\", \"\\uc790\\uaca9\", \"\\uc9c0\\uae09\", \"\\uae30\\uc5c5\", \"\\ub300\\ud55c\\ubbfc\\uad6d\", \"\\uacbd\\uc6b0\", \"\\uacbd\\uae30\", \"\\uc2dc\\uc791\", \"\\uac00\\ub2a5\", \"\\uc81c\\ub3c4\", \"\\uc18c\\ub4dd\", \"\\uc9c0\\uc6d0\", \"\\uad6d\\ubbfc\", \"\\uae30\\uc900\", \"\\uae30\\uac04\", \"\\ucc3d\\uc5c5\", \"\\ub300\\uc804\", \"\\ub300\\ucd9c\", \"\\uc8fc\\ud0dd\", \"\\ucda9\\uccad\\ub0a8\\ub3c4\", \"\\ud22c\\uc790\\uc790\", \"\\uc790\\uae08\", \"\\ucda9\\ub0a8\", \"\\ud64d\\ubcf4\", \"\\ud22c\\uc790\", \"\\uc804\\uc138\", \"\\uc6d4\\uc138\", \"\\ubcf4\\uc99d\", \"\\ubcf4\\uc99d\\uae08\", \"\\uc9c1\\uc6d0\", \"\\uc804\\uc2dc\", \"\\uc2e0\\uc6a9\", \"\\uc2dc\\uae30\", \"\\uc784\\ucc28\", \"\\ud2b9\\ubcc4\", \"\\uacf5\\ubaa8\", \"\\uccad\\ucd98\", \"\\ubc31\\ub9cc\", \"\\uc785\\uc8fc\", \"\\uc0c1\\ub2f9\", \"\\uc794\\uc561\", \"\\uc2e0\\ud63c\", \"\\ub9c8\\ucf00\\ud305\", \"\\ub300\\ube44\", \"\\ud68c\\ubcf5\", \"\\uc8fc\\uac70\", \"\\uc2e4\\uc2b5\", \"\\uc7a5\\uc810\", \"\\ud0a4\\ud2b8\", \"\\uad50\\ud1b5\", \"\\ud504\\ub85c\\uc81d\\ud2b8\", \"\\uae30\\ud68c\", \"\\ud655\\ub300\", \"\\uacf5\\uacf5\", \"\\uc0ac\\uc5c5\", \"\\uc774\\uc0ac\\ube44\", \"\\ubd84\\uc57c\", \"\\uc18c\\uac1c\", \"\\uc77c\\uc790\\ub9ac\", \"\\uaddc\\ubaa8\", \"\\uc774\\ud558\", \"\\uc62c\\ud574\", \"\\ub9c8\\uc74c\", \"\\uc6b4\\uc601\", \"\\uc9c0\\uc6d0\", \"\\uc9c4\\ud589\", \"\\uc13c\\ud130\", \"\\uae30\\uad00\", \"\\ud604\\uc7a5\", \"\\uae30\\uc5c5\", \"\\uc774\\uc6a9\", \"\\uc2a4\\ud0c0\", \"\\ub300\\ud1b5\\ub839\", \"\\uc724\\uc11d\\uc5f4\", \"\\uac80\\uc0ac\", \"\\ud655\\uc9c4\", \"\\uac71\\uc815\", \"\\ubc18\\uc751\", \"\\ub300\\uc120\", \"\\uc804\\uc8fc\", \"\\uc778\\ucc9c\", \"\\uc815\\uc758\\ub2f9\", \"\\uc138\\uc0c1\", \"\\uc1a1\\ub3c4\", \"\\uaca9\\ub9ac\", \"\\uc608\\uc57d\", \"\\ub2f5\\ubcc0\", \"\\uc774\\uac70\", \"\\uc8fc\\ub9d0\", \"\\uc644\\uc8fc\", \"\\uce5c\\uad6c\", \"\\uc9c0\\uc0ac\", \"\\uc774\\uac8c\", \"\\ub0a8\\uc131\", \"\\ud22c\\ud45c\", \"\\uc9d1\\ub2e8\", \"\\ud560\\uba38\\ub2c8\", \"\\ucee4\\ud53c\", \"\\ub0a8\\uc790\", \"\\ub0a0\\uc528\", \"\\ud150\\ub370\", \"\\uac00\\uc871\", \"\\uc804\\uc8fc\\uc2dc\", \"\\uc815\\uce58\", \"\\uc815\\uc0c1\", \"\\uc870\\uc120\", \"\\ubc29\\uc5ed\", \"\\ud3d0\\uc9c0\", \"\\uc0dd\\uac01\", \"\\ub54c\\ubb38\", \"\\ubd80\\ubd84\", \"\\uc0ac\\ub78c\", \"\\uacbd\\ud5d8\", \"\\ubbfc\\uc0dd\", \"\\uc815\\ub3c4\", \"\\uc81c\\ub3c4\", \"\\uad6d\\ubbfc\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\uad00\\uc2ec\", \"\\ucd94\\ucc9c\", \"\\uc5ec\\uc131\", \"\\ud6c4\\ubcf4\", \"\\uacb0\\uacfc\"], \"Freq\": [3497.0, 7121.0, 1593.0, 1240.0, 1692.0, 1987.0, 2416.0, 2064.0, 1089.0, 1046.0, 1313.0, 1458.0, 1214.0, 1121.0, 696.0, 890.0, 789.0, 1542.0, 619.0, 770.0, 957.0, 579.0, 1246.0, 626.0, 926.0, 662.0, 723.0, 1543.0, 1345.0, 761.0, 743.0535880119479, 726.3418076636057, 702.1469413130357, 628.4381292058526, 594.1773808964389, 591.7668579425457, 520.0247510974905, 445.2482721843668, 466.39335788451353, 435.13685010624437, 419.12076544694565, 411.1969290351542, 397.89210532821784, 387.33661295861924, 364.4707097719111, 367.5021228147965, 348.0805249410104, 338.75789958817467, 335.62014206706885, 349.4305260522095, 326.0128007545592, 325.6920712932687, 316.492534170908, 304.8554098399323, 309.2752913213947, 306.2802165511825, 296.60709105686226, 294.5379385691941, 311.0479278343302, 330.9349587179863, 451.34144632109906, 463.62468462646785, 614.6331219859835, 504.91279297426644, 924.851837141309, 677.8980186243679, 407.15269940923105, 633.8683012732455, 641.9991251051497, 718.1147794275836, 940.3083412699788, 603.0201750558927, 845.9969193842938, 578.2930450291261, 746.8244686651803, 531.1866992868963, 449.2420540394884, 417.4239088472313, 409.4323396272893, 1691.7892395020017, 1120.2628180246888, 956.7749974455985, 761.045470322148, 699.5043414699775, 643.6993916573849, 626.6007197923161, 617.6836206242986, 596.4918735512528, 582.3889322771954, 517.5892404279235, 468.1807312930073, 465.7250823561741, 465.6017217493801, 404.54039134401955, 371.07034013591283, 345.86209060744454, 302.3994735436561, 280.656468048202, 275.80066758486913, 266.08005984763514, 258.69141346051873, 259.1968946938998, 249.4185006868809, 247.71092235982536, 239.57008838846355, 233.28635174468107, 211.2994043649728, 210.0660658260597, 229.63111751448048, 386.920424307542, 1893.1828317295888, 1395.45530295534, 2198.1699649220714, 5079.657576175904, 322.5465494925651, 1104.2833687058867, 1223.125707491995, 504.72044027985964, 611.5831859520329, 399.4913160215603, 659.0261296017334, 369.7188132180569, 642.2208479027023, 460.3300325511907, 877.2707807173787, 805.5484483201975, 475.2092836100749, 502.37379455871644, 572.9535996588534, 1592.5175624859514, 788.3315289682539, 769.4277216794745, 661.538793011548, 546.0691430588563, 516.4807931365199, 420.2580395238532, 389.0266100443555, 356.20451621016264, 352.92301008706016, 330.7379303870661, 339.11399447244656, 318.9442548737603, 319.58641015521016, 325.39168596819553, 280.99630693086357, 271.71960221616007, 267.8803532961631, 238.26657127113032, 224.37813610774558, 216.26389307627284, 210.98682737618202, 204.8838026181782, 199.1037464425367, 196.8242694149788, 187.13559438174326, 210.63375245336792, 178.4855562242911, 172.52186624446844, 164.37137662385615, 873.3965371142358, 687.9570748881775, 254.98268656463947, 2923.911127392736, 584.222396271891, 582.7603796881453, 742.4416473947764, 946.0128603116348, 367.0304120427498, 549.1325110045286, 506.7338176105534, 602.44266002855, 498.77465303988345, 590.972165562959, 434.8340975541266, 1110.3231956397126, 512.1767550113549, 400.8682814807951, 375.4708531299431, 1088.7644794509715, 626.021005949002, 471.00790135987296, 374.8025411610572, 307.047189744133, 356.8311971640533, 271.8425973118311, 256.6592512756332, 244.2830434954752, 221.01736778280738, 205.25319505787488, 201.83393224732342, 196.84702286455578, 179.68385046683463, 190.44530730868928, 173.47644042107765, 172.1829777487864, 175.49733382852756, 160.3082987791015, 183.58009474215177, 136.00612797998343, 135.38969934695092, 137.988309559811, 131.71142886709768, 137.17083318962165, 151.92433529922985, 121.72446566137788, 110.06202171579552, 109.74519509572619, 115.62736110388241, 308.71345693633305, 120.47522138344874, 218.35572230821694, 159.1776778906989, 164.8366206203396, 373.913860902272, 328.95015604915255, 554.507422732187, 253.35930846847293, 1129.6712378446125, 260.6982516350743, 305.2925852794751, 203.03564092201108, 584.7620926607264, 253.62297681625023, 342.9615487743108, 339.51311111166524, 294.6581443656118, 397.89482636559995, 930.4854500317405, 268.8780243223759, 330.3197984233587, 254.9297580821922, 237.7902705558698, 234.63877284606167, 222.00282761064844, 578.890798049961, 470.17806285747525, 396.65758683861, 263.1405175224866, 242.464562902332, 220.83403213799303, 216.70808910962725, 199.05320298825671, 192.97907052074117, 196.22504441497153, 170.71820222398625, 160.4010018885359, 157.5948385274363, 197.6584013069381, 141.7950738506237, 139.8445818086158, 134.8871983400725, 134.94823070303914, 131.5801251467459, 142.93487565262922, 124.47489515169057, 124.94008786516456, 112.81333620218597, 113.35140897356528, 113.46791800074202, 115.48128984289345, 106.46634529598076, 101.30474638964964, 94.01699495640891, 93.75649962085583, 610.760642269351, 354.13924860394155, 682.805015983889, 203.1774190644789, 144.97929247168778, 136.28478456438236, 446.85103588849756, 1117.7015268708612, 480.18817361756, 240.89638325813092, 857.7045709643215, 415.0451290600986, 178.924866231562, 242.0040423307039, 722.4943388628134, 670.001312467843, 260.76511492979625, 280.8217497044665, 211.5766984785833, 303.86917107289116, 331.82263589845815, 179.453019068535], \"Total\": [3497.0, 7121.0, 1593.0, 1240.0, 1692.0, 1987.0, 2416.0, 2064.0, 1089.0, 1046.0, 1313.0, 1458.0, 1214.0, 1121.0, 696.0, 890.0, 789.0, 1542.0, 619.0, 770.0, 957.0, 579.0, 1246.0, 626.0, 926.0, 662.0, 723.0, 1543.0, 1345.0, 761.0, 743.9080855863069, 727.2102047908947, 703.0488038053867, 629.2782196279403, 595.0144836589824, 592.6315655011517, 520.8845437320326, 446.08955490127556, 467.2884916329599, 435.9928398719065, 419.9631635774724, 412.02688844367907, 398.73348845583104, 388.1930616091921, 365.3056985068031, 368.3458215553296, 348.92311364247473, 339.5961300063989, 336.4538089222833, 350.31169566864304, 326.84542392567846, 326.5334823908352, 317.3412965858465, 305.6881929408751, 310.12061309069566, 307.12252568722056, 297.43626375905575, 295.3786723517375, 311.9377170344658, 331.8927541851054, 458.2987895407995, 472.3944092410859, 642.859562717419, 522.1549975952935, 1068.725084333508, 786.4899325927022, 430.2147223329746, 740.5999575154443, 778.003961915727, 970.6595799764347, 1443.3735367862973, 771.9310358247327, 1809.1168976208664, 910.5587718678798, 1543.9622177380243, 1063.0231480116238, 972.4975467337608, 812.6119243075062, 745.75703703064, 1692.6421891652838, 1121.1093599076924, 957.6441478210177, 761.8951186209626, 700.3432892525744, 644.5437584124646, 627.4524031405326, 618.5421344984558, 597.3415341577039, 583.2700136707535, 518.4809522799167, 469.02875182674904, 466.571717958861, 466.4555948790121, 405.394330124709, 371.9289903615919, 346.73336164375297, 303.2537269939594, 281.50202780083595, 276.64666039686347, 266.9277191760209, 259.5314064753545, 260.0580864548941, 250.26283898002038, 248.56408629935342, 240.44824130201064, 234.14160826166986, 212.1458631357808, 210.90921807859857, 230.65088778389617, 389.7508020077948, 1987.1074999463438, 1458.2158460764967, 2416.087021384521, 7121.019803892026, 333.71465580940685, 1345.143569332472, 1542.2794529490716, 573.2275497397627, 728.1568289723068, 449.37755199899044, 901.0803593900814, 412.7746611983421, 973.2628704554284, 587.1572645339025, 2064.9698277237585, 1809.1168976208664, 658.2365127587824, 1443.3735367862973, 3497.548045995419, 1593.3567058034193, 789.1664940187306, 770.2800726538181, 662.3889684307758, 546.9076095369293, 517.3679967841374, 421.1108492251152, 389.8658250864449, 357.044774056446, 353.7559457366944, 331.5722398284573, 339.9704146745792, 319.77916807960827, 320.42767333069406, 326.32410336035423, 281.87198783248226, 272.5828404989986, 268.7366425984116, 239.10869892349305, 225.22460361694468, 217.10329512476048, 211.8517933351776, 205.743529992153, 199.97375701686525, 197.69689319594892, 187.97845989401137, 211.60009254955327, 179.3161285668912, 173.3578575713698, 165.20276721671488, 890.0934490554333, 723.8068742241062, 259.50371844366657, 3497.548045995419, 648.4896478552604, 677.0390898209753, 926.0311272205953, 1246.956135348974, 414.56217092139934, 716.6842508266583, 665.1220946841055, 862.2880050180236, 933.3874015130316, 1313.9218455262694, 784.7575881867051, 7121.019803892026, 1214.0371246070572, 752.6077247456166, 588.2602946280366, 1089.6382622934996, 626.9019351025094, 471.87258584937734, 375.67172717693546, 307.93954933458065, 357.871731838068, 272.72051406677724, 257.52609399443395, 245.18358229245123, 221.8911497727977, 206.11535777131397, 202.70405446122408, 197.71312044965464, 180.55285278564716, 191.39756623159192, 174.36740001647007, 173.06848445129165, 176.4055628108553, 161.17084875468257, 184.57107435723037, 136.87959304473063, 136.27401411558952, 138.89392582718202, 132.58579878860053, 138.08335398465647, 152.95844506817616, 122.58738026128184, 110.93602489889062, 110.62218152467354, 116.55257547130147, 312.71950676807575, 121.46578356040914, 223.36926507012174, 161.66583613769618, 170.8202248011463, 429.60936719485096, 404.8040943626121, 773.4726449243997, 296.10792674727446, 2064.9698277237585, 343.41738335805877, 452.40842800829955, 242.3152409216221, 1543.9622177380243, 365.7215655171189, 650.0378936782911, 654.8619907304569, 505.6571202010206, 972.4975467337608, 7121.019803892026, 503.00522118482155, 973.2628704554284, 472.7840475586079, 384.94729902839197, 1246.956135348974, 341.05312898668325, 579.5451333544399, 470.7835407882548, 397.26550860030943, 263.80052581523626, 243.09530491146728, 221.4424437819311, 217.33388032530945, 199.65458576908784, 193.6051003197125, 196.87056280177026, 171.32701776676305, 161.00832892794008, 158.1952651802228, 198.42411604775177, 142.40733870809592, 140.4580083422983, 135.49160430870398, 135.5580154257318, 132.19088326132191, 143.61699078670523, 125.07832587870912, 125.56241836215123, 113.4161719851512, 113.98632719976551, 114.1062888536485, 116.14685968033756, 107.09443005203217, 101.91576046840379, 94.63240205919242, 94.37506526467156, 619.3524050277529, 357.1999361046531, 696.0238060798044, 204.96521101584372, 146.20127261163978, 137.50054966563536, 474.8112023745341, 1240.9636221134583, 525.5629937953848, 255.2526653045546, 1046.967723287228, 471.1867716294324, 191.52450502875664, 280.48621554682836, 1313.9218455262694, 1214.0371246070572, 329.4582458641659, 436.1812815090274, 276.116364575841, 667.671829269624, 910.5587718678798, 516.4958549841788], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -4.6472, -4.6699, -4.7038, -4.8147, -4.8708, -4.8748, -5.0041, -5.1593, -5.1129, -5.1823, -5.2198, -5.2389, -5.2718, -5.2987, -5.3595, -5.3512, -5.4055, -5.4327, -5.442, -5.4016, -5.471, -5.472, -5.5006, -5.5381, -5.5237, -5.5334, -5.5655, -5.5725, -5.518, -5.456, -5.1457, -5.1189, -4.8369, -5.0336, -4.4283, -4.739, -5.2488, -4.8061, -4.7934, -4.6813, -4.4117, -4.856, -4.5174, -4.8979, -4.6421, -4.9828, -5.1504, -5.2238, -5.2432, -3.6305, -4.0427, -4.2005, -4.4294, -4.5137, -4.5968, -4.6237, -4.6381, -4.673, -4.6969, -4.8149, -4.9152, -4.9205, -4.9207, -5.0613, -5.1477, -5.218, -5.3523, -5.4269, -5.4444, -5.4803, -5.5084, -5.5065, -5.5449, -5.5518, -5.5852, -5.6118, -5.7108, -5.7166, -5.6276, -5.1058, -3.518, -3.8231, -3.3687, -2.5311, -5.2878, -4.0571, -3.9549, -4.8401, -4.648, -5.0739, -4.5733, -5.1513, -4.5991, -4.9321, -4.2872, -4.3725, -4.9003, -4.8447, -4.7133, -3.3552, -4.0583, -4.0826, -4.2337, -4.4255, -4.4812, -4.6874, -4.7646, -4.8527, -4.862, -4.9269, -4.9019, -4.9632, -4.9612, -4.9432, -5.0899, -5.1235, -5.1377, -5.2549, -5.3149, -5.3517, -5.3765, -5.4058, -5.4344, -5.4459, -5.4964, -5.3781, -5.5437, -5.5777, -5.6261, -3.9559, -4.1945, -5.1871, -2.7476, -4.358, -4.3605, -4.1183, -3.876, -4.8228, -4.4199, -4.5003, -4.3273, -4.5161, -4.3465, -4.6533, -3.7158, -4.4896, -4.7346, -4.8001, -3.4878, -4.0412, -4.3257, -4.5542, -4.7536, -4.6034, -4.8754, -4.9329, -4.9823, -5.0824, -5.1564, -5.1732, -5.1982, -5.2894, -5.2312, -5.3246, -5.3321, -5.313, -5.4035, -5.268, -5.5679, -5.5725, -5.5534, -5.6, -5.5594, -5.4572, -5.6789, -5.7796, -5.7825, -5.7302, -4.7482, -5.6892, -5.0945, -5.4106, -5.3757, -4.5566, -4.6847, -4.1625, -4.9458, -3.4509, -4.9173, -4.7593, -5.1672, -4.1094, -4.9448, -4.643, -4.6531, -4.7948, -4.4944, -3.6449, -4.8864, -4.6806, -4.9396, -5.0092, -5.0226, -5.0779, -3.9052, -4.1132, -4.2833, -4.6937, -4.7755, -4.8689, -4.8878, -4.9728, -5.0038, -4.9871, -5.1263, -5.1887, -5.2063, -4.9798, -5.312, -5.3258, -5.3619, -5.3615, -5.3867, -5.304, -5.4422, -5.4385, -5.5406, -5.5359, -5.5348, -5.5172, -5.5985, -5.6482, -5.7229, -5.7257, -3.8516, -4.3967, -3.7401, -4.9523, -5.2898, -5.3516, -4.1641, -3.2473, -4.0922, -4.782, -3.5121, -4.238, -5.0794, -4.7774, -3.6836, -3.7591, -4.7027, -4.6286, -4.9118, -4.5498, -4.4618, -5.0764], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.1754, 1.1753, 1.1753, 1.1752, 1.1751, 1.1751, 1.1749, 1.1747, 1.1746, 1.1746, 1.1745, 1.1745, 1.1744, 1.1743, 1.1743, 1.1742, 1.1741, 1.1741, 1.1741, 1.174, 1.174, 1.174, 1.1739, 1.1738, 1.1738, 1.1738, 1.1738, 1.1737, 1.1737, 1.1737, 1.1612, 1.1578, 1.1316, 1.143, 1.032, 1.028, 1.1214, 1.0209, 0.9844, 0.8752, 0.748, 0.9296, 0.4165, 0.7226, 0.4503, 0.4828, 0.4042, 0.5104, 0.5769, 1.3699, 1.3697, 1.3695, 1.3693, 1.3692, 1.3691, 1.3691, 1.369, 1.369, 1.3689, 1.3687, 1.3686, 1.3686, 1.3686, 1.3683, 1.3681, 1.3679, 1.3676, 1.3674, 1.3674, 1.3673, 1.3672, 1.3671, 1.3671, 1.367, 1.3668, 1.3668, 1.3664, 1.3664, 1.366, 1.3631, 1.322, 1.3264, 1.2759, 1.0326, 1.3364, 1.1731, 1.1386, 1.2432, 1.196, 1.2528, 1.0576, 1.2603, 0.9547, 1.1271, 0.5144, 0.5614, 1.0446, 0.315, -0.4386, 1.7057, 1.7052, 1.7051, 1.705, 1.7047, 1.7045, 1.7042, 1.7041, 1.7039, 1.7039, 1.7037, 1.7037, 1.7036, 1.7036, 1.7034, 1.7031, 1.7031, 1.7031, 1.7027, 1.7025, 1.7024, 1.7022, 1.7021, 1.7019, 1.7018, 1.7018, 1.7017, 1.7016, 1.7014, 1.7012, 1.6873, 1.6554, 1.6887, 1.5271, 1.6019, 1.5563, 1.4853, 1.43, 1.5845, 1.4399, 1.4343, 1.3476, 1.0796, 0.9072, 1.1158, -0.1522, 0.8432, 1.0763, 1.2573, 1.9531, 1.9525, 1.952, 1.9516, 1.951, 1.951, 1.9507, 1.9505, 1.9502, 1.9499, 1.9497, 1.9496, 1.9495, 1.9491, 1.9489, 1.9488, 1.9487, 1.9487, 1.9485, 1.9485, 1.9475, 1.9474, 1.9473, 1.9473, 1.9472, 1.9471, 1.9468, 1.946, 1.9459, 1.9459, 1.941, 1.9457, 1.9312, 1.9384, 1.9182, 1.815, 1.7464, 1.6211, 1.798, 1.3507, 1.6783, 1.5606, 1.777, 0.983, 1.5879, 1.3145, 1.297, 1.4138, 1.0602, -0.0812, 1.3275, 0.8733, 1.3362, 1.4722, 0.2835, 1.5245, 2.167, 2.1669, 2.1666, 2.1656, 2.1655, 2.1654, 2.1653, 2.1651, 2.1649, 2.1649, 2.1646, 2.1644, 2.1643, 2.1643, 2.1638, 2.1638, 2.1637, 2.1636, 2.1635, 2.1634, 2.1633, 2.1632, 2.1628, 2.1626, 2.1625, 2.1624, 2.1623, 2.1621, 2.1616, 2.1616, 2.1542, 2.1595, 2.149, 2.1594, 2.1597, 2.1593, 2.1074, 2.0635, 2.0778, 2.1103, 1.9687, 2.0413, 2.1001, 2.0206, 1.5701, 1.5737, 1.9343, 1.7278, 1.9019, 1.3809, 1.1587, 1.111]}, \"token.table\": {\"Topic\": [2, 3, 2, 1, 5, 1, 2, 5, 2, 5, 5, 2, 5, 1, 3, 1, 3, 2, 3, 4, 1, 2, 4, 4, 5, 2, 2, 1, 3, 2, 3, 2, 4, 5, 4, 1, 3, 1, 3, 2, 5, 1, 2, 3, 4, 3, 2, 5, 1, 2, 3, 5, 2, 3, 4, 3, 2, 3, 2, 4, 5, 1, 2, 1, 3, 4, 5, 1, 2, 3, 4, 1, 2, 4, 5, 5, 5, 2, 3, 4, 3, 1, 2, 1, 5, 4, 2, 3, 4, 5, 3, 4, 3, 4, 5, 1, 2, 1, 3, 3, 4, 5, 2, 4, 4, 2, 3, 3, 2, 1, 1, 1, 3, 1, 5, 1, 5, 5, 3, 3, 3, 5, 4, 1, 3, 4, 4, 1, 2, 3, 4, 5, 1, 4, 5, 1, 1, 2, 4, 3, 5, 2, 3, 4, 2, 1, 2, 4, 1, 2, 4, 4, 5, 2, 1, 2, 2, 2, 5, 2, 4, 2, 4, 2, 3, 1, 5, 2, 2, 1, 5, 3, 4, 1, 1, 3, 4, 5, 1, 2, 2, 4, 2, 3, 4, 4, 2, 5, 2, 3, 1, 1, 5, 2, 3, 1, 1, 2, 5, 1, 2, 2, 2, 3, 4, 5, 1, 2, 4, 4, 1, 1, 3, 5, 1, 5, 5, 1, 2, 3, 4, 3, 4, 5, 2, 4, 1, 3, 5, 1, 3, 4, 2, 4, 4, 2, 3, 5, 4, 2, 3, 4, 3, 4, 5, 3, 1, 2, 3, 4, 4, 5, 2, 5, 3, 2, 4, 5, 3, 1, 2, 3, 1, 5, 5, 1, 5, 2, 3, 5, 1, 1, 3, 1, 5, 1, 2, 2, 4, 5, 1, 4, 1, 1, 2, 2, 3, 1, 5, 1, 2, 4, 2, 3, 4, 3, 4, 2, 2, 4, 5, 1, 2, 4, 2, 3, 4, 2, 2, 2, 3, 1, 2, 2, 5, 4, 4, 2, 3, 5, 5, 3, 3, 5, 5, 3, 1, 2, 4, 5, 4, 4, 5, 4, 1, 2, 5, 2, 2, 5, 1, 4, 5, 1, 1, 4, 1, 2, 1, 3, 4, 3, 1, 2, 3, 4, 2, 3, 5, 1, 2, 3, 4, 3, 5, 3, 3, 1, 5, 3, 5, 1, 2], \"Freq\": [0.46497306402087824, 0.5346118869733139, 0.9975022372934986, 0.012916717421387142, 0.9865142930584428, 0.9975575422259849, 0.9991235285872718, 0.998001991965159, 0.9990723819692859, 0.9969654123593487, 0.9978625781170183, 0.652473774470703, 0.34656618881381557, 0.2375503704700125, 0.7622660622044073, 0.015414037317034921, 0.9826448789609763, 0.12278768495121323, 0.7660277163433644, 0.11022985353574824, 0.7397032026587852, 0.1442318222454456, 0.11538545779635648, 0.11672653671876652, 0.8807547770597838, 0.9978849406348546, 0.9982166103570979, 0.7811578651657056, 0.21763602213571898, 0.9526409618257267, 0.04680169543042397, 0.9976625042357793, 0.8544181939983434, 0.1418401744977487, 0.9935739650800746, 0.9981604543459051, 0.9926602889689299, 0.8620580784358424, 0.1373189859455324, 0.3553568357260926, 0.6442275538002066, 0.6512520674952449, 0.34779631689639673, 0.029270538695406557, 0.9659277769484164, 0.9971455908141063, 0.9929421517707621, 0.00513148398847939, 0.9969266281982309, 0.02635833727931287, 0.42173339646900593, 0.5518776867856132, 0.1804651577127481, 0.1257787462846426, 0.6945174251369397, 0.999412779425211, 0.36038468333826595, 0.6374729068483478, 0.3109241962775349, 0.5393582996651116, 0.14805914108454044, 0.9671457753458298, 0.03255738253639427, 0.012831245259098251, 0.7586473759441842, 0.18845891474300558, 0.04009764143468204, 0.9963450232616159, 0.18734859524283834, 0.5328140900168664, 0.27902982270209964, 0.09634289905443719, 0.08893190681948047, 0.8127388151002521, 0.9933172777459791, 0.996330576337864, 0.9910145352966513, 0.7313443169997186, 0.15869838745213924, 0.10875833545671079, 0.997863086837678, 0.9840741679721375, 0.013091895804507373, 0.9983018430040272, 0.9967391795761326, 0.9943756169323531, 0.8207302366600618, 0.1457093536099385, 0.032710263055292316, 0.9967214087942617, 0.9945627449342638, 0.9985612819932326, 0.9951305759746109, 0.9981508019843817, 0.99833566656357, 0.10903971456079782, 0.8878948185664965, 0.11337262127786175, 0.8852713193398992, 0.0038054429699413946, 0.08181702385373998, 0.9133063127859347, 0.4153011825810263, 0.5833992802923941, 0.9915624802696533, 0.998135809604664, 0.9997761293487389, 0.997355853487961, 0.9988251419400312, 0.9987793040512644, 0.9985082062586412, 0.9983358253460666, 0.9963861318400566, 0.06265516779797055, 0.9346062529863939, 0.20639944774074975, 0.7922096450049366, 0.9984637447009657, 0.9975634182667762, 0.9983381724397881, 0.007272698199619806, 0.9890869551482936, 0.9935639674531608, 0.9964257373697148, 0.9959423672762167, 0.9963931556589021, 0.9969380002746149, 0.548435991470498, 0.20247881347688315, 0.009386435061842264, 0.1045917049748138, 0.1354328487494384, 0.007835373619365349, 0.047012241716192095, 0.9441625211335245, 0.9963865249732112, 0.2298807748959356, 0.09504685885120415, 0.6741695802236574, 0.18052132438866908, 0.8195095043676088, 0.424703542020625, 0.02760330888845567, 0.5472234919992089, 0.9958657490993198, 0.8251885998358722, 0.12724870932048496, 0.046272257934721804, 0.9972426206593336, 0.9995098271692718, 0.992154347693663, 0.09911652348883633, 0.900912790735927, 0.9991563669566765, 0.04251771105547809, 0.956648498748257, 0.9990104802016962, 0.9978225973545926, 0.9937374113832871, 0.6596367944249046, 0.3390656419941099, 0.16094736695746975, 0.8377516792914451, 0.4447233199826898, 0.5543113014110891, 0.9982445912843952, 0.9987656698827215, 0.9951242828212147, 0.9996205995753891, 0.9969938965913436, 0.9990593772200541, 0.9977791716258975, 0.9920322081205435, 0.997413383012911, 0.07074202545438978, 0.6981426118613548, 0.20642754968658, 0.02435381204167517, 0.8655172537443157, 0.13380428895722934, 0.9987746407747086, 0.993826233270146, 0.16382905751818527, 0.836014248138174, 0.9952084769245423, 0.9879325393749249, 0.9971780391129211, 0.004335556691795309, 0.8963728512933393, 0.10175043176843311, 0.996255632669816, 0.5436802693878683, 0.4553135038399779, 0.9678927622060259, 0.029965720192137023, 0.9983662245386625, 0.9566630655696333, 0.0435553916031703, 0.9971396227765279, 0.27649636030855645, 0.7216251161899138, 0.997754158917485, 0.34358384390125746, 0.13743353756050297, 0.5191933641174556, 0.9985560028300547, 0.461697822794531, 0.1285350286176311, 0.40925553111853746, 0.9965266878203526, 0.9985332529613499, 0.9982950269500266, 0.9953632012198443, 0.9993316595713408, 0.9986511999262635, 0.9963716991085004, 0.9955208065479506, 0.002911908506848547, 0.23295268054788376, 0.002911908506848547, 0.7600081202874708, 0.33719086624914174, 0.6509249765852997, 0.011728377956491887, 0.4707417874802262, 0.5276615460971164, 0.9975077149756952, 0.9979357291536527, 0.9955779940414615, 0.48382012941637226, 0.13730905948630645, 0.3788952820730626, 0.9949539492752211, 0.9927353565255171, 0.9955817380597861, 0.1255466652929537, 0.8611024219504942, 0.013293176325136274, 0.9973580496163159, 0.9990272924522954, 0.9927194487297112, 0.9937339512849456, 0.9983404700883615, 0.9759623819846648, 0.017907566641920454, 0.9947948297131328, 0.9973543923965421, 0.9977306202687943, 0.9982741624306264, 0.9945886721718648, 0.9921579376859384, 0.996874564158107, 0.00559910514489576, 0.9910416106465496, 0.9959792960835128, 0.999023283493619, 0.13547902853591656, 0.8627874975182054, 0.9964749410843893, 0.5131600798934376, 0.4393240971749574, 0.045532189343062815, 0.004878876737392769, 0.9904119776907321, 0.9980912656332568, 0.01867752207100435, 0.9812882749612286, 0.9992789841296834, 0.4497984427401653, 0.5494999588128584, 0.999061149780743, 0.9987180105160518, 0.9978617858045222, 0.9957733311098271, 0.9917834325913786, 0.9977065522383733, 0.9978066337666032, 0.009593261485363335, 0.9881059329924236, 0.9958835674601807, 0.9977487094471842, 0.9982119304479384, 0.99893430330425, 0.9977228069337144, 0.9965244554635064, 0.19761754720843902, 0.8012689619052555, 0.9973101124569671, 0.9913787950779355, 0.49951875553531566, 0.35841176244624345, 0.1420477063763327, 0.7133809678809632, 0.15587655006847817, 0.1305992716789952, 0.9985218657563749, 0.9926980982093531, 0.9945987014837645, 0.46321586772235057, 0.5347857013618554, 0.9903047512563711, 0.20618831392192635, 0.7929821003978488, 0.9994142438682759, 0.8809764991743033, 0.11862653850267847, 0.9906510854335817, 0.9979524386563791, 0.9993273620243143, 0.9959313456877349, 0.9969064402632287, 0.8560627010119409, 0.14312720237739077, 0.23178633435332333, 0.7677922325453835, 0.9979571235431959, 0.9969489163161702, 0.9097354443551674, 0.048011515716651236, 0.042217022440503675, 0.9957039150916234, 0.9970738290198842, 0.9005540827543724, 0.09869085838404082, 0.9897807005322272, 0.9973620978249331, 0.006185598787540162, 0.006185598787540162, 0.9835102072188858, 0.9960258012683784, 0.9959838426466753, 0.997564122112717, 0.9913469692023945, 0.9969059379471071, 0.02737930346838261, 0.031591504001979936, 0.9414268192590022, 0.995689054812864, 0.8404782811194036, 0.1593063408657693, 0.12802327928537588, 0.8705582991405559, 0.990125779693967, 0.9979687527899884, 0.3792726962067389, 0.6182664499808485, 0.9460392191901629, 0.051137255091360155, 0.9822300834284391, 0.016935001438421363, 0.9951726690613425, 0.9986653046341204, 0.064643527250905, 0.025857410900362, 0.1926377112076969, 0.7175431524850455, 0.04835544016837183, 0.950529795309709, 0.9954943395066138, 0.4676314731859272, 0.4455212380471127, 0.08678267291984701, 0.9952590024796361, 0.9971640251082937, 0.004725895853593809, 0.9972588680453509, 0.994918109722257, 0.6347750610477525, 0.3646112807402316, 0.9807958938765667, 0.01797564066669538, 0.21459327442711856, 0.783435763781544], \"Term\": [\"\\uac00\\ub2a5\", \"\\uac00\\ub2a5\", \"\\uac00\\uc785\", \"\\uac00\\uc871\", \"\\uac00\\uc871\", \"\\uac1c\\uc120\", \"\\uac1c\\uc6d4\", \"\\uac71\\uc815\", \"\\uac74\\uac15\", \"\\uac80\\uc0ac\", \"\\uaca9\\ub9ac\", \"\\uacb0\\uacfc\", \"\\uacb0\\uacfc\", \"\\uacbd\\uae30\", \"\\uacbd\\uae30\", \"\\uacbd\\uae30\\ub3c4\", \"\\uacbd\\uae30\\ub3c4\", \"\\uacbd\\uc6b0\", \"\\uacbd\\uc6b0\", \"\\uacbd\\uc6b0\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacbd\\ud5d8\", \"\\uacbd\\ud5d8\", \"\\uacc4\\uc88c\", \"\\uacc4\\uce35\", \"\\uacc4\\ud68d\", \"\\uacc4\\ud68d\", \"\\uace0\\uc6a9\", \"\\uace0\\uc6a9\", \"\\uacf5\\uace0\", \"\\uacf5\\uacf5\", \"\\uacf5\\uacf5\", \"\\uacf5\\ubaa8\", \"\\uacf5\\uc57d\", \"\\uacf5\\uc81c\", \"\\uacfc\\uc815\", \"\\uacfc\\uc815\", \"\\uad00\\uc2ec\", \"\\uad00\\uc2ec\", \"\\uad50\\uc721\", \"\\uad50\\uc721\", \"\\uad50\\ud1b5\", \"\\uad50\\ud1b5\", \"\\uad50\\ud1b5\\ube44\", \"\\uad6c\\uc9c1\", \"\\uad6c\\uc9c1\", \"\\uad6c\\ucd95\", \"\\uad6d\\ubbfc\", \"\\uad6d\\ubbfc\", \"\\uad6d\\ubbfc\", \"\\uaddc\\ubaa8\", \"\\uaddc\\ubaa8\", \"\\uaddc\\ubaa8\", \"\\uae08\\uc561\", \"\\uae30\\uac04\", \"\\uae30\\uac04\", \"\\uae30\\uad00\", \"\\uae30\\uad00\", \"\\uae30\\uad00\", \"\\uae30\\uc220\", \"\\uae30\\uc220\", \"\\uae30\\uc5c5\", \"\\uae30\\uc5c5\", \"\\uae30\\uc5c5\", \"\\uae30\\uc5c5\", \"\\uae30\\uc790\", \"\\uae30\\uc900\", \"\\uae30\\uc900\", \"\\uae30\\uc900\", \"\\uae30\\ud68c\", \"\\uae30\\ud68c\", \"\\uae30\\ud68c\", \"\\ub0a0\\uc528\", \"\\ub0a8\\uc131\", \"\\ub0a8\\uc790\", \"\\ub0b4\\uc6a9\", \"\\ub0b4\\uc6a9\", \"\\ub0b4\\uc6a9\", \"\\ub124\\uc774\\ubc84\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ub178\\ub3d9\", \"\\ub2f5\\ubcc0\", \"\\ub300\\ube44\", \"\\ub300\\uc0c1\", \"\\ub300\\uc0c1\", \"\\ub300\\uc0c1\", \"\\ub300\\uc120\", \"\\ub300\\uc678\", \"\\ub300\\uc804\", \"\\ub300\\uc911\\uad50\\ud1b5\", \"\\ub300\\ucd9c\", \"\\ub300\\ud1b5\\ub839\", \"\\ub300\\ud559\", \"\\ub300\\ud559\", \"\\ub300\\ud55c\\ubbfc\\uad6d\", \"\\ub300\\ud55c\\ubbfc\\uad6d\", \"\\ub54c\\ubb38\", \"\\ub54c\\ubb38\", \"\\ub54c\\ubb38\", \"\\ub9c8\\uc74c\", \"\\ub9c8\\uc74c\", \"\\ub9c8\\ucf00\\ud305\", \"\\ub9de\\ucda4\", \"\\uba74\\uc811\", \"\\ubaa8\\uc784\", \"\\ubaa8\\uc9d1\", \"\\ubb38\\uc81c\", \"\\ubb38\\ud654\", \"\\ubbf8\\ub798\", \"\\ubbf8\\ub9cc\", \"\\ubbfc\\uc0dd\", \"\\ubbfc\\uc0dd\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\ubc18\\uc751\", \"\\ubc1c\\uae09\", \"\\ubc29\\ubc95\", \"\\ubc29\\uc5ed\", \"\\ubc29\\uc5ed\", \"\\ubc31\\ub9cc\", \"\\ubcf4\\uace0\\uc11c\", \"\\ubcf4\\uc720\", \"\\ubcf4\\uc99d\", \"\\ubcf4\\uc99d\\uae08\", \"\\ubcf5\\uc9c0\", \"\\ubcf5\\uc9c0\", \"\\ubcf5\\uc9c0\", \"\\ubcf5\\uc9c0\", \"\\ubcf5\\uc9c0\", \"\\ubd80\\ubd84\", \"\\ubd80\\ubd84\", \"\\ubd80\\ubd84\", \"\\ubd84\\uacfc\", \"\\ubd84\\uc57c\", \"\\ubd84\\uc57c\", \"\\ubd84\\uc57c\", \"\\uc0ac\\ub78c\", \"\\uc0ac\\ub78c\", \"\\uc0ac\\uc5c5\", \"\\uc0ac\\uc5c5\", \"\\uc0ac\\uc5c5\", \"\\uc0ac\\ud56d\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0b0\\uc5c5\", \"\\uc0c1\\ub2f4\", \"\\uc0c1\\ub2f9\", \"\\uc0dd\\uac01\", \"\\uc0dd\\uac01\", \"\\uc11c\\ube44\\uc2a4\", \"\\uc11c\\uc6b8\", \"\\uc11c\\uc6b8\", \"\\uc11c\\uc6b8\\uc2dc\", \"\\uc120\\uc815\", \"\\uc138\\uc0c1\", \"\\uc13c\\ud130\", \"\\uc13c\\ud130\", \"\\uc18c\\uac1c\", \"\\uc18c\\uac1c\", \"\\uc18c\\ub4dd\", \"\\uc18c\\ub4dd\", \"\\uc18c\\ud1b5\", \"\\uc1a1\\ub3c4\", \"\\uc218\\uae09\", \"\\uc218\\ub2f9\", \"\\uc2a4\\ub9c8\\ud2b8\", \"\\uc2a4\\ud0c0\", \"\\uc2a4\\ud399\", \"\\uc2dc\\uae30\", \"\\uc2dc\\ubbfc\", \"\\uc2dc\\uc791\", \"\\uc2dc\\uc791\", \"\\uc2dc\\uc791\", \"\\uc2dc\\uc791\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\ud589\", \"\\uc2e0\\uc6a9\", \"\\uc2e0\\uccad\", \"\\uc2e0\\uccad\", \"\\uc2e0\\ud63c\", \"\\uc2e4\\uc2b5\", \"\\uc2ec\\ub9ac\", \"\\uc2ec\\ub9ac\", \"\\uc548\\ub0b4\", \"\\uc548\\ub0b4\", \"\\uc591\\uc131\", \"\\uc5ec\\uc131\", \"\\uc5ec\\uc131\", \"\\uc5f0\\uacc4\", \"\\uc5f0\\uacc4\", \"\\uc5f0\\uad6c\", \"\\uc608\\ube44\", \"\\uc608\\ube44\", \"\\uc608\\uc57d\", \"\\uc608\\uc815\", \"\\uc608\\uc815\", \"\\uc628\\ub77c\\uc778\", \"\\uc62c\\ud574\", \"\\uc62c\\ud574\", \"\\uc62c\\ud574\", \"\\uc644\\uc8fc\", \"\\uc6b4\\uc601\", \"\\uc6b4\\uc601\", \"\\uc6b4\\uc601\", \"\\uc6d4\\uc138\", \"\\uc704\\uc6d0\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc720\\ud615\", \"\\uc724\\uc11d\\uc5f4\", \"\\uc758\\uc6d0\", \"\\uc774\\uac70\", \"\\uc774\\uac8c\", \"\\uc774\\uc0ac\\ube44\", \"\\uc774\\uc0ac\\ube44\", \"\\uc774\\uc0ac\\ube44\", \"\\uc774\\uc0ac\\ube44\", \"\\uc774\\uc6a9\", \"\\uc774\\uc6a9\", \"\\uc774\\uc6a9\", \"\\uc774\\ud558\", \"\\uc774\\ud558\", \"\\uc778\\uad6c\", \"\\uc778\\uae30\", \"\\uc778\\ucc9c\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc77c\\uc815\", \"\\uc784\\ucc28\", \"\\uc785\\uc8fc\", \"\\uc790\\uaca9\", \"\\uc790\\uaca9\", \"\\uc790\\uaca9\", \"\\uc790\\uae08\", \"\\uc791\\uc131\", \"\\uc791\\uc131\\uc790\", \"\\uc794\\uc561\", \"\\uc7a5\\ub824\\uae08\", \"\\uc7a5\\uc810\", \"\\uc7a5\\uc810\", \"\\uc800\\uc791\", \"\\uc801\\uadf9\", \"\\uc801\\uae08\", \"\\uc801\\ub9bd\", \"\\uc804\\uc138\", \"\\uc804\\uc2dc\", \"\\uc804\\uc8fc\", \"\\uc804\\uc8fc\\uc2dc\", \"\\uc804\\uc8fc\\uc2dc\", \"\\uc804\\ud654\", \"\\uc811\\uc218\", \"\\uc815\\ub3c4\", \"\\uc815\\ub3c4\", \"\\uc815\\ub9ac\", \"\\uc815\\ubd80\", \"\\uc815\\ubd80\", \"\\uc815\\ubd80\", \"\\uc815\\uc0c1\", \"\\uc815\\uc0c1\", \"\\uc815\\uc758\\ub2f9\", \"\\uc815\\uce58\", \"\\uc815\\uce58\", \"\\uc81c\\uacf5\", \"\\uc81c\\ub3c4\", \"\\uc81c\\ub3c4\", \"\\uc81c\\uc2dc\", \"\\uc81c\\uc548\", \"\\uc81c\\uc791\", \"\\uc870\\ub840\", \"\\uc870\\uc120\", \"\\uc870\\uc131\", \"\\uc878\\uc5c5\", \"\\uc8fc\\uac70\", \"\\uc8fc\\uac70\", \"\\uc8fc\\ub9d0\", \"\\uc8fc\\uc694\", \"\\uc8fc\\ud0dd\", \"\\uc911\\uc2ec\", \"\\uc99d\\uac00\", \"\\uc99d\\uba85\\uc11c\", \"\\uc9c0\\uae09\", \"\\uc9c0\\uae09\", \"\\uc9c0\\ub09c\\ud574\", \"\\uc9c0\\uc0ac\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc6d0\", \"\\uc9c0\\uc6d0\", \"\\uc9c0\\uc6d0\", \"\\uc9c0\\uc6d0\\uae08\", \"\\uc9c1\\uc6d0\", \"\\uc9c4\\ub85c\", \"\\uc9c4\\ud589\", \"\\uc9c4\\ud589\", \"\\uc9d1\\ub2e8\", \"\\ucc38\\uc5ec\", \"\\ucc38\\uc5ec\", \"\\ucc3d\\uc5c5\", \"\\ucc44\\uc6a9\", \"\\ucc44\\uc6a9\", \"\\uccad\\ucd98\", \"\\ucd09\\uc9c4\", \"\\ucd5c\\ub300\", \"\\ucd5c\\uc885\", \"\\ucd94\\uac00\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucd94\\ucc9c\", \"\\ucd94\\ucc9c\", \"\\ucda9\\ub0a8\", \"\\ucda9\\uccad\\ub0a8\\ub3c4\", \"\\ucde8\\uc5c5\", \"\\ucde8\\uc5c5\", \"\\ucde8\\uc5c5\", \"\\uce5c\\uad6c\", \"\\uce74\\ub4dc\", \"\\uce74\\ud398\", \"\\uce74\\ud398\", \"\\ucee4\\ud53c\", \"\\ucf58\\ud150\\uce20\", \"\\ud0a4\\ud2b8\", \"\\ud0a4\\ud2b8\", \"\\ud0a4\\ud2b8\", \"\\ud150\\ub370\", \"\\ud22c\\uc790\", \"\\ud22c\\uc790\\uc790\", \"\\ud22c\\ud45c\", \"\\ud2b9\\ubcc4\", \"\\ud3d0\\uc9c0\", \"\\ud3d0\\uc9c0\", \"\\ud3d0\\uc9c0\", \"\\ud3ec\\ud138\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\ud504\\ub85c\\uc81d\\ud2b8\", \"\\ud504\\ub85c\\uc81d\\ud2b8\", \"\\ud560\\uba38\\ub2c8\", \"\\ud589\\uc815\", \"\\ud604\\uc7a5\", \"\\ud604\\uc7a5\", \"\\ud604\\ud669\", \"\\ud604\\ud669\", \"\\ud611\\uc758\", \"\\ud611\\uc758\", \"\\ud64d\\ubcf4\", \"\\ud654\\ud3d0\", \"\\ud655\\ub300\", \"\\ud655\\ub300\", \"\\ud655\\ub300\", \"\\ud655\\ub300\", \"\\ud655\\uc778\", \"\\ud655\\uc778\", \"\\ud655\\uc9c4\", \"\\ud65c\\ub3d9\", \"\\ud65c\\ub3d9\", \"\\ud65c\\ub3d9\", \"\\ud68c\\ubcf5\", \"\\ud68c\\uc0ac\", \"\\ud68c\\uc0ac\", \"\\ud68c\\uc6d0\", \"\\ud6c4\\uae30\", \"\\ud6c4\\ubcf4\", \"\\ud6c4\\ubcf4\", \"\\ud6c8\\ub828\", \"\\ud6c8\\ub828\", \"\\ud76c\\ub9dd\", \"\\ud76c\\ub9dd\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [5, 4, 1, 3, 2]};\n",
              "\n",
              "function LDAvis_load_lib(url, callback){\n",
              "  var s = document.createElement('script');\n",
              "  s.src = url;\n",
              "  s.async = true;\n",
              "  s.onreadystatechange = s.onload = callback;\n",
              "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
              "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "}\n",
              "\n",
              "if(typeof(LDAvis) !== \"undefined\"){\n",
              "   // already loaded: just create the visualization\n",
              "   !function(LDAvis){\n",
              "       new LDAvis(\"#\" + \"ldavis_el16921348818543236484467928600\", ldavis_el16921348818543236484467928600_data);\n",
              "   }(LDAvis);\n",
              "}else if(typeof define === \"function\" && define.amd){\n",
              "   // require.js is available: use it to load d3/LDAvis\n",
              "   require.config({paths: {d3: \"https://d3js.org/d3.v5\"}});\n",
              "   require([\"d3\"], function(d3){\n",
              "      window.d3 = d3;\n",
              "      LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
              "        new LDAvis(\"#\" + \"ldavis_el16921348818543236484467928600\", ldavis_el16921348818543236484467928600_data);\n",
              "      });\n",
              "    });\n",
              "}else{\n",
              "    // require.js not available: dynamically load d3 & LDAvis\n",
              "    LDAvis_load_lib(\"https://d3js.org/d3.v5.js\", function(){\n",
              "         LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
              "                 new LDAvis(\"#\" + \"ldavis_el16921348818543236484467928600\", ldavis_el16921348818543236484467928600_data);\n",
              "            })\n",
              "         });\n",
              "}\n",
              "</script>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "topics_table1_sns = create_topics_table(lda_model_sns5, num_topics=5)\n",
        "print(topics_table1_sns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Tb6lnGiGXAgd",
        "outputId": "4cd40e95-643a-4ad6-a8d6-f1b0acd9c6b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Topic                                  Top Words\n",
            "0  Topic 1    신청, 면접, 지원, 기업, 훈련, 지원금, 방법, 지급, 확인, 금액\n",
            "1  Topic 2    생각, 사람, 제도, 정치, 국민, 가족, 스타, 때문, 대통령, 폐지\n",
            "2  Topic 3  사업, 창업, 지원, 대전, 일자리, 확대, 대출, 운영, 주택, 프로젝트\n",
            "3  Topic 4    지원, 취업, 고용, 수당, 서울, 참여, 서울시, 대상, 최대, 사업\n",
            "4  Topic 5    교육, 시장, 활동, 일자리, 문제, 미래, 경제, 문화, 과정, 사회\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lda_model_sns5_peak1, corpus, id2word = train_lda_model_from_dataframe(dfs['peak1_sns'], column_name='Summary', num_topics=5, no_below=10, passes=10)\n",
        "lda_model_peak1, corpus, id2word = train_lda_model_from_dataframe(dfs['peak1'], column_name='summary', num_topics=5, no_below=10, passes=10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BSfIpfAsXSCd",
        "outputId": "3e9da5f2-91c2-4c2f-c33d-49aa69d4ef32"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualize the topics (corpus를 이용하여 lda_model_5 시각화)\n",
        "pyLDAvis.enable_notebook()\n",
        "vis = gensimvis.prepare(lda_model_sns5_peak1, corpus, dictionary=lda_model_sns5_peak1.id2word)\n",
        "pyLDAvis.display(vis)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 917
        },
        "id": "d2mLxdeCaBiT",
        "outputId": "b391113f-6543-4fe2-a156-96a656c1a078"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v1.0.0.css\">\n",
              "\n",
              "\n",
              "<div id=\"ldavis_el16921348818543214082904205666\" style=\"background-color:white;\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "\n",
              "var ldavis_el16921348818543214082904205666_data = {\"mdsDat\": {\"x\": [0.10149959466303726, 0.17683073431860893, 0.22037924178421187, -0.2347260114748678, -0.2639835592909905], \"y\": [-0.23241526188929706, 0.028707254052013156, 0.16026340790485183, -0.1823918453538026, 0.22583644528623453], \"topics\": [1, 2, 3, 4, 5], \"cluster\": [1, 1, 1, 1, 1], \"Freq\": [30.23320487458585, 25.211363335823478, 23.566339774581255, 12.473197170007893, 8.515894845001522]}, \"tinfo\": {\"Term\": [\"\\uc2e0\\uccad\", \"\\ub300\\ud1b5\\ub839\", \"\\ucde8\\uc5c5\", \"\\uc9c0\\uc9c0\\uc728\", \"\\uc9c0\\uc6d0\", \"\\uad6d\\ubbfc\", \"\\ucc38\\uc5ec\", \"\\uc81c\\ub3c4\", \"\\uc9c0\\uae09\", \"\\uacbd\\uae30\\ub3c4\", \"\\uc870\\uc0ac\", \"\\uc720\\ud615\", \"\\uc2dc\\uc7a5\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\ub178\\ub3d9\", \"\\uc9c0\\uc6d0\\uae08\", \"\\ub300\\ud45c\", \"\\uae30\\uc5c5\", \"\\ud65c\\ub3d9\", \"\\uad6c\\uc9c1\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc0ac\\uc5c5\", \"\\ubb38\\uc81c\", \"\\ubaa8\\uc9d1\", \"\\uc9c0\\uc5ed\", \"\\uc911\\uc18c\\uae30\\uc5c5\", \"\\uc815\\uce58\", \"\\uc8fc\\uac70\", \"\\ubd84\\uae30\", \"\\ud655\\uc778\", \"\\ubaa8\\uc9d1\", \"\\uad6c\\uc131\", \"\\ubc1c\\uad74\", \"\\uc81c\\uc548\", \"\\uac04\\ub2f4\\ud68c\", \"\\ubb38\\ud654\", \"\\ucc9c\\uc548\\uc2dc\", \"\\uad11\\uc8fc\", \"\\uacf5\\uac04\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\uacbd\\ubd81\", \"\\uc704\\uc6d0\", \"\\uc758\\uacac\", \"\\ub3c4\\uc2dc\", \"\\ub300\\uc804\", \"\\uc608\\uc0b0\", \"\\uad00\\uacc4\\uc790\", \"\\uc601\\uc0c1\", \"\\ub124\\ud2b8\", \"\\uc5ed\\ud560\", \"\\ub300\\ud559\\uad50\", \"\\uc758\\ud68c\", \"\\ud65c\\ub825\", \"\\ud589\\uc815\", \"\\uccad\\uc18c\\ub144\", \"\\uc804\\uad6d\", \"\\uacf5\\ub3d9\\uccb4\", \"\\ubd84\\uacfc\", \"\\uc8fc\\uad00\", \"\\uc9c0\\ub09c\\ud574\", \"\\uac1c\\ucd5c\", \"\\ucc38\\uc11d\", \"\\uc624\\ud6c4\", \"\\ud68c\\uc758\", \"\\ucc38\\uc5ec\", \"\\uc8fc\\uac70\", \"\\uc9c0\\uc5ed\", \"\\uacf5\\uac1c\", \"\\uc6b4\\uc601\", \"\\ucc3d\\uc5c5\", \"\\uc13c\\ud130\", \"\\uc9c4\\ud589\", \"\\ub2e8\\uccb4\", \"\\ud648\\ud398\\uc774\\uc9c0\", \"\\uc2dc\\ubbfc\", \"\\ud65c\\ub3d9\", \"\\uc0ac\\uc5c5\", \"\\uc18c\\ud1b5\", \"\\uc704\\uc6d0\\ud68c\", \"\\ucd94\\uc9c4\", \"\\uc628\\ub77c\\uc778\", \"\\uad50\\uc721\", \"\\uc9c0\\uc6d0\", \"\\ub178\\ub3d9\", \"\\uc911\\uc18c\\uae30\\uc5c5\", \"\\ubcf4\\ud5d8\", \"\\uae30\\uad00\", \"\\uc2e4\\ud0dc\", \"\\uac15\\ud654\", \"\\ucd9c\\ucc98\", \"\\uc2dc\\ud589\", \"\\ube48\\uace4\", \"\\uc5f0\\uad6c\", \"\\uc870\\uc815\", \"\\uc790\\uc0b0\", \"\\uc548\\uc815\", \"\\uc790\\uae08\", \"\\uadfc\\ub85c\\uc790\", \"\\uc804\\ubb38\\uac00\", \"\\ucc3d\\ucd9c\", \"\\ud655\\uc0b0\", \"\\ucc44\\uc6a9\", \"\\uacf5\\uc81c\", \"\\uad6d\\uac00\", \"\\ud2b9\\ubcc4\", \"\\ubd80\\ucc98\", \"\\uacf5\\uacf5\", \"\\uc801\\uc6a9\", \"\\uc2e0\\uc6a9\", \"\\uad50\\uc721\\ubd80\", \"\\uc0ac\\ub840\", \"\\ub514\\uc9c0\\ud138\", \"\\uc9c0\\ubc29\", \"\\ud50c\\ub7ab\", \"\\ud574\\uc18c\", \"\\ucde8\\uc5c5\\uc790\", \"\\uc0c1\\ub2f4\", \"\\ud76c\\ub9dd\", \"\\uace0\\uc6a9\", \"\\uadfc\\ub85c\", \"\\uae30\\uc5c5\", \"\\uc77c\\uc790\\ub9ac\", \"\\ub9c8\\ub828\", \"\\uc878\\uc5c5\", \"\\uac00\\uad6c\", \"\\ud1b5\\uc7a5\", \"\\uc815\\ubd80\", \"\\uc9c0\\uc6d0\", \"\\ucde8\\uc5c5\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc0ac\\uc5c5\", \"\\ub300\\uc0c1\", \"\\ucf54\\ub85c\\ub098\", \"\\ubcf5\\uc9c0\", \"\\uc870\\uc0ac\", \"\\uc18c\\ub4dd\", \"\\uc900\\ube44\", \"\\uacc4\\ud68d\", \"\\uc2e0\\uccad\", \"\\uc9c0\\uae09\", \"\\uacbd\\uae30\\ub3c4\", \"\\uc720\\ud615\", \"\\uc9c0\\uc6d0\\uae08\", \"\\uad6c\\uc9c1\", \"\\ubd84\\uae30\", \"\\ud655\\uc778\", \"\\uc218\\ub2f9\", \"\\uc790\\uaca9\", \"\\ubc29\\ubc95\", \"\\uae30\\ubcf8\\uc18c\\ub4dd\", \"\\uba74\\uc811\", \"\\uce74\\ud398\", \"\\ub300\\ud55c\\ubbfc\\uad6d\", \"\\ucd5c\\ub300\", \"\\uc11c\\ub958\", \"\\ubaa8\\uc784\", \"\\uc8fc\\ubbfc\", \"\\ub124\\uc774\\ubc84\", \"\\uc694\\uac74\", \"\\uc2a4\\ud399\", \"\\ub4f1\\ub85d\", \"\\uac1c\\uc6d4\", \"\\uce74\\ub4dc\", \"\\uc81c\\ucd9c\", \"\\ud569\\uaca9\", \"\\uc811\\uc218\", \"\\ucd09\\uc9c4\", \"\\uad6c\\uc9c1\\uc790\", \"\\uc81c\\ub3c4\", \"\\uc2dc\\uc791\", \"\\uacbd\\uae30\", \"\\ucde8\\uc5c5\", \"\\uc9c0\\uc6d0\", \"\\uad6d\\ubbfc\", \"\\uac00\\ub2a5\", \"\\ud65c\\ub3d9\", \"\\uae30\\uac04\", \"\\uc18c\\ub4dd\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\uc815\\uce58\", \"\\uc758\\uc6d0\", \"\\uc774\\uc57c\\uae30\", \"\\uac1c\\ud601\", \"\\ubd80\\ub3d9\\uc0b0\", \"\\uc120\\uac70\", \"\\uad6c\\uc870\", \"\\ud6c4\\ubcf4\", \"\\ub300\\uc120\", \"\\uc9c4\\ubcf4\", \"\\ubbfc\\uc0dd\", \"\\ubcf4\\uc218\", \"\\ubaa8\\uc2b5\", \"\\uc8fc\\ud0dd\", \"\\uacb0\\uc815\", \"\\ubc1c\\uc5b8\", \"\\uc6d0\\uc778\", \"\\ub2f9\\uc2dc\", \"\\uc778\\ud130\\ubdf0\", \"\\ucd5c\\uace0\", \"\\uac80\\ucc30\", \"\\uc785\\uc7a5\", \"\\uc815\\uc758\\ub2f9\", \"\\ub2f9\\uc6d0\", \"\\uc138\\ub825\", \"\\uad6d\\ud68c\", \"\\uc774\\uc775\", \"\\ub2f9\\ub0b4\", \"\\uad6d\\ud68c\\uc758\\uc6d0\", \"\\ucd5c\\uc800\", \"\\uacf5\\uc815\", \"\\uc911\\uc694\", \"\\ucc98\\uc74c\", \"\\uc778\\uc0ac\", \"\\ub3d9\\uc2dc\", \"\\uc2dc\\uc7a5\", \"\\ub178\\ub3d9\\uc790\", \"\\ub300\\ud45c\", \"\\uc2e0\\ub8b0\", \"\\uc138\\ub300\", \"\\ubb38\\uc81c\", \"\\uc0dd\\uac01\", \"\\uad6d\\ubbfc\", \"\\uc5ec\\ub860\", \"\\uc0ac\\uc9c4\", \"\\uc815\\ubd80\", \"\\ud574\\uacb0\", \"\\ub300\\ud1b5\\ub839\", \"\\uc9c0\\uc9c0\\uc728\", \"\\ubb38\\uc7ac\", \"\\uc5ec\\uc131\", \"\\uccad\\uc640\\ub300\", \"\\uc9c0\\uc9c0\", \"\\uc9c0\\ub09c\\uc8fc\", \"\\uc815\\uad8c\", \"\\ubd80\\uc0b0\", \"\\ub0a8\\uc131\", \"\\ub0a8\\ub140\", \"\\ubc15\\uadfc\\ud61c\", \"\\ubb38\\uc7ac\\uc778\", \"\\uc5ed\\ub300\", \"\\uc7ac\\ub09c\", \"\\ub178\\ub144\\uce35\", \"\\uc544\\ub974\\ubc14\\uc774\\ud2b8\", \"\\uc138\\uc885\", \"\\ud558\\ub8e8\", \"\\ud3d0\\uc9c0\", \"\\ud3c9\\ub4f1\", \"\\uc778\\uc2dd\", \"\\uc804\\ub77c\", \"\\uc0dd\\ud65c\\ube44\", \"\\uc138\\uae08\", \"\\ud55c\\uad6d\\uac24\\ub7fd\", \"\\uc774\\ub150\", \"\\uc6b0\\uad70\", \"\\ud398\\ubbf8\\ub2c8\\uc998\", \"\\uc9c8\\ubb38\", \"\\ub2e8\\uc5b4\", \"\\uc218\\uc815\", \"\\uc624\\ub978\\ucabd\", \"\\ud3ec\\uc778\\ud2b8\", \"\\uc0ac\\ub791\", \"\\ubd80\\uc815\", \"\\ubd80\\ubd84\", \"\\uc804\\ubc18\", \"\\uacb0\\uacfc\", \"\\uc870\\uc0ac\", \"\\uace0\\ubbfc\", \"\\uc0ac\\ub78c\", \"\\uc11c\\uc6b8\", \"\\ubd80\\uc871\", \"\\uad50\\uc218\", \"\\ud3c9\\uac00\", \"\\ud3c9\\uade0\", \"\\ub300\\ucc98\", \"\\ucf54\\ub85c\\ub098\", \"\\uacbd\\uc81c\", \"\\ubb38\\uc81c\", \"\\uc5ec\\ub860\", \"\\uc138\\ub300\", \"\\uc815\\ubd80\", \"\\uc0ac\\ud68c\", \"\\ud544\\uc694\", \"\\uc9c1\\uc7a5\", \"\\uc0dd\\uac01\"], \"Freq\": [722.0, 414.0, 954.0, 285.0, 1401.0, 540.0, 586.0, 488.0, 351.0, 335.0, 271.0, 303.0, 262.0, 205.0, 305.0, 291.0, 276.0, 411.0, 606.0, 258.0, 465.0, 561.0, 274.0, 275.0, 357.0, 233.0, 150.0, 332.0, 211.0, 206.0, 274.8564246535523, 203.491243894816, 198.2215997850997, 178.05295234906896, 173.59865438763472, 160.74706240590137, 151.90392094626415, 154.04058353014665, 142.709274979155, 134.63599210368355, 136.62960745038217, 122.45342897569444, 117.02064632532344, 104.29760847331671, 106.42787311889803, 103.43305151626805, 100.24342157839254, 84.444779266678, 82.70596181282389, 87.42634291938387, 84.86261795389758, 79.29725580428547, 78.45980122476264, 72.57859418768226, 74.78337704242149, 134.6841721335016, 67.98005381864537, 66.9950601160897, 68.96751339325462, 100.92969820747373, 141.71531971996495, 72.8588505433502, 72.1543575621615, 162.52472956288432, 541.9586191742775, 309.44687807888357, 330.11285858552606, 91.05266769041661, 219.7453305533204, 202.8462783979045, 234.31892762881643, 156.83808205233774, 214.62925473488323, 195.5831788899471, 134.99588501915036, 355.52845522235475, 304.86549218191675, 155.57226773150006, 246.65198448329, 134.64649538572797, 139.8613838068167, 139.49930492909698, 144.62251622594502, 305.49640638278356, 233.09509356411797, 184.49038071017762, 154.61375118100105, 145.32341704107165, 143.7890971859378, 129.29685112916053, 103.58497449450248, 101.0989035695664, 114.71172040424794, 98.94826967352147, 96.69835625743845, 94.86539014942399, 91.63376693092837, 81.73408417394486, 83.28259422768097, 93.93875906565916, 79.47066228159454, 76.78741799132834, 73.97070432392184, 66.31514775319974, 65.29377949495465, 60.25727416463386, 56.82721787649356, 55.23463299179863, 55.47533655122218, 53.142730956913695, 54.212868297195705, 48.29549619985553, 48.219762035461656, 68.8605433413262, 59.33452593416804, 71.2922987802286, 147.32418317381087, 181.50640794989908, 210.77709006367084, 187.56823849201774, 345.52352579797247, 363.2241201835275, 199.1009648722697, 106.83015805944305, 112.46637156379886, 154.57296640131085, 201.56946662703035, 504.5239675436413, 385.0951361330165, 236.26458371980428, 256.3765930245943, 157.58826874889502, 154.10832816989813, 118.8381782876038, 128.53172154854767, 125.10181346091495, 109.00607496208374, 103.5875309532585, 722.0924915981105, 351.0440644954177, 334.9321327109675, 302.7931606506523, 290.9766727059593, 257.94016134387584, 211.4762459197138, 206.50511942146383, 193.41183714390976, 179.32994559437873, 173.05278096845316, 166.08777070352934, 154.84938451222558, 143.51343126887133, 146.32985390854702, 126.95583291740175, 113.71462774026008, 110.64707002986196, 109.21060540849678, 100.82488836995836, 100.76493235671477, 100.10563785988265, 87.96274428116803, 85.42888236287165, 82.7469520879315, 81.76521393022647, 77.65220787152552, 76.85335771909821, 79.1779692723196, 70.1128708101461, 440.2182444055459, 168.02556345873754, 100.63877952986569, 569.6828652153728, 752.2035983528225, 321.3047182701432, 154.01329735342148, 250.77187137970606, 127.06758549569106, 144.8580085899027, 204.74620869371913, 150.49893985441452, 124.50533588849336, 115.19974920070166, 112.00835168369231, 106.35421072721641, 104.00636202697882, 102.31690344218886, 83.39783122905335, 77.20045885364097, 68.03715247310761, 62.57891181291245, 65.4533552911605, 59.25317470355128, 62.77957800456645, 51.58347793655421, 47.6083215932672, 46.32439671186044, 44.482062867790084, 36.10490192729436, 38.57899552989598, 33.8441811266265, 33.98971324095873, 35.54002234514324, 29.69385796496906, 29.34499808972054, 29.06921222180071, 28.360261455552937, 27.268046548571828, 27.126789075782067, 41.23556060204587, 87.87519929640659, 53.19685816689364, 58.85601064565819, 44.87323289573297, 44.44315116510418, 210.20348151054617, 115.03567042122077, 177.40758106770616, 42.96756030215213, 95.6867877668854, 145.60501053499905, 80.55664636836384, 218.7603900280807, 75.14194399544002, 72.06988449857684, 76.65553370881032, 58.18096555891773, 413.82002084488516, 285.52669640539835, 102.07425314365838, 89.09104681870741, 90.08971726063656, 80.09679549235472, 62.91123192447499, 47.7542511688342, 35.715228381556805, 35.59668325962413, 29.817194325769535, 42.40655511999229, 24.128595325041516, 24.113021917063282, 23.03799872515406, 20.417666457078752, 21.248748807624008, 21.66913571061214, 18.30792896891853, 17.355774759803825, 16.423713050294598, 14.782619505595077, 19.91982550235703, 13.820880216786922, 14.044032736073868, 39.581608494987925, 13.229590053840939, 19.844591574840194, 12.373420549942125, 12.440280829694384, 13.145181531829696, 13.765319543321667, 23.742123510144847, 69.74054426375136, 18.530115346212614, 39.629312381625205, 23.619323358709924, 23.786180586202843, 74.89568771282383, 142.26582011779377, 47.06622291015457, 55.835273045662916, 71.88852820974049, 56.38173396984417, 28.045472626830218, 68.62980635656709, 31.070435673942683, 31.570176374189234, 76.74084371209638, 57.95034809288993, 64.44926490019223, 41.33380711738751, 42.41492000740201, 54.09003515093731, 44.52163016721931, 40.9672838819808, 33.9443301559741, 34.890128101900004], \"Total\": [722.0, 414.0, 954.0, 285.0, 1401.0, 540.0, 586.0, 488.0, 351.0, 335.0, 271.0, 303.0, 262.0, 205.0, 305.0, 291.0, 276.0, 411.0, 606.0, 258.0, 465.0, 561.0, 274.0, 275.0, 357.0, 233.0, 150.0, 332.0, 211.0, 206.0, 275.1629674427304, 203.7912301846155, 198.52164897143993, 178.35203691581202, 173.91550398383694, 161.04814180457282, 152.20095900457056, 154.34347509692648, 143.00658204647124, 134.9413435974191, 136.9553028087517, 122.75477635698714, 117.32962142550362, 104.59794297432171, 106.73448188584373, 103.7480422432378, 100.55299970663225, 84.74750089663316, 83.00855781588663, 87.74949099490709, 85.18107081290314, 79.59686378895292, 78.76687647174268, 72.88594237796717, 75.10065853664278, 135.25567609681747, 68.28115192652862, 67.30058231574058, 69.28350922651543, 101.39381337777688, 142.94899212250928, 73.19440528731779, 72.51330269047372, 165.46621321707886, 586.6262601650657, 332.9429549483158, 357.8436378796315, 92.8367391955374, 248.9986313452911, 232.85507663705363, 282.64399931404296, 178.38718789967697, 262.3796561778674, 239.84699067525253, 152.08307468665666, 606.5459855271312, 561.4109806894181, 206.2650998083969, 483.09010516868113, 174.70884594186234, 195.33310766917484, 226.56354810746777, 1401.4691166261084, 305.7900943155891, 233.37170810509383, 184.77399635640916, 154.8938432651267, 145.6029212341042, 144.06956963757676, 129.5804509709363, 103.86118637649179, 101.37295377951547, 115.02740953922712, 99.23123842335012, 96.97882403611152, 95.14828472339798, 91.91260814287914, 82.010661713495, 83.56582091873086, 94.26136794244127, 79.74601729661836, 77.06028406872879, 74.24292186224676, 66.59041058482585, 65.57163049667514, 60.53426948547635, 57.107112944243006, 55.509608358998065, 55.761945261700816, 53.42552264611878, 54.511191335478564, 48.56661589119184, 48.49518759799575, 69.26854123662628, 59.703139373058995, 72.21361233199822, 154.3072816232509, 197.65109382985742, 233.41481275775112, 208.73628234824508, 411.82400157860246, 465.10514969369547, 256.5006050758191, 120.44363247997633, 137.0497937621095, 217.2406413147743, 332.4754476105023, 1401.4691166261084, 954.9965276066292, 483.09010516868113, 561.4109806894181, 300.8916763956879, 293.5829404806947, 184.66254629518377, 271.0483748294927, 270.178708104028, 149.4565563370381, 185.67511870454678, 722.4399589141818, 351.39188389234295, 335.2768897183876, 303.13796400811214, 291.3291593849233, 258.28628260626675, 211.8215802143711, 206.86709671924638, 193.78442213258825, 179.67599140176912, 173.40834558808396, 166.43203384573675, 155.2036365334188, 143.85905690753293, 146.70489420161232, 127.31184631663874, 114.0659544903029, 110.99415915255102, 109.57820880236999, 101.1694520789015, 101.11066897419771, 100.46254380427254, 88.31391294640133, 85.78199048646411, 83.10540482518589, 82.1213745798061, 77.99761512762707, 77.21288721965162, 79.55439216844688, 70.45758720587226, 488.0968393235523, 181.39763848153754, 104.08491035790573, 954.9965276066292, 1401.4691166261084, 540.344737785725, 210.33212023576178, 606.5459855271312, 173.68481131733247, 270.178708104028, 205.07726347084096, 150.83128909653746, 124.83497599793067, 115.53387283208332, 112.33848812693262, 106.68881270784723, 104.33568706524876, 102.66416296192638, 83.7319670628676, 77.5457412315386, 68.38677877832004, 62.913779568154744, 65.81321498764828, 59.59292355066847, 63.14515637150929, 51.94858566494831, 47.951767842317686, 46.66189998540343, 44.84999396526984, 36.43714043169888, 38.95141117678621, 34.172399345818725, 34.32509670625186, 35.92718275759289, 30.02392264022218, 29.678005659345924, 29.409166698189637, 28.697454125385136, 27.598707592879396, 27.460096937286686, 41.76140544830952, 93.72579998436684, 55.449748310801226, 61.83212950925663, 46.765774475771615, 46.41746634783097, 262.79726439599995, 152.06512292237238, 276.1921796870509, 45.841653055099336, 145.5861778200471, 274.98198125509174, 115.74682149841912, 540.344737785725, 116.77624325229226, 141.7504041360838, 332.4754476105023, 151.85674909187978, 414.2310796436058, 285.89841489819565, 102.45133627799747, 89.46170580174966, 90.50125179991137, 80.46733702777001, 63.42280881318834, 48.16377294119006, 36.078139393839514, 35.96094026239199, 30.179247842981226, 43.00048814792094, 24.506601490775573, 24.507139041403686, 23.42320391545733, 20.79552492235376, 21.64309860061293, 22.085205539689063, 18.669871424135415, 17.725698715984485, 16.79234424080145, 15.145556288211353, 20.422205303524166, 14.178780240123714, 14.422802951474841, 40.666107752274435, 13.593438789788529, 20.40738430425583, 12.737325042501771, 12.81394586569016, 13.543336016633875, 14.195014805174191, 25.292598090915643, 80.04819079525926, 19.512441177340865, 44.28187116227122, 25.600587625164838, 26.892948338121098, 112.96408192698397, 271.0483748294927, 67.98475244159962, 88.32480158132485, 132.67684237477553, 99.3947245297385, 35.10664519975866, 197.08947709397827, 44.44090441067325, 47.577159587918004, 293.5829404806947, 202.53180501393305, 274.98198125509174, 116.77624325229226, 145.5861778200471, 332.4754476105023, 198.09421803120054, 140.83082907565753, 88.6789157963295, 115.74682149841912], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -4.2403, -4.5409, -4.5671, -4.6745, -4.6998, -4.7767, -4.8333, -4.8193, -4.8957, -4.954, -4.9393, -5.0488, -5.0942, -5.2093, -5.1891, -5.2176, -5.2489, -5.4204, -5.4412, -5.3857, -5.4155, -5.4833, -5.4939, -5.5719, -5.5419, -4.9536, -5.6373, -5.6519, -5.6229, -5.2421, -4.9027, -5.568, -5.5777, -4.7657, -3.5613, -4.1217, -4.0571, -5.3451, -4.4641, -4.5441, -4.3998, -4.8013, -4.4876, -4.5805, -4.9513, -3.9829, -4.1367, -4.8094, -4.3486, -4.9539, -4.9159, -4.9185, -4.8824, -3.9529, -4.2234, -4.4573, -4.634, -4.6959, -4.7065, -4.8128, -5.0345, -5.0588, -4.9325, -5.0803, -5.1033, -5.1224, -5.1571, -5.2714, -5.2526, -5.1322, -5.2995, -5.3338, -5.3712, -5.4805, -5.496, -5.5763, -5.6349, -5.6633, -5.6589, -5.7019, -5.682, -5.7975, -5.7991, -5.4428, -5.5917, -5.4081, -4.6823, -4.4736, -4.3241, -4.4407, -3.8298, -3.7799, -4.3811, -5.0036, -4.9522, -4.6342, -4.3688, -3.4513, -3.7214, -4.2099, -4.1282, -4.6149, -4.6372, -4.8971, -4.8187, -4.8458, -4.9835, -5.0345, -3.0253, -3.7465, -3.7935, -3.8944, -3.9342, -4.0547, -4.2533, -4.2771, -4.3426, -4.4182, -4.4538, -4.4949, -4.565, -4.641, -4.6215, -4.7636, -4.8737, -4.9011, -4.9141, -4.994, -4.9946, -5.0012, -5.1305, -5.1597, -5.1916, -5.2036, -5.2552, -5.2655, -5.2357, -5.3573, -3.5201, -4.4833, -4.9959, -3.2623, -2.9844, -3.835, -4.5704, -4.0829, -4.7627, -4.6317, -3.6494, -3.9572, -4.1468, -4.2245, -4.2526, -4.3044, -4.3267, -4.3431, -4.5476, -4.6248, -4.7511, -4.8347, -4.7898, -4.8894, -4.8315, -5.028, -5.1082, -5.1355, -5.1761, -5.3847, -5.3185, -5.4494, -5.4451, -5.4005, -5.5802, -5.5921, -5.6015, -5.6262, -5.6655, -5.6707, -5.2519, -4.4953, -4.9972, -4.8961, -5.1673, -5.177, -3.6231, -4.2259, -3.7927, -5.2107, -4.4101, -3.9903, -4.5822, -3.5832, -4.6518, -4.6935, -4.6319, -4.9076, -2.5641, -2.9352, -3.9638, -4.0999, -4.0887, -4.2063, -4.4478, -4.7235, -5.0139, -5.0173, -5.1944, -4.8422, -5.4061, -5.4068, -5.4524, -5.5731, -5.5332, -5.5136, -5.6822, -5.7356, -5.7908, -5.8961, -5.5978, -5.9633, -5.9473, -4.9112, -6.0071, -5.6016, -6.074, -6.0686, -6.0135, -5.9674, -5.4223, -4.3447, -5.6701, -4.91, -5.4275, -5.4204, -4.2734, -3.6318, -4.738, -4.5671, -4.3144, -4.5574, -5.2557, -4.3608, -5.1533, -5.1373, -4.2491, -4.5299, -4.4236, -4.8678, -4.842, -4.5989, -4.7936, -4.8768, -5.0648, -5.0373], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.1951, 1.1948, 1.1947, 1.1946, 1.1944, 1.1944, 1.1943, 1.1943, 1.1941, 1.194, 1.1938, 1.1938, 1.1936, 1.1934, 1.1934, 1.1932, 1.1931, 1.1927, 1.1926, 1.1925, 1.1925, 1.1925, 1.1923, 1.192, 1.192, 1.192, 1.1918, 1.1917, 1.1917, 1.1916, 1.1876, 1.1916, 1.1913, 1.1783, 1.117, 1.123, 1.1156, 1.1768, 1.0713, 1.0583, 1.0087, 1.0675, 0.9953, 0.9922, 1.077, 0.6621, 0.5856, 0.9142, 0.524, 0.9358, 0.8622, 0.7113, -1.0749, 1.3769, 1.3767, 1.3763, 1.3761, 1.376, 1.3759, 1.3757, 1.3752, 1.3752, 1.3751, 1.375, 1.375, 1.3749, 1.3748, 1.3745, 1.3745, 1.3744, 1.3744, 1.3743, 1.3742, 1.3737, 1.3736, 1.3733, 1.373, 1.3729, 1.3727, 1.3726, 1.3724, 1.3723, 1.3722, 1.372, 1.3717, 1.365, 1.3316, 1.2927, 1.2759, 1.2709, 1.2023, 1.1306, 1.1246, 1.2579, 1.1802, 1.0375, 0.8774, 0.3562, 0.4697, 0.6626, 0.5941, 0.7311, 0.7334, 0.9371, 0.6318, 0.6079, 1.0623, 0.7943, 1.4449, 1.4444, 1.4443, 1.4442, 1.4441, 1.444, 1.4437, 1.4436, 1.4434, 1.4434, 1.4433, 1.4433, 1.4431, 1.4429, 1.4428, 1.4426, 1.4423, 1.4422, 1.442, 1.4419, 1.4419, 1.4418, 1.4414, 1.4412, 1.441, 1.441, 1.4409, 1.4407, 1.4406, 1.4404, 1.3421, 1.3688, 1.4117, 0.9287, 0.8231, 0.9255, 1.1337, 0.5621, 1.1328, 0.822, 2.08, 2.0794, 2.0789, 2.0787, 2.0786, 2.0784, 2.0784, 2.0782, 2.0776, 2.0771, 2.0765, 2.0763, 2.0761, 2.0759, 2.0758, 2.0745, 2.0744, 2.0743, 2.0734, 2.0724, 2.072, 2.0719, 2.0718, 2.0708, 2.0705, 2.0703, 2.07, 2.0698, 2.0695, 2.0694, 2.0689, 2.0171, 2.0401, 2.0323, 2.0403, 2.0381, 1.8583, 1.8025, 1.6389, 2.0168, 1.6619, 1.4458, 1.7191, 1.1774, 1.6407, 1.4052, 0.6143, 1.1222, 2.4622, 2.4619, 2.4595, 2.4591, 2.4587, 2.4586, 2.4551, 2.4547, 2.4531, 2.4531, 2.4512, 2.4493, 2.4477, 2.447, 2.4467, 2.4449, 2.4448, 2.4442, 2.4437, 2.4421, 2.441, 2.439, 2.4383, 2.4377, 2.4366, 2.4362, 2.4361, 2.4353, 2.4342, 2.4336, 2.4334, 2.4325, 2.4, 2.3254, 2.4116, 2.3522, 2.3827, 2.3405, 2.0523, 1.8186, 2.0955, 2.0046, 1.8504, 1.8963, 2.2387, 1.4083, 2.1053, 2.0531, 1.1215, 1.2119, 1.0124, 1.4247, 1.23, 0.6473, 0.9705, 1.2285, 1.5029, 1.264]}, \"token.table\": {\"Topic\": [2, 3, 1, 3, 5, 1, 2, 3, 1, 2, 4, 4, 1, 3, 5, 4, 3, 5, 3, 1, 2, 3, 4, 5, 1, 2, 3, 5, 2, 3, 1, 1, 3, 2, 1, 2, 4, 2, 1, 1, 4, 5, 1, 2, 3, 4, 2, 1, 4, 3, 3, 2, 3, 4, 4, 4, 2, 3, 2, 2, 3, 2, 3, 2, 3, 5, 5, 3, 1, 1, 5, 2, 2, 3, 4, 5, 1, 2, 4, 4, 4, 1, 2, 3, 4, 4, 1, 1, 2, 4, 5, 5, 1, 4, 1, 3, 1, 3, 4, 3, 2, 1, 2, 4, 3, 4, 3, 1, 5, 5, 1, 4, 5, 1, 4, 4, 5, 1, 4, 3, 4, 2, 1, 2, 4, 3, 5, 5, 4, 5, 2, 3, 4, 5, 2, 1, 3, 2, 3, 5, 2, 5, 2, 1, 2, 1, 3, 4, 1, 2, 3, 5, 2, 3, 5, 4, 5, 5, 3, 3, 4, 5, 4, 5, 1, 4, 5, 4, 5, 1, 2, 3, 5, 2, 3, 1, 4, 3, 5, 3, 1, 4, 3, 4, 1, 2, 3, 4, 2, 2, 4, 2, 3, 2, 5, 2, 4, 5, 5, 5, 1, 2, 1, 1, 1, 4, 5, 1, 1, 3, 3, 5, 1, 3, 5, 4, 1, 1, 2, 3, 1, 4, 1, 5, 4, 4, 2, 4, 5, 4, 1, 2, 4, 4, 3, 2, 2, 5, 2, 1, 5, 2, 3, 5, 3, 5, 2, 4, 5, 4, 4, 2, 3, 5, 1, 3, 2, 5, 2, 2, 3, 1, 3, 1, 3, 4, 1, 2, 3, 2, 3, 4, 3, 5, 1, 2, 1, 3, 1, 2, 3, 3, 5, 5, 1, 5, 4, 1, 2, 3, 5, 1, 1, 3, 1, 2, 2, 2, 3, 4, 1, 1, 5, 3, 4, 3, 4, 1, 2, 4, 2, 2, 3, 1, 2, 3, 3, 1, 2, 3, 5, 2, 3, 2, 5, 1, 5, 3, 5, 5, 5, 3, 5, 2, 1, 2, 3, 5, 5, 4, 5, 3, 1, 2, 4, 2, 1, 1, 3, 2, 3, 1, 3, 1, 1, 2, 4, 2, 3, 4], \"Freq\": [0.8172212224880044, 0.17511883339028667, 0.21394735121558892, 0.7321753797155709, 0.052298241408255064, 1.0004858452192447, 0.9995171108114519, 0.9908839783032605, 0.9933613234453869, 0.006995502277784414, 0.9969868908459035, 0.9949550119652392, 0.3009806251687719, 0.035409485313973164, 0.6639278496369968, 1.0009897157813554, 0.9703615985516251, 0.02882262173915718, 0.9991741461255496, 1.0003263633487103, 0.513499595744211, 0.0789999378068017, 0.12343740282312765, 0.28637477454965615, 0.44163160132662405, 0.5601181285118159, 0.3088927920718613, 0.6913314870179753, 0.9039700501740896, 0.09425280143995246, 0.999953973821505, 0.9802153844323552, 0.021543195262249567, 0.9981243502127732, 0.9958824372671518, 0.06401652480961251, 0.9389090305409835, 0.9967280131741382, 0.9945004156191695, 0.9977746056533275, 0.19939245006663642, 0.7975698002665457, 0.6135144031822232, 0.37517067820495664, 0.004413772684764196, 0.008827545369528391, 0.9920352179062923, 0.9961174473312776, 0.9935307224764236, 0.9988916073924717, 0.9935054942410216, 0.9911336995876643, 0.5940651912618298, 0.40529681273003343, 0.9860871033039225, 0.9832448902734228, 0.9006579876053856, 0.10060541350911223, 0.9998699960069553, 0.2648475687143147, 0.7312095918851732, 1.00068535154552, 0.9974041424853511, 0.8401647273439962, 0.16026263585174494, 0.9940605596297883, 1.0010861711991679, 0.9983250667526662, 0.9998969044142941, 1.000434680736216, 0.9617453790984316, 0.9974162200467694, 0.019728389668493992, 0.22358841624293188, 0.7562549372922697, 0.9598816705155545, 0.8194232858291853, 0.1829410126502367, 0.9783066800912856, 0.9810480695732525, 0.9992032140333944, 0.19276040033665484, 0.5251059181584735, 0.26255295907923676, 0.01994073106930912, 0.9929623313560302, 0.9931186072872936, 0.04203697777090271, 0.1471294221981595, 0.1471294221981595, 0.6725916443344434, 0.9994421479822213, 0.35844606502680626, 0.6408581162600475, 0.9978742834390887, 0.9951951555164642, 0.9942834155498784, 0.021543614477069123, 0.9479190369910414, 0.9964454870594189, 0.9883332227128759, 0.16374230379528812, 0.7758266298871985, 0.0623780204934431, 0.9986879396773995, 0.990050436942159, 1.0000526230163242, 0.9994077420946396, 0.9955946277091713, 0.9793279581843994, 0.23637912456417148, 0.5309438797902929, 0.23274252264779963, 0.9997010719649827, 1.0013704538566444, 0.999623247016596, 0.9767330979016033, 0.997372332064827, 1.0010058473306118, 0.9976451791481019, 0.9876435912179506, 0.9958111186007137, 0.3574086966963986, 0.6444187107101732, 0.9935437213109358, 0.0781232067514748, 0.9374784810176976, 0.9978341623167836, 0.09033041953764719, 0.9033041953764719, 0.1307916497732277, 0.010060896136402129, 0.2917659879556618, 0.5634101836385192, 0.9911740987375005, 0.995533733804406, 0.9961213573539598, 0.9963209735377087, 0.3622991439220622, 0.6340235018636089, 0.05124935372829034, 0.9737377208375164, 0.9906222681443057, 0.5432740193742863, 0.4559939310157944, 0.4373885237073364, 0.056437228865462756, 0.5079350597891648, 0.44423305674747, 0.2927899692199234, 0.0353367204230942, 0.22716463129131986, 0.9526446092084494, 0.03240287786423297, 0.012961151145693189, 0.6998032339152078, 0.30238411342015153, 0.9873909999946403, 0.9994217863638838, 0.30148441343675497, 0.15074220671837749, 0.5426719441861589, 0.9967826246733887, 0.970685105183968, 0.048081487575368606, 0.6594032581764837, 0.28848892545221166, 0.977154608462297, 0.9961419630197265, 0.8278965786215221, 0.07783643046869011, 0.07783643046869011, 0.014152078267034565, 0.46265673885697445, 0.5366818170740904, 0.7563082661337812, 0.24240649555569913, 0.9959520888007626, 0.9862617399241382, 0.9953958581302331, 0.8876727425332921, 0.11178101202271085, 0.9261421560187447, 0.07166576207287906, 0.17123465917130357, 0.015220858593004762, 0.015220858593004762, 0.79909507613275, 1.0013365303088781, 0.0654426662230996, 0.938011549197761, 0.9863357481858843, 0.9993910097181735, 0.9958591405378824, 0.9702862047398926, 0.9984415407610442, 0.6422539200714336, 0.3510988096390504, 0.9948390677596421, 0.9793064771637808, 0.991458742536175, 0.9997617129748734, 0.9911796703298085, 0.992789818226314, 0.039537258940558206, 0.039537258940558206, 0.9488942145733971, 0.9929212617350395, 0.716724377503431, 0.28157029116206217, 0.9989054668976035, 0.9800374071374314, 0.8835389930112582, 0.06024129497804033, 0.05622520864617098, 0.9858149799813021, 0.9938513483598215, 0.5112917804717916, 0.48852170117952554, 0.9995448804686554, 0.9971906376113818, 1.0013219372275288, 0.992501415752567, 0.9563437332550228, 0.9953790795807629, 0.975696306636198, 0.04276631836892082, 0.9622421633007184, 0.9903895053148595, 0.9880028886317713, 0.1784542700820693, 0.7804686751782067, 0.03870092604189455, 0.9905288917600442, 0.9962377199285487, 1.0009508146802342, 1.0002183565752518, 0.9819322789066423, 0.9908194567740009, 0.9981096830521593, 0.9793261649636189, 0.9932290389478596, 0.11155340657637978, 0.8924272526110383, 0.9972428537862338, 0.9965996654500047, 0.6075636605703428, 0.2315960488312693, 0.16241800827127975, 1.0020268007903215, 0.9944886163771669, 0.08604849820008528, 0.9014604573342268, 0.012292642600012182, 0.9980261682350272, 0.9985220098856462, 0.47592980434267323, 0.5238917226097644, 0.9976697013256693, 0.8883823727069065, 0.1079343069643905, 0.9280869152133507, 0.06908090307413291, 0.9959079840256282, 0.9947233231069436, 0.9977012271431356, 0.16058178100850806, 0.7293089220803074, 0.1070545206723387, 0.9984072272165637, 0.03606869392426825, 0.9558203889931087, 0.9988847668079237, 0.9933334896214748, 0.9961160019072407, 0.989788933242188, 0.922190490671802, 0.0754519492367838, 0.10346285785381591, 0.3603361601115657, 0.5365797869384108, 0.9988701461068359, 0.9941922145676483, 1.0003553188703076, 0.6089384327163267, 0.38340567985842794, 0.9943442462822558, 0.8801080495102322, 0.022423135019368975, 0.10090410758716038, 0.9364796859436146, 0.9973439870635649, 0.9239272715945095, 0.07500516595970187, 0.8717868767637473, 0.12883549902912522, 0.9972271997728607, 0.9992177024850437, 0.04851846481449232, 0.9541964746850156, 0.9986796469228257, 0.9986596850333387, 0.9944613826887214, 0.9930312814498913, 1.0012474213833553, 0.997550531818829, 0.9817677245261309, 0.7727141649423052, 0.14881902435925878, 0.08013332080883165, 0.9955205359559484, 0.4031428270895081, 0.5968608089377133, 0.013847804696468492, 0.983194133449263, 0.9987316730433164, 1.0009797304076424, 0.12943531370651556, 0.5245536397579841, 0.08515481164902339, 0.26227681987899204, 0.7134944873202168, 0.2853977949280867, 0.9912823504258579, 0.9421130386449688, 0.649451213161247, 0.35009479459473475, 0.29252329970309576, 0.6975555608304591, 0.9528151501994437, 0.959059514233418, 0.1249247472135527, 0.874473230494869, 0.9961231861992167, 0.43314379671250397, 0.23432369330348576, 0.042604307873361044, 0.2911294371346338, 0.9641201908188055, 0.02459050190128094, 0.9836200760512376, 1.0000305762217092, 0.4609607437180617, 0.1514585300787917, 0.3819389019378226, 0.9882227403710652, 1.001564878196146, 0.8171876555473636, 0.18345029002083674, 0.9906450839564374, 1.000642457320963, 0.586929941825616, 0.41381858257929666, 0.9902639725466607, 0.9850953667873974, 0.018130589572774185, 0.9912582125018271, 0.9208145347106946, 0.02023768208155373, 0.06071304624466119], \"Term\": [\"\\uac00\\uad6c\", \"\\uac00\\uad6c\", \"\\uac00\\ub2a5\", \"\\uac00\\ub2a5\", \"\\uac00\\ub2a5\", \"\\uac04\\ub2f4\\ud68c\", \"\\uac15\\ud654\", \"\\uac1c\\uc6d4\", \"\\uac1c\\ucd5c\", \"\\uac1c\\ucd5c\", \"\\uac1c\\ud601\", \"\\uac80\\ucc30\", \"\\uacb0\\uacfc\", \"\\uacb0\\uacfc\", \"\\uacb0\\uacfc\", \"\\uacb0\\uc815\", \"\\uacbd\\uae30\", \"\\uacbd\\uae30\", \"\\uacbd\\uae30\\ub3c4\", \"\\uacbd\\ubd81\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacc4\\ud68d\", \"\\uacc4\\ud68d\", \"\\uace0\\ubbfc\", \"\\uace0\\ubbfc\", \"\\uace0\\uc6a9\", \"\\uace0\\uc6a9\", \"\\uacf5\\uac04\", \"\\uacf5\\uac1c\", \"\\uacf5\\uac1c\", \"\\uacf5\\uacf5\", \"\\uacf5\\ub3d9\\uccb4\", \"\\uacf5\\uc815\", \"\\uacf5\\uc815\", \"\\uacf5\\uc81c\", \"\\uad00\\uacc4\\uc790\", \"\\uad11\\uc8fc\", \"\\uad50\\uc218\", \"\\uad50\\uc218\", \"\\uad50\\uc721\", \"\\uad50\\uc721\", \"\\uad50\\uc721\", \"\\uad50\\uc721\", \"\\uad50\\uc721\\ubd80\", \"\\uad6c\\uc131\", \"\\uad6c\\uc870\", \"\\uad6c\\uc9c1\", \"\\uad6c\\uc9c1\\uc790\", \"\\uad6d\\uac00\", \"\\uad6d\\ubbfc\", \"\\uad6d\\ubbfc\", \"\\uad6d\\ud68c\", \"\\uad6d\\ud68c\\uc758\\uc6d0\", \"\\uadfc\\ub85c\", \"\\uadfc\\ub85c\", \"\\uadfc\\ub85c\\uc790\", \"\\uae30\\uac04\", \"\\uae30\\uac04\", \"\\uae30\\uad00\", \"\\uae30\\ubcf8\\uc18c\\ub4dd\", \"\\uae30\\uc5c5\", \"\\uae30\\uc5c5\", \"\\ub0a8\\ub140\", \"\\ub0a8\\uc131\", \"\\ub124\\uc774\\ubc84\", \"\\ub124\\ud2b8\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ub178\\ub144\\uce35\", \"\\ub178\\ub3d9\", \"\\ub178\\ub3d9\\uc790\", \"\\ub178\\ub3d9\\uc790\", \"\\ub178\\ub3d9\\uc790\", \"\\ub2e8\\uc5b4\", \"\\ub2e8\\uccb4\", \"\\ub2e8\\uccb4\", \"\\ub2f9\\ub0b4\", \"\\ub2f9\\uc2dc\", \"\\ub2f9\\uc6d0\", \"\\ub300\\uc0c1\", \"\\ub300\\uc0c1\", \"\\ub300\\uc0c1\", \"\\ub300\\uc0c1\", \"\\ub300\\uc120\", \"\\ub300\\uc804\", \"\\ub300\\ucc98\", \"\\ub300\\ucc98\", \"\\ub300\\ucc98\", \"\\ub300\\ucc98\", \"\\ub300\\ud1b5\\ub839\", \"\\ub300\\ud45c\", \"\\ub300\\ud45c\", \"\\ub300\\ud559\\uad50\", \"\\ub300\\ud55c\\ubbfc\\uad6d\", \"\\ub3c4\\uc2dc\", \"\\ub3d9\\uc2dc\", \"\\ub3d9\\uc2dc\", \"\\ub4f1\\ub85d\", \"\\ub514\\uc9c0\\ud138\", \"\\ub9c8\\ub828\", \"\\ub9c8\\ub828\", \"\\ub9c8\\ub828\", \"\\uba74\\uc811\", \"\\ubaa8\\uc2b5\", \"\\ubaa8\\uc784\", \"\\ubaa8\\uc9d1\", \"\\ubb38\\uc7ac\", \"\\ubb38\\uc7ac\\uc778\", \"\\ubb38\\uc81c\", \"\\ubb38\\uc81c\", \"\\ubb38\\uc81c\", \"\\ubb38\\ud654\", \"\\ubbfc\\uc0dd\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\ubc15\\uadfc\\ud61c\", \"\\ubc1c\\uad74\", \"\\ubc1c\\uc5b8\", \"\\ubc29\\ubc95\", \"\\ubcf4\\uc218\", \"\\ubcf4\\ud5d8\", \"\\ubcf5\\uc9c0\", \"\\ubcf5\\uc9c0\", \"\\ubd80\\ub3d9\\uc0b0\", \"\\ubd80\\ubd84\", \"\\ubd80\\ubd84\", \"\\ubd80\\uc0b0\", \"\\ubd80\\uc815\", \"\\ubd80\\uc815\", \"\\ubd80\\uc871\", \"\\ubd80\\uc871\", \"\\ubd80\\uc871\", \"\\ubd80\\uc871\", \"\\ubd80\\ucc98\", \"\\ubd84\\uacfc\", \"\\ubd84\\uae30\", \"\\ube48\\uace4\", \"\\uc0ac\\ub78c\", \"\\uc0ac\\ub78c\", \"\\uc0ac\\ub791\", \"\\uc0ac\\ub791\", \"\\uc0ac\\ub840\", \"\\uc0ac\\uc5c5\", \"\\uc0ac\\uc5c5\", \"\\uc0ac\\uc9c4\", \"\\uc0ac\\uc9c4\", \"\\uc0ac\\uc9c4\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0c1\\ub2f4\", \"\\uc0c1\\ub2f4\", \"\\uc0c1\\ub2f4\", \"\\uc0dd\\uac01\", \"\\uc0dd\\uac01\", \"\\uc0dd\\ud65c\\ube44\", \"\\uc11c\\ub958\", \"\\uc11c\\uc6b8\", \"\\uc11c\\uc6b8\", \"\\uc11c\\uc6b8\", \"\\uc120\\uac70\", \"\\uc138\\uae08\", \"\\uc138\\ub300\", \"\\uc138\\ub300\", \"\\uc138\\ub300\", \"\\uc138\\ub825\", \"\\uc138\\uc885\", \"\\uc13c\\ud130\", \"\\uc13c\\ud130\", \"\\uc13c\\ud130\", \"\\uc13c\\ud130\", \"\\uc18c\\ub4dd\", \"\\uc18c\\ub4dd\", \"\\uc18c\\ud1b5\", \"\\uc18c\\ud1b5\", \"\\uc218\\ub2f9\", \"\\uc218\\uc815\", \"\\uc2a4\\ud399\", \"\\uc2dc\\ubbfc\", \"\\uc2dc\\ubbfc\", \"\\uc2dc\\uc791\", \"\\uc2dc\\uc791\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\ud589\", \"\\uc2e0\\ub8b0\", \"\\uc2e0\\ub8b0\", \"\\uc2e0\\uc6a9\", \"\\uc2e0\\uccad\", \"\\uc2e4\\ud0dc\", \"\\uc544\\ub974\\ubc14\\uc774\\ud2b8\", \"\\uc548\\uc815\", \"\\uc5ec\\ub860\", \"\\uc5ec\\ub860\", \"\\uc5ec\\uc131\", \"\\uc5ed\\ub300\", \"\\uc5ed\\ud560\", \"\\uc5f0\\uad6c\", \"\\uc601\\uc0c1\", \"\\uc608\\uc0b0\", \"\\uc624\\ub978\\ucabd\", \"\\uc624\\ub978\\ucabd\", \"\\uc624\\ub978\\ucabd\", \"\\uc624\\ud6c4\", \"\\uc628\\ub77c\\uc778\", \"\\uc628\\ub77c\\uc778\", \"\\uc694\\uac74\", \"\\uc6b0\\uad70\", \"\\uc6b4\\uc601\", \"\\uc6b4\\uc601\", \"\\uc6b4\\uc601\", \"\\uc6d0\\uc778\", \"\\uc704\\uc6d0\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc720\\ud615\", \"\\uc758\\uacac\", \"\\uc758\\uc6d0\", \"\\uc758\\ud68c\", \"\\uc774\\ub150\", \"\\uc774\\uc57c\\uae30\", \"\\uc774\\uc775\", \"\\uc778\\uc0ac\", \"\\uc778\\uc0ac\", \"\\uc778\\uc2dd\", \"\\uc778\\ud130\\ubdf0\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc77c\\uc790\\ub9ac\", \"\\uc785\\uc7a5\", \"\\uc790\\uaca9\", \"\\uc790\\uae08\", \"\\uc790\\uc0b0\", \"\\uc7ac\\ub09c\", \"\\uc801\\uc6a9\", \"\\uc804\\uad6d\", \"\\uc804\\ub77c\", \"\\uc804\\ubb38\\uac00\", \"\\uc804\\ubc18\", \"\\uc804\\ubc18\", \"\\uc811\\uc218\", \"\\uc815\\uad8c\", \"\\uc815\\ubd80\", \"\\uc815\\ubd80\", \"\\uc815\\ubd80\", \"\\uc815\\uc758\\ub2f9\", \"\\uc815\\uce58\", \"\\uc81c\\ub3c4\", \"\\uc81c\\ub3c4\", \"\\uc81c\\ub3c4\", \"\\uc81c\\uc548\", \"\\uc81c\\ucd9c\", \"\\uc870\\uc0ac\", \"\\uc870\\uc0ac\", \"\\uc870\\uc815\", \"\\uc878\\uc5c5\", \"\\uc878\\uc5c5\", \"\\uc8fc\\uac70\", \"\\uc8fc\\uac70\", \"\\uc8fc\\uad00\", \"\\uc8fc\\ubbfc\", \"\\uc8fc\\ud0dd\", \"\\uc900\\ube44\", \"\\uc900\\ube44\", \"\\uc900\\ube44\", \"\\uc911\\uc18c\\uae30\\uc5c5\", \"\\uc911\\uc694\", \"\\uc911\\uc694\", \"\\uc9c0\\uae09\", \"\\uc9c0\\ub09c\\uc8fc\", \"\\uc9c0\\ub09c\\ud574\", \"\\uc9c0\\ubc29\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc6d0\", \"\\uc9c0\\uc6d0\", \"\\uc9c0\\uc6d0\", \"\\uc9c0\\uc6d0\\uae08\", \"\\uc9c0\\uc9c0\", \"\\uc9c0\\uc9c0\\uc728\", \"\\uc9c1\\uc7a5\", \"\\uc9c1\\uc7a5\", \"\\uc9c4\\ubcf4\", \"\\uc9c4\\ud589\", \"\\uc9c4\\ud589\", \"\\uc9c4\\ud589\", \"\\uc9c8\\ubb38\", \"\\ucc38\\uc11d\", \"\\ucc38\\uc5ec\", \"\\ucc38\\uc5ec\", \"\\ucc3d\\uc5c5\", \"\\ucc3d\\uc5c5\", \"\\ucc3d\\ucd9c\", \"\\ucc44\\uc6a9\", \"\\ucc98\\uc74c\", \"\\ucc98\\uc74c\", \"\\ucc9c\\uc548\\uc2dc\", \"\\uccad\\uc18c\\ub144\", \"\\uccad\\uc640\\ub300\", \"\\ucd09\\uc9c4\", \"\\ucd5c\\uace0\", \"\\ucd5c\\ub300\", \"\\ucd5c\\uc800\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucd9c\\ucc98\", \"\\ucde8\\uc5c5\", \"\\ucde8\\uc5c5\", \"\\ucde8\\uc5c5\\uc790\", \"\\ucde8\\uc5c5\\uc790\", \"\\uce74\\ub4dc\", \"\\uce74\\ud398\", \"\\ucf54\\ub85c\\ub098\", \"\\ucf54\\ub85c\\ub098\", \"\\ucf54\\ub85c\\ub098\", \"\\ucf54\\ub85c\\ub098\", \"\\ud1b5\\uc7a5\", \"\\ud1b5\\uc7a5\", \"\\ud2b9\\ubcc4\", \"\\ud398\\ubbf8\\ub2c8\\uc998\", \"\\ud3c9\\uac00\", \"\\ud3c9\\uac00\", \"\\ud3c9\\uade0\", \"\\ud3c9\\uade0\", \"\\ud3c9\\ub4f1\", \"\\ud3d0\\uc9c0\", \"\\ud3ec\\uc778\\ud2b8\", \"\\ud3ec\\uc778\\ud2b8\", \"\\ud50c\\ub7ab\", \"\\ud544\\uc694\", \"\\ud544\\uc694\", \"\\ud544\\uc694\", \"\\ud544\\uc694\", \"\\ud558\\ub8e8\", \"\\ud55c\\uad6d\\uac24\\ub7fd\", \"\\ud55c\\uad6d\\uac24\\ub7fd\", \"\\ud569\\uaca9\", \"\\ud574\\uacb0\", \"\\ud574\\uacb0\", \"\\ud574\\uacb0\", \"\\ud574\\uc18c\", \"\\ud589\\uc815\", \"\\ud648\\ud398\\uc774\\uc9c0\", \"\\ud648\\ud398\\uc774\\uc9c0\", \"\\ud655\\uc0b0\", \"\\ud655\\uc778\", \"\\ud65c\\ub3d9\", \"\\ud65c\\ub3d9\", \"\\ud65c\\ub825\", \"\\ud68c\\uc758\", \"\\ud68c\\uc758\", \"\\ud6c4\\ubcf4\", \"\\ud76c\\ub9dd\", \"\\ud76c\\ub9dd\", \"\\ud76c\\ub9dd\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [4, 3, 2, 1, 5]};\n",
              "\n",
              "function LDAvis_load_lib(url, callback){\n",
              "  var s = document.createElement('script');\n",
              "  s.src = url;\n",
              "  s.async = true;\n",
              "  s.onreadystatechange = s.onload = callback;\n",
              "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
              "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "}\n",
              "\n",
              "if(typeof(LDAvis) !== \"undefined\"){\n",
              "   // already loaded: just create the visualization\n",
              "   !function(LDAvis){\n",
              "       new LDAvis(\"#\" + \"ldavis_el16921348818543214082904205666\", ldavis_el16921348818543214082904205666_data);\n",
              "   }(LDAvis);\n",
              "}else if(typeof define === \"function\" && define.amd){\n",
              "   // require.js is available: use it to load d3/LDAvis\n",
              "   require.config({paths: {d3: \"https://d3js.org/d3.v5\"}});\n",
              "   require([\"d3\"], function(d3){\n",
              "      window.d3 = d3;\n",
              "      LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
              "        new LDAvis(\"#\" + \"ldavis_el16921348818543214082904205666\", ldavis_el16921348818543214082904205666_data);\n",
              "      });\n",
              "    });\n",
              "}else{\n",
              "    // require.js not available: dynamically load d3 & LDAvis\n",
              "    LDAvis_load_lib(\"https://d3js.org/d3.v5.js\", function(){\n",
              "         LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
              "                 new LDAvis(\"#\" + \"ldavis_el16921348818543214082904205666\", ldavis_el16921348818543214082904205666_data);\n",
              "            })\n",
              "         });\n",
              "}\n",
              "</script>"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "topics_table1_sns_peak1 = create_topics_table(lda_model_sns5_peak1, num_topics=5)\n",
        "print(topics_table1_sns_peak1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8zN47SJ1aG_4",
        "outputId": "f583ae28-9792-4303-cf23-96b7011ec9cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Topic                                   Top Words\n",
            "0  Topic 1   국민, 시장, 민주당, 대표, 정치, 문제, 의원, 이야기, 노동자, 개혁\n",
            "1  Topic 2    지원, 신청, 취업, 제도, 지급, 경기도, 국민, 유형, 지원금, 구직\n",
            "2  Topic 3  지원, 취업, 일자리, 기업, 노동, 사업, 위원회, 중소기업, 고용, 정부\n",
            "3  Topic 4     참여, 활동, 지역, 주거, 사업, 모집, 위원회, 센터, 운영, 단체\n",
            "4  Topic 5  대통령, 지지율, 조사, 문재, 청와대, 여성, 지지, 코로나, 결과, 서울\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualize the topics (corpus를 이용하여 lda_model_5 시각화)\n",
        "pyLDAvis.enable_notebook()\n",
        "vis = gensimvis.prepare(lda_model_peak1, corpus, dictionary=lda_model_peak1.id2word)\n",
        "pyLDAvis.display(vis)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 917
        },
        "id": "XheOejRqadz1",
        "outputId": "25951951-986b-4bfe-e545-8c594ef16ee8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v1.0.0.css\">\n",
              "\n",
              "\n",
              "<div id=\"ldavis_el16921348818543210726447986212\" style=\"background-color:white;\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "\n",
              "var ldavis_el16921348818543210726447986212_data = {\"mdsDat\": {\"x\": [0.2804292523640694, 0.1823732220545631, -0.1703539153146006, -0.11594652232122914, -0.17650203678280274], \"y\": [0.018366959706599684, -0.08026058685536037, -0.1337357263337742, 0.3506422822866732, -0.1550129288041384], \"topics\": [1, 2, 3, 4, 5], \"cluster\": [1, 1, 1, 1, 1], \"Freq\": [37.82146125029453, 21.264354701816888, 15.54291421396424, 14.798877884283915, 10.572391949640423]}, \"tinfo\": {\"Term\": [\"\\ucc38\\uc5ec\", \"\\uba74\\uc811\", \"\\ucde8\\uc5c5\", \"\\uc9c0\\uc0ac\", \"\\uc8fc\\ud0dd\", \"\\ud65c\\ub3d9\", \"\\uc9c0\\uae09\", \"\\uc18c\\ud1b5\", \"\\uc2e0\\uccad\", \"\\uc218\\ub2f9\", \"\\uc758\\uc6d0\", \"\\uc0ac\\uc5c5\", \"\\uacbd\\uae30\\ub3c4\", \"\\uad50\\uc721\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\uccad\\uc640\\ub300\", \"\\uc704\\uc6d0\\ud68c\", \"\\ubaa8\\uc9d1\", \"\\uacbd\\uae30\", \"\\uc8fc\\uac70\", \"\\uae30\\ubcf8\", \"\\uad6d\\ubbfc\", \"\\uc9c0\\uc5ed\", \"\\ucc9c\\uc548\", \"\\ub300\\ucc45\", \"\\ud655\\uc778\", \"\\ub2e8\\uccb4\", \"\\uc774\\uc7ac\\uba85\", \"\\uc0ac\\ud68c\", \"\\uc801\\uadf9\", \"\\uc758\\uc6d0\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\uccad\\uc640\\ub300\", \"\\uad6d\\ubbfc\", \"\\uc815\\uce58\", \"\\ube44\\uc11c\\uad00\", \"\\ube44\\uc0c1\", \"\\ubbfc\\uc2ec\", \"\\uc120\\uac70\", \"\\uc6d0\\ub0b4\\ub300\\ud45c\", \"\\ud6c4\\ubcf4\", \"\\ubd80\\ub3d9\\uc0b0\", \"\\uc218\\uc11d\", \"\\ub300\\ud1b5\\ub839\", \"\\ube44\\ub300\\uc704\", \"\\uacf5\\uc815\", \"\\uc5ec\\uc758\\ub3c4\", \"\\uad6d\\ud68c\", \"\\uc724\\ud638\\uc911\", \"\\uc9c0\\ub3c4\\ubd80\", \"\\uc5ec\\ub2f9\", \"\\ubd84\\ub178\", \"\\uac1c\\ud601\", \"\\ubcf4\\uc120\", \"\\uacb0\\uc815\", \"\\uc5ec\\uc131\", \"\\uc9c0\\uc801\", \"\\ub0a8\\uc131\", \"\\ubc1c\\uc5b8\", \"\\ud53c\\ud574\\uc790\", \"\\ub300\\ucc45\", \"\\uc11c\\uc6b8\", \"\\uc138\\ub300\", \"\\uc815\\ubd80\", \"\\ud68c\\uc758\", \"\\ubb38\\uc81c\", \"\\uc704\\uc6d0\\uc7a5\", \"\\uad00\\ub828\", \"\\ubaa9\\uc18c\\ub9ac\", \"\\uac15\\uc870\", \"\\uc0ac\\ud68c\", \"\\ub300\\ud45c\", \"\\uc704\\uc6d0\", \"\\ub2e8\\uccb4\", \"\\uc801\\uadf9\", \"\\uad00\\uacc4\\uc790\", \"\\uac04\\ub2f4\\ud68c\", \"\\uacf5\\uac04\", \"\\ud611\\uc758\", \"\\uc815\\ubb34\", \"\\uae30\\ubc18\", \"\\uc5f0\\uad6c\", \"\\uc758\\ud68c\", \"\\uc8fc\\ubbfc\", \"\\uc804\\ub2f4\", \"\\uc0c1\\uacf5\", \"\\ubc29\\uc5ed\", \"\\ud611\\ub825\", \"\\ub300\\ud559\\uc0dd\", \"\\ucc38\\uc11d\", \"\\uad6c\\ucd95\", \"\\uad11\\uc8fc\", \"\\uadf9\\ubcf5\", \"\\ud604\\uc548\", \"\\uc9c0\\ubc29\", \"\\uccb4\\uac10\", \"\\ub3c4\\uc6c0\", \"\\ubc29\\ubb38\", \"\\uad00\\uc545\\uad6c\", \"\\ud65c\\uc6a9\", \"\\ud589\\uc0ac\", \"\\uc218\\ub834\", \"\\uae30\\ub300\", \"\\uc2e4\\uc5c5\", \"\\uc18c\\ud1b5\", \"\\uc9c0\\uc6d0\\uae08\", \"\\ubc29\\uc548\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc13c\\ud130\", \"\\ubc18\\uc601\", \"\\uc5ed\\ud560\", \"\\uc758\\uacac\", \"\\ucde8\\uc7ac\", \"\\uae30\\ud68d\", \"\\ucf54\\ub85c\\ub098\", \"\\ud65c\\ub3d9\", \"\\uacbd\\uc81c\", \"\\uc704\\uc6d0\", \"\\ucd9c\\ubc94\", \"\\ub300\\ud45c\", \"\\ud574\\uacb0\", \"\\uc9c0\\uc5ed\", \"\\ub274\\uc2a4\", \"\\ucd94\\uc9c4\", \"\\ub9c8\\ub828\", \"\\ubb38\\uc81c\", \"\\ubaa9\\uc18c\\ub9ac\", \"\\uc2dc\\uc7a5\", \"\\uc9c0\\uc0ac\", \"\\ucc3d\\uc5c5\", \"\\ub3c4\\uc2dc\", \"\\ucd9c\\uc0b0\", \"\\ubd80\\uc704\\uc6d0\\uc7a5\", \"\\uccad\\uc18c\\ub144\", \"\\ud76c\\ub9dd\", \"\\ud65c\\uc131\", \"\\ud658\\uacbd\", \"\\uc804\\ubd81\", \"\\uc218\\ub9bd\", \"\\uc8fc\\ub3c4\", \"\\uc721\\uc544\", \"\\ud65c\\ub825\", \"\\ub3c4\\uc11c\\uad00\", \"\\ucda9\\ub0a8\", \"\\ub9c8\\ub8e8\", \"\\uc721\\uc131\", \"\\ube44\\uc804\", \"\\uad00\\uad11\", \"\\uadfc\\ub85c\\uc790\", \"\\ubc15\\ub78c\\ud68c\", \"\\uac74\\ub9bd\", \"\\uc804\\ub0a8\", \"\\ud655\\ubcf4\", \"\\ub9c8\\uc744\", \"\\uad8c\\ub9ac\", \"\\uac10\\uc18c\", \"\\uc815\\ucc29\", \"\\ud22c\\uc785\", \"\\uc885\\ub8cc\", \"\\uad50\\uc721\", \"\\uc778\\uad6c\", \"\\uc9c0\\uc18d\", \"\\uc608\\uc0b0\", \"\\uc8fc\\uac70\", \"\\uc8fc\\ud0dd\", \"\\uc870\\uc131\", \"\\uae30\\ubcf8\", \"\\uacc4\\ud68d\", \"\\uc0ac\\uc5c5\", \"\\uac15\\ud654\", \"\\ubb38\\ud654\", \"\\ucd94\\uc9c4\", \"\\uc0ac\\ud68c\", \"\\ud655\\ub300\", \"\\ubcf5\\uc9c0\", \"\\ubd84\\uc57c\", \"\\uc9c0\\uc5ed\", \"\\uc548\\uc815\", \"\\ubbf8\\ub798\", \"\\uacbd\\uae30\\ub3c4\", \"\\uc774\\uc7ac\\uba85\", \"\\ucd5c\\ub300\", \"\\ud654\\ud3d0\", \"\\uae30\\uc900\", \"\\ub300\\ud559\", \"\\uc870\\uc815\", \"\\ud68c\\ubcf5\", \"\\uc2e0\\uc18d\", \"\\uae30\\uac04\", \"\\uc9c0\\uae09\", \"\\uae08\\uc735\", \"\\uc0b0\\uc5c5\", \"\\uacbd\\uae30\\ub3c4\\uc9c0\\uc0ac\", \"\\ub4f1\\ub85d\", \"\\ud68c\\ub2f9\", \"\\uad6d\\ubb34\\ucd1d\\ub9ac\", \"\\uc720\\uc9c0\", \"\\uae09\\uc5ec\", \"\\uc81c\\uc678\", \"\\uad6c\\uc9c1\", \"\\ub300\\ucd9c\", \"\\ubbfc\\uac04\", \"\\uae30\\ubcf8\\uc18c\\ub4dd\", \"\\uc218\\uae09\", \"\\ubd84\\uae30\", \"\\uc218\\uc6d0\", \"\\uc7a5\\ub824\\uae08\", \"\\uae08\\uc561\", \"\\ube44\\uc6a9\", \"\\uba74\\uc811\", \"\\uc218\\ub2f9\", \"\\uacbd\\uae30\", \"\\ucde8\\uc5c5\", \"\\uc2e0\\uccad\", \"\\uc0dd\\ud65c\", \"\\uc9c0\\ub09c\\ud574\", \"\\ub300\\uc0c1\", \"\\uc62c\\ud574\", \"\\uace0\\uc6a9\", \"\\ud604\\uc2e4\", \"\\uc5b4\\ub824\\uc6c0\", \"\\uac00\\ub2a5\", \"\\ucf54\\ub85c\\ub098\", \"\\uc608\\uc815\", \"\\ubaa8\\uc9d1\", \"\\ucc9c\\uc548\", \"\\ud655\\uc778\", \"\\uc120\\uc815\", \"\\ubd80\\uc0b0\\uc2dc\", \"\\ub124\\ud2b8\", \"\\uc81c\\uc548\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\ud64d\\ubcf4\", \"\\uc774\\ud558\", \"\\ub274\\uc2dc\\uc2a4\", \"\\ud1b5\\uc2e0\\uc0ac\", \"\\uc18c\\uac1c\", \"\\ubc1c\\ub300\\uc2dd\", \"\\uc804\\ub2ec\", \"\\uad6c\\uc131\\uc6d0\", \"\\ud648\\ud398\\uc774\\uc9c0\", \"\\uc704\\ucd09\", \"\\uc791\\uc131\", \"\\uc120\\ubc1c\", \"\\uacf5\\ubaa8\", \"\\ucd5c\\uc885\", \"\\uc2ec\\uc0ac\", \"\\uc544\\uc774\\ub514\\uc5b4\", \"\\uc81c\\uc791\", \"\\uc815\\uae30\", \"\\uad6c\\uccad\\uc7a5\", \"\\uc2e0\\uccad\\uc11c\", \"\\ubc15\\uc2a4\", \"\\ucc38\\uc5ec\", \"\\ubd80\\uc0b0\", \"\\ubc1c\\uad74\", \"\\uad6c\\uc131\", \"\\ud65c\\ub3d9\", \"\\uc628\\ub77c\\uc778\", \"\\ubd84\\uc57c\", \"\\uad00\\uc2ec\", \"\\uc6b4\\uc601\", \"\\uae08\\uc9c0\", \"\\uc9c0\\uc5ed\", \"\\uc0ac\\uc5c5\", \"\\uacf5\\uac10\", \"\\ubc30\\ud3ec\", \"\\uc704\\uc6d0\", \"\\uc804\\uc7ac\", \"\\ubb34\\ub2e8\", \"\\ud68c\\uc758\"], \"Freq\": [677.0, 446.0, 395.0, 355.0, 442.0, 454.0, 301.0, 412.0, 329.0, 293.0, 530.0, 369.0, 253.0, 269.0, 485.0, 473.0, 398.0, 193.0, 221.0, 236.0, 363.0, 374.0, 401.0, 155.0, 457.0, 148.0, 217.0, 172.0, 353.0, 212.0, 529.3525438876653, 484.38469662611254, 472.58741824079345, 373.82375210100844, 290.8692278127608, 281.4814375100294, 265.203052878992, 222.66441408027035, 217.29924785710304, 220.93704661351896, 215.40551330426243, 211.09993400558068, 212.43178223385462, 201.87028470022366, 172.89772233822134, 153.6449952382906, 148.43992648765146, 147.41895771478116, 149.0523365597977, 150.68828327845358, 134.57027402834692, 130.0425236363484, 126.81425070189738, 126.40689256547222, 130.5815436575551, 120.05213898624804, 119.92186664347913, 117.93468816937259, 117.52997572093949, 116.38224736750823, 441.86439978195773, 436.68609916865006, 307.3097997875134, 336.43137663495105, 291.0774590206068, 374.1541296099334, 239.82641403531272, 221.34910696011488, 200.38314125661722, 159.098236192387, 194.08509210784482, 165.62410353321556, 158.9992674520788, 216.9480048961216, 211.90710648137645, 145.31516293973877, 141.71604977070714, 137.97526305146988, 124.08206772533704, 155.18281196067758, 102.7150676312302, 82.70568489415595, 77.33990855399884, 81.64158328347533, 85.0579170729515, 88.3505458783435, 76.09644002884181, 74.25904633152624, 73.55940974114915, 72.07614366992325, 71.04348548747116, 59.13775107296424, 54.820645251399455, 53.96279153011292, 51.37024931049305, 52.58010567961488, 52.99572017648816, 55.595887318079576, 50.67466892860738, 48.92634931976589, 48.642205352509265, 52.30055229038128, 47.070905807160315, 51.24798806163464, 387.030464383559, 130.1224559119581, 105.5333450408239, 341.3148572071596, 238.40566031252123, 114.964161032026, 123.14407732411685, 99.97861438430158, 100.32141087634666, 136.64333918150697, 225.53356703709835, 252.92186176321718, 166.8913796428598, 238.4795845560289, 125.00914573822749, 148.84583930910782, 106.0377273793052, 147.21803096703292, 119.51016451120199, 129.06660421685322, 121.19368478315748, 154.93638948240394, 107.80914675175882, 103.51944689973928, 354.4371387773332, 150.8129276111552, 150.56107653691518, 139.21389052577734, 140.27353804575586, 108.41896830856798, 98.14668798152913, 96.1111301117302, 81.73696189134637, 80.4887070169134, 87.46120377883257, 77.72936397029078, 75.05098055975887, 67.10551087302814, 58.34809214439555, 61.09385816593852, 55.51020153074077, 55.10978893039364, 55.7211844803635, 54.227748268102445, 66.75259501889674, 55.99288487289796, 49.4916643765465, 48.88207331005796, 48.83438469471257, 46.15862349561933, 44.79951851568238, 39.932680380576684, 39.23069519153229, 38.898807280348954, 97.98193635552892, 260.5937099090384, 142.36116554269404, 120.30704253283875, 115.91494801257247, 207.0643607045808, 351.4958398394176, 118.35766131213224, 262.64771462516023, 205.25143498156245, 251.63841015135122, 86.21577212159315, 104.59145327063484, 151.79773703394164, 159.06857201922958, 104.45653272598393, 104.2960387673371, 106.82736819492348, 130.7925534193049, 90.93293863062726, 89.43261340294895, 252.112567468272, 171.47712129959115, 159.0453092950078, 152.9169787101217, 103.42743788167687, 94.86059254768838, 134.44817831621788, 127.66784713938466, 98.05466384073912, 84.72277454030925, 297.8977994992368, 81.02804362447846, 80.50428747510541, 76.87392235974984, 77.5236872427198, 71.92724226261211, 104.96105594670955, 66.24875894200144, 63.23400977735938, 63.6704688855419, 60.20648575422322, 60.474496804897726, 56.60303178953262, 54.840732013458954, 53.48385239758894, 53.73124620983578, 49.858419760793915, 44.402411231554126, 38.94224010797357, 39.546773205625115, 436.6099532940501, 282.93553030127174, 212.70933634816402, 375.08637397456823, 300.0356592368209, 69.682038046725, 164.6135643337126, 130.7237046416596, 122.1550324637598, 95.33087436600033, 94.76567495761066, 79.66706230906472, 103.61165334199084, 118.93205354062674, 76.93719205387828, 192.04412838351584, 154.54292836976367, 147.52558269738643, 126.18925622315011, 125.82265805736478, 117.17984589917985, 121.00716356408188, 114.81228349928635, 110.34440719622921, 84.35223802705643, 77.57776643616847, 66.48098140651823, 62.738986624542676, 58.83009359644648, 54.512814139414125, 48.945019043155796, 48.355984140225516, 44.56676315187236, 42.978358579702395, 40.703769472006435, 38.48064816640499, 38.41250607667906, 35.62938848497843, 36.126525254772, 35.45213328755782, 32.970983129543036, 33.247799298955925, 33.016574845556484, 39.191552038141936, 31.232506861294183, 620.6376933291648, 135.79078709440734, 135.8520773756675, 126.53027430399659, 201.04094753836895, 74.9865460924511, 106.77096379511526, 66.22172513263368, 102.93018489017983, 85.3879331570511, 122.7680006548793, 117.72503233532538, 79.76147663665824, 65.49469387498414, 89.26504995232604, 64.30310689595984, 63.66967662452601, 62.825378451737734], \"Total\": [677.0, 446.0, 395.0, 355.0, 442.0, 454.0, 301.0, 412.0, 329.0, 293.0, 530.0, 369.0, 253.0, 269.0, 485.0, 473.0, 398.0, 193.0, 221.0, 236.0, 363.0, 374.0, 401.0, 155.0, 457.0, 148.0, 217.0, 172.0, 353.0, 212.0, 530.3396484373432, 485.36772887392056, 473.59148395136185, 374.81366373206237, 291.8546209079839, 282.4960599739886, 266.21229615343185, 223.66057787929603, 218.2803129874521, 221.93675583820666, 216.38685310738148, 212.0990357192154, 213.45477056476906, 202.86246203848057, 173.929720463066, 154.63763600884892, 149.4372822851977, 148.41004089957534, 150.05549912731402, 151.7114421154021, 135.55489614897792, 131.02905657907118, 127.80241690238661, 127.39530898742042, 131.61049051002112, 121.03521840577206, 120.91820573566461, 118.91544998201881, 118.52277881301272, 117.38586850454445, 457.75726309200536, 469.51787262775287, 338.55145087174367, 434.2278200579959, 374.4148297310486, 529.8940108827663, 324.3276401017182, 324.5450299428609, 308.9825282028566, 205.19914251567704, 353.82184409815466, 315.2747412648085, 488.6933282167168, 217.9211847513875, 212.87378897652113, 146.27522517516334, 142.669903166142, 138.9250864938159, 125.05096179891169, 156.39813758940454, 103.68185103632277, 83.66142010797581, 78.29000121057811, 82.64557926476922, 86.11470903596467, 89.44957020975379, 77.04630804459693, 75.2136780528087, 74.52743898310077, 73.02511898243003, 72.15753182591673, 60.110479031359596, 55.79591789076959, 54.93018954249974, 52.32747985368606, 53.57394750664934, 53.99890891904945, 56.6551222573204, 51.64736278452107, 49.86855698443363, 49.58729878343443, 53.34545685037119, 48.013912606847306, 52.27817974572674, 412.83141408184906, 137.27934842509177, 112.23076802318842, 398.7929936733926, 279.30074550865373, 126.69698486514972, 138.4994486722409, 110.85745298835906, 114.87417508361895, 168.46033185068487, 371.99401194925366, 454.7153641360858, 272.57998925605904, 488.6933282167168, 188.98529411000771, 315.2747412648085, 174.5158695955211, 401.19986786248114, 237.1065330828826, 299.75167087522806, 251.6934189824313, 529.8940108827663, 308.9825282028566, 248.05825747078137, 355.3021049055106, 151.63430716948977, 151.3810941010184, 140.0474129613899, 141.1994768566928, 109.32406375918136, 98.99293915872515, 96.94628627018913, 82.55449445048679, 81.30556332536368, 88.35610026661439, 78.56475208766275, 75.88721019038437, 67.9722440482115, 59.186146083978414, 61.97291874556336, 56.334537414297294, 55.932157554881094, 56.561061869698364, 55.05386267131482, 67.80468014217821, 56.8860728185712, 50.30758811597008, 49.696410113408, 49.666602632167105, 46.97489408575992, 45.64420693457816, 40.747656413906554, 40.044738292685, 39.72346434941771, 100.15942528028023, 269.299500230378, 151.46803655959206, 130.1061130260159, 126.23280525900118, 236.06227155239725, 442.5918552415238, 134.45565250513508, 363.48897483717843, 286.55943626726724, 369.986211960431, 103.42311369264256, 150.7646367466854, 299.75167087522806, 353.82184409815466, 175.10090010638407, 176.4754758810759, 214.4465515371968, 401.19986786248114, 150.21202193995197, 145.605684831661, 253.00306051452495, 172.38690324484767, 159.935882225887, 153.82860047629714, 104.32956987460814, 95.77211210355144, 135.74556956092042, 128.95074152666845, 99.08201090461162, 85.6166868317203, 301.0692533759724, 81.93940710237115, 81.41457891963171, 77.77623775065076, 78.45050993446095, 72.81441280966834, 106.33703040949948, 67.18621167721103, 64.13611090563329, 64.59856178789931, 61.09939830650914, 61.37459506023585, 57.53121114542878, 55.744171416989396, 54.372717389048034, 54.702646953841466, 50.76779580855887, 45.317757458447076, 39.831197923414294, 40.453982897844384, 446.7227661084712, 293.1752778121866, 221.32036612152535, 395.88197140931857, 329.309145417831, 71.92676474128378, 217.84702935183506, 175.87419615228555, 177.22222884260069, 132.26669287722012, 137.19148738045018, 105.24448733885093, 207.4004913407626, 371.99401194925366, 175.75434536885643, 193.01343135273112, 155.50010630473247, 148.55022766955346, 127.1334987126261, 126.77941543417762, 118.13312866904592, 121.99489342266776, 115.75996671049926, 111.28773178709774, 85.30354098703633, 78.66168988253064, 67.4722073603992, 63.732989408787, 59.80439250513167, 55.46222712061174, 49.90552098530471, 49.33876803334996, 45.508186739688945, 43.978437361279454, 41.65347270793804, 39.42278185804305, 39.356058071655006, 36.57414894112336, 37.08592835441857, 36.4420245226452, 33.90866833343756, 34.196037801808316, 33.959442938781905, 40.3580676663241, 32.16879200839664, 677.5251382187877, 144.24289414625207, 177.89440866601166, 225.5733101983666, 454.7153641360858, 112.56924356671054, 214.4465515371968, 100.62309079179755, 230.07685170849618, 175.5265052324797, 401.19986786248114, 369.986211960431, 175.72764235269494, 149.0084868406136, 488.6933282167168, 143.81321384060277, 143.55722019256774, 374.4148297310486], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -3.8088, -3.8976, -3.9222, -4.1567, -4.4076, -4.4404, -4.5, -4.6748, -4.6992, -4.6826, -4.7079, -4.7281, -4.7218, -4.7728, -4.9278, -5.0458, -5.0803, -5.0872, -5.0762, -5.0653, -5.1784, -5.2126, -5.2377, -5.241, -5.2085, -5.2925, -5.2936, -5.3103, -5.3138, -5.3236, -3.9895, -4.0013, -4.3526, -4.2621, -4.4069, -4.1558, -4.6006, -4.6807, -4.7802, -5.0109, -4.8122, -4.9707, -5.0116, -4.125, -4.1485, -4.5257, -4.5508, -4.5775, -4.6837, -4.46, -4.8727, -5.0893, -5.1564, -5.1023, -5.0613, -5.0233, -5.1726, -5.1971, -5.2065, -5.2269, -5.2413, -5.4248, -5.5006, -5.5163, -5.5656, -5.5423, -5.5344, -5.4865, -5.5792, -5.6143, -5.6201, -5.5476, -5.653, -5.5679, -3.5461, -4.6361, -4.8456, -3.6718, -4.0306, -4.76, -4.6913, -4.8997, -4.8962, -4.5872, -4.0862, -3.9715, -4.3873, -4.0303, -4.6762, -4.5017, -4.8408, -4.5127, -4.7212, -4.6443, -4.7072, -4.4616, -4.8243, -4.8649, -3.3207, -4.1752, -4.1768, -4.2552, -4.2476, -4.5052, -4.6047, -4.6257, -4.7877, -4.8031, -4.72, -4.838, -4.873, -4.9849, -5.1248, -5.0788, -5.1746, -5.1819, -5.1708, -5.198, -4.9902, -5.166, -5.2894, -5.3018, -5.3028, -5.3591, -5.389, -5.504, -5.5217, -5.5302, -4.6064, -3.6282, -4.2328, -4.4011, -4.4383, -3.8582, -3.329, -4.4175, -3.6204, -3.867, -3.6632, -4.7343, -4.5411, -4.1686, -4.1219, -4.5424, -4.544, -4.52, -4.3176, -4.6811, -4.6977, -3.6123, -3.9977, -4.073, -4.1122, -4.5033, -4.5897, -4.241, -4.2927, -4.5566, -4.7028, -3.4454, -4.7473, -4.7538, -4.8, -4.7916, -4.8665, -4.4886, -4.9487, -4.9953, -4.9884, -5.0444, -5.0399, -5.1061, -5.1377, -5.1628, -5.1581, -5.233, -5.3488, -5.4801, -5.4647, -3.0631, -3.4969, -3.7822, -3.215, -3.4382, -4.8982, -4.0385, -4.2691, -4.3369, -4.5848, -4.5907, -4.7643, -4.5015, -4.3636, -4.7992, -3.5481, -3.7654, -3.8118, -3.9681, -3.971, -4.0421, -4.01, -4.0625, -4.1022, -4.3708, -4.4546, -4.6089, -4.6669, -4.7312, -4.8074, -4.9151, -4.9272, -5.0088, -5.0451, -5.0995, -5.1557, -5.1575, -5.2327, -5.2188, -5.2377, -5.3102, -5.3018, -5.3088, -5.1374, -5.3644, -2.3751, -3.8947, -3.8943, -3.9654, -3.5023, -4.4885, -4.1352, -4.6128, -4.1718, -4.3586, -3.9955, -4.0375, -4.4268, -4.6239, -4.3142, -4.6422, -4.6521, -4.6655], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.9704, 0.9703, 0.9702, 0.9696, 0.9689, 0.9687, 0.9685, 0.9678, 0.9678, 0.9678, 0.9677, 0.9676, 0.9675, 0.9674, 0.9663, 0.9659, 0.9656, 0.9656, 0.9656, 0.9655, 0.965, 0.9647, 0.9645, 0.9645, 0.9644, 0.9641, 0.964, 0.964, 0.9639, 0.9637, 0.937, 0.8998, 0.8755, 0.7171, 0.7205, 0.6243, 0.6705, 0.5896, 0.5392, 0.7178, 0.3718, 0.3286, -0.1505, 1.5437, 1.5436, 1.5416, 1.5414, 1.5413, 1.5404, 1.5403, 1.5388, 1.5366, 1.5359, 1.5359, 1.5358, 1.5358, 1.5357, 1.5354, 1.5351, 1.5351, 1.5326, 1.5318, 1.5305, 1.5304, 1.5297, 1.5294, 1.5294, 1.5293, 1.5291, 1.5291, 1.5289, 1.5284, 1.5283, 1.5282, 1.4836, 1.4946, 1.4866, 1.3925, 1.3898, 1.451, 1.4306, 1.4448, 1.4127, 1.3388, 1.0477, 0.9615, 1.0575, 0.8307, 1.1349, 0.7976, 1.0499, 0.5456, 0.863, 0.7055, 0.8173, 0.3185, 0.4952, 0.6742, 1.8591, 1.8561, 1.8561, 1.8556, 1.855, 1.8533, 1.853, 1.8529, 1.8516, 1.8515, 1.8514, 1.8509, 1.8505, 1.8487, 1.8473, 1.8473, 1.8468, 1.8468, 1.8466, 1.8464, 1.8459, 1.8457, 1.8452, 1.845, 1.8447, 1.844, 1.8429, 1.8414, 1.841, 1.8406, 1.8396, 1.8287, 1.7996, 1.7833, 1.7763, 1.7305, 1.6311, 1.734, 1.5366, 1.5279, 1.4761, 1.6796, 1.4959, 1.1812, 1.0621, 1.345, 1.3356, 1.1647, 0.7407, 1.3596, 1.3741, 1.9071, 1.9053, 1.905, 1.9047, 1.9019, 1.9011, 1.901, 1.9006, 1.9002, 1.9001, 1.9, 1.8994, 1.8994, 1.8989, 1.8987, 1.8984, 1.8976, 1.8966, 1.8965, 1.8961, 1.8959, 1.8958, 1.8944, 1.8943, 1.8941, 1.8927, 1.8925, 1.8902, 1.888, 1.8879, 1.8877, 1.8751, 1.8709, 1.8567, 1.8175, 1.8789, 1.6304, 1.6139, 1.5385, 1.5832, 1.5406, 1.6322, 1.2166, 0.7703, 1.0845, 2.2419, 2.2407, 2.24, 2.2395, 2.2393, 2.2388, 2.2388, 2.2387, 2.2384, 2.2357, 2.233, 2.2321, 2.2312, 2.2305, 2.2297, 2.2275, 2.2268, 2.226, 2.2239, 2.2239, 2.2227, 2.2227, 2.2208, 2.2207, 2.2194, 2.2189, 2.2188, 2.2188, 2.2176, 2.2174, 2.1592, 2.1865, 1.9773, 1.6688, 1.4308, 1.8407, 1.5495, 1.8286, 1.4426, 1.5263, 1.0628, 1.1018, 1.457, 1.4249, 0.5468, 1.442, 1.4339, 0.4619]}, \"token.table\": {\"Topic\": [1, 2, 4, 2, 3, 1, 2, 2, 3, 4, 1, 3, 1, 2, 4, 4, 4, 1, 2, 4, 3, 4, 5, 3, 4, 2, 1, 5, 5, 1, 2, 3, 1, 2, 5, 1, 2, 5, 2, 2, 3, 4, 2, 3, 5, 5, 4, 5, 2, 4, 1, 1, 3, 2, 3, 4, 4, 1, 4, 5, 4, 4, 2, 2, 1, 2, 3, 4, 5, 4, 4, 1, 2, 1, 5, 5, 1, 2, 4, 5, 5, 2, 4, 5, 1, 4, 4, 1, 1, 2, 4, 2, 3, 3, 2, 4, 1, 2, 3, 3, 3, 4, 5, 5, 1, 2, 1, 3, 4, 5, 1, 2, 2, 3, 1, 2, 3, 4, 1, 1, 3, 5, 1, 2, 2, 3, 5, 5, 1, 2, 1, 2, 2, 1, 3, 4, 5, 1, 3, 4, 1, 1, 5, 5, 3, 4, 1, 3, 5, 1, 1, 1, 4, 3, 3, 5, 1, 3, 4, 2, 1, 4, 1, 2, 3, 1, 5, 5, 1, 3, 2, 4, 5, 1, 2, 3, 4, 3, 4, 2, 3, 1, 4, 1, 2, 5, 4, 4, 5, 5, 2, 5, 5, 1, 3, 4, 2, 4, 1, 1, 1, 1, 2, 2, 3, 4, 2, 3, 4, 5, 4, 5, 3, 4, 5, 2, 3, 5, 1, 1, 2, 3, 5, 1, 2, 2, 3, 4, 5, 4, 3, 3, 1, 1, 2, 1, 2, 4, 5, 2, 3, 5, 4, 2, 3, 5, 2, 3, 1, 3, 4, 5, 5, 2, 1, 3, 4, 3, 1, 5, 4, 5, 2, 3, 4, 1, 2, 3, 1, 3, 4, 3, 2, 1, 3, 2, 4, 2, 3, 4, 1, 2, 3, 1, 3, 4, 2, 3, 5, 2, 4, 1, 2, 3, 5, 3, 5, 3, 1, 2, 4, 5, 1, 2, 3, 4, 1, 2, 3, 3, 1, 4, 1, 2, 2, 4, 5, 5, 3, 5, 1, 1, 2, 2, 1, 4, 2, 2, 2, 5, 5, 4, 3, 4, 3, 5, 3, 2, 5, 3, 3, 2, 4, 4, 1, 4, 5, 1, 3], \"Freq\": [0.28929536093248187, 0.20732834200161201, 0.5014452922829685, 0.9953045235801282, 0.981651548096116, 0.7748570391216549, 0.2192991620155627, 0.1256972405475432, 0.8315355913145165, 0.03867607401462868, 0.9937214262309336, 0.9740081334657548, 0.9953613841293705, 0.03614669603251632, 0.962405781865747, 0.9960353818942543, 0.990019602733429, 0.11372808431245074, 0.6126641961348153, 0.27147994319746305, 0.7153838752278997, 0.15005612992585216, 0.13260774272517167, 0.27217736541895626, 0.7182458254111346, 0.9933411127020814, 0.5406093129578887, 0.45524994775401156, 0.9655438542857607, 0.9958765794323677, 0.9912820152993355, 0.9808576070746091, 0.6809532718430754, 0.19719913754731597, 0.12016822444289567, 0.2683280724885162, 0.06956653731183753, 0.6559130660830396, 0.9874657146150532, 0.9815260325777764, 0.9691811524964659, 0.029706701992228836, 0.3546518864738426, 0.08422982303753762, 0.5630098697772251, 0.9728657993153572, 0.9820063971662383, 0.9717473887745605, 0.9839582674652824, 0.9874264834709919, 0.997829151360277, 0.9904990195337965, 0.9858863374381441, 0.9857351949594639, 0.9881323805305048, 0.9791319878198872, 0.9885353441574516, 0.341828716526497, 0.1652172129878069, 0.4842573484125374, 0.982285940173315, 0.9927971187096692, 0.9788829413851453, 0.9934236220755367, 0.06877787699392676, 0.052271186515384344, 0.7235432659761096, 0.08253345239271212, 0.07428010715344091, 0.9866502380774003, 0.9872560590807944, 0.18401958288599898, 0.8132478340445762, 0.9923016733136254, 0.9904080364093258, 0.9934349781526818, 0.29100843027332557, 0.5061016178666531, 0.1391779449133296, 0.06326270223333164, 0.9781805365795211, 0.9957728536010007, 0.7448505969947405, 0.2501788264715159, 0.9655772516080465, 0.032768458764978955, 0.9776031913711731, 0.9957485380497996, 0.5265248948712061, 0.47260367069764886, 0.9919380278184049, 0.9929228886662754, 0.9799590586233574, 0.9974825515479226, 0.9815013129145456, 0.994257399539693, 0.30592774460016675, 0.48074359865740485, 0.21057364238712775, 0.9940615929471999, 0.9792464867726982, 0.9782353467382713, 0.020146723388202385, 0.9947494257491383, 0.6472857904402083, 0.3495343268377125, 0.355259038393113, 0.006965863497904176, 0.19504417794131695, 0.4458152638658673, 0.705801523170534, 0.2925113264476812, 0.2984784825609268, 0.6964497926421626, 0.27471454872277257, 0.10988581948910903, 0.611239870908169, 0.9907665572329779, 0.997046516263351, 0.9971820770262296, 0.9844237301914445, 0.9636668977780836, 0.0868213242146834, 0.9076774804262356, 0.16301805221122, 0.0674557457425738, 0.7644984517491697, 0.9916659112947889, 0.9955892123164148, 0.9884366632491778, 0.0534612754210175, 0.9444825324379759, 0.9864197510412661, 0.3556844386769141, 0.033555135724237184, 0.16777567862118592, 0.4362167644150834, 0.9890474068589276, 0.5893170112207772, 0.40798870007592264, 0.9948182898828906, 0.05546200419334742, 0.9428540712869061, 0.993852192554222, 0.9915050899380443, 0.9871551562315739, 0.9921463482532962, 0.4989588278897566, 0.4989588278897566, 0.9946546199200992, 0.9954461301339246, 0.9947041386201054, 0.9887777947849834, 0.9900804219165669, 0.6811064624942043, 0.31893080386633377, 0.5482985384762789, 0.44937869906045536, 0.9949078049025967, 0.9837945536646556, 0.013903030444882924, 0.9732121311418047, 0.9307419918953033, 0.0596356425013009, 0.008519377500185842, 0.9941345466756514, 0.9639096534799009, 0.991084185331922, 0.906804561639003, 0.09156658440002963, 0.8521280513110049, 0.14321479853966468, 0.9865496082906845, 0.04844592566794044, 0.9374286616746476, 0.01211148141698511, 0.9747535629086559, 0.03410928804988182, 0.9652928518116556, 0.9747784173234271, 0.9846518773177816, 0.9931846425314367, 0.9848763217640142, 0.4918199508612218, 0.4192563515538284, 0.08868884359792524, 0.9890796432699241, 0.9109980824229972, 0.0880631479675564, 0.9663495369116172, 0.9755504160255078, 0.9707185878147448, 0.9604296264674012, 0.23966124372116626, 0.605810366072948, 0.1531169057107451, 0.23754213291484452, 0.7601348253275025, 0.9959064839062097, 0.9914469654418975, 0.990382036776775, 0.10830368022256548, 0.888090177825037, 0.9920940846196231, 0.9189370367076468, 0.07921871006100403, 0.25603918870715997, 0.09672591573381599, 0.43811150067669596, 0.20483135096572797, 0.3286865828326646, 0.6662565868229687, 0.1410658254512963, 0.6884012282023261, 0.16927899054155557, 0.217318689945172, 0.33467078251556487, 0.44767650128705433, 0.9957791766637809, 0.32535741910004057, 0.4870129921120104, 0.004092546152201768, 0.18211830377297866, 0.7399924345785925, 0.25899735210250735, 0.8550802180824559, 0.14042373082879042, 0.0025075666219426863, 0.9777518843327319, 0.9823444178857701, 0.9833341391494427, 0.9883088311171467, 0.992965941711883, 0.09020593320911029, 0.9020593320911028, 0.9974739802289146, 0.9835227846387642, 0.9919547064264053, 0.9915881557652935, 0.05281642372681421, 0.9374915211509521, 0.9843116872266569, 0.9709218299326625, 0.9958952721200566, 0.9859867118808223, 0.9818552944157951, 0.9870555326907147, 0.9839425093195756, 0.354626662168377, 0.02086039189225747, 0.1738365991021456, 0.44502169370149275, 0.9650240823588905, 0.9910603948937352, 0.7737873634055126, 0.1888409636882501, 0.03454407872346038, 0.973910722426276, 0.9970717581742408, 0.9918447945257772, 0.9907341313593852, 0.9732024765908747, 0.11156094757285957, 0.877612787573162, 0.9871408726887618, 0.009984082847936266, 0.009984082847936266, 0.9784401190977542, 0.09743191848806232, 0.8768872663925609, 0.021180851845230938, 0.9928116353370198, 0.9921885807987261, 0.2033476191080984, 0.7930557145215837, 0.006642989868853926, 0.9898054904592349, 0.14689206502016708, 0.09639791766948463, 0.7574122102602364, 0.9953105572955999, 0.9746313054364962, 0.9963352175865751, 0.053802237552053274, 0.9223240723209133, 0.023058101808022834, 0.36640091828342036, 0.32652054622536103, 0.30658036019633134, 0.9469741916129225, 0.04370650115136565, 0.992406389674092, 0.9859621045920285, 0.08265375975159224, 0.9165711572453353, 0.9958168624150419, 0.9967838844833172, 0.9878886339049928, 0.9987510671720132, 0.9892868169444093, 0.9941483911373609, 0.9843017826047676, 0.05337751730718464, 0.43035623328917616, 0.5070864144182541, 0.01000828449509712, 0.3333592716654869, 0.6614271263204105, 0.992521011711379, 0.9843009048910898, 0.05052010812414891, 0.947252027327792, 0.12187247472993083, 0.870517676642363, 0.6075366611837565, 0.3198976224817125, 0.0725818135042541, 0.988499058092418, 0.9817874809947609, 0.9884288073229737, 0.9881939067947451, 0.3896493777763876, 0.6073946182984865, 0.9881562658615591, 0.30614144362709933, 0.6924627891565343, 0.9830659688188397, 0.9838635992251761, 0.9915957319816405, 0.9888330699134241, 0.9847187939450904, 0.9946134823190775, 0.5939432632088921, 0.3997695040829081, 0.9865784531890778, 0.9962960159793398, 0.9932832917919526, 0.5563920200512138, 0.44203476691815796, 0.9856964550483003, 0.9902390663263589, 0.9825830736448871, 0.9888152251972813, 0.9926270953124234, 0.7772128048694878, 0.053416687619896076, 0.16826256600267264, 0.9935908624416602, 0.9899695961432858], \"Term\": [\"\\uac00\\ub2a5\", \"\\uac00\\ub2a5\", \"\\uac00\\ub2a5\", \"\\uac04\\ub2f4\\ud68c\", \"\\uac10\\uc18c\", \"\\uac15\\uc870\", \"\\uac15\\uc870\", \"\\uac15\\ud654\", \"\\uac15\\ud654\", \"\\uac15\\ud654\", \"\\uac1c\\ud601\", \"\\uac74\\ub9bd\", \"\\uacb0\\uc815\", \"\\uacbd\\uae30\", \"\\uacbd\\uae30\", \"\\uacbd\\uae30\\ub3c4\", \"\\uacbd\\uae30\\ub3c4\\uc9c0\\uc0ac\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacbd\\uc81c\", \"\\uacc4\\ud68d\", \"\\uacc4\\ud68d\", \"\\uacc4\\ud68d\", \"\\uace0\\uc6a9\", \"\\uace0\\uc6a9\", \"\\uacf5\\uac04\", \"\\uacf5\\uac10\", \"\\uacf5\\uac10\", \"\\uacf5\\ubaa8\", \"\\uacf5\\uc815\", \"\\uad00\\uacc4\\uc790\", \"\\uad00\\uad11\", \"\\uad00\\ub828\", \"\\uad00\\ub828\", \"\\uad00\\ub828\", \"\\uad00\\uc2ec\", \"\\uad00\\uc2ec\", \"\\uad00\\uc2ec\", \"\\uad00\\uc545\\uad6c\", \"\\uad11\\uc8fc\", \"\\uad50\\uc721\", \"\\uad50\\uc721\", \"\\uad6c\\uc131\", \"\\uad6c\\uc131\", \"\\uad6c\\uc131\", \"\\uad6c\\uc131\\uc6d0\", \"\\uad6c\\uc9c1\", \"\\uad6c\\uccad\\uc7a5\", \"\\uad6c\\ucd95\", \"\\uad6d\\ubb34\\ucd1d\\ub9ac\", \"\\uad6d\\ubbfc\", \"\\uad6d\\ud68c\", \"\\uad8c\\ub9ac\", \"\\uadf9\\ubcf5\", \"\\uadfc\\ub85c\\uc790\", \"\\uae08\\uc561\", \"\\uae08\\uc735\", \"\\uae08\\uc9c0\", \"\\uae08\\uc9c0\", \"\\uae08\\uc9c0\", \"\\uae09\\uc5ec\", \"\\uae30\\uac04\", \"\\uae30\\ub300\", \"\\uae30\\ubc18\", \"\\uae30\\ubcf8\", \"\\uae30\\ubcf8\", \"\\uae30\\ubcf8\", \"\\uae30\\ubcf8\", \"\\uae30\\ubcf8\", \"\\uae30\\ubcf8\\uc18c\\ub4dd\", \"\\uae30\\uc900\", \"\\uae30\\ud68d\", \"\\uae30\\ud68d\", \"\\ub0a8\\uc131\", \"\\ub124\\ud2b8\", \"\\ub124\\ud2b8\\uc6cc\\ud06c\", \"\\ub274\\uc2a4\", \"\\ub274\\uc2a4\", \"\\ub274\\uc2a4\", \"\\ub274\\uc2a4\", \"\\ub274\\uc2dc\\uc2a4\", \"\\ub2e8\\uccb4\", \"\\ub300\\uc0c1\", \"\\ub300\\uc0c1\", \"\\ub300\\ucc45\", \"\\ub300\\ucc45\", \"\\ub300\\ucd9c\", \"\\ub300\\ud1b5\\ub839\", \"\\ub300\\ud45c\", \"\\ub300\\ud45c\", \"\\ub300\\ud559\", \"\\ub300\\ud559\\uc0dd\", \"\\ub3c4\\uc11c\\uad00\", \"\\ub3c4\\uc2dc\", \"\\ub3c4\\uc6c0\", \"\\ub4f1\\ub85d\", \"\\ub9c8\\ub828\", \"\\ub9c8\\ub828\", \"\\ub9c8\\ub828\", \"\\ub9c8\\ub8e8\", \"\\ub9c8\\uc744\", \"\\uba74\\uc811\", \"\\uba74\\uc811\", \"\\ubaa8\\uc9d1\", \"\\ubaa9\\uc18c\\ub9ac\", \"\\ubaa9\\uc18c\\ub9ac\", \"\\ubb34\\ub2e8\", \"\\ubb34\\ub2e8\", \"\\ubb34\\ub2e8\", \"\\ubb34\\ub2e8\", \"\\ubb38\\uc81c\", \"\\ubb38\\uc81c\", \"\\ubb38\\ud654\", \"\\ubb38\\ud654\", \"\\ubbf8\\ub798\", \"\\ubbf8\\ub798\", \"\\ubbf8\\ub798\", \"\\ubbfc\\uac04\", \"\\ubbfc\\uc2ec\", \"\\ubbfc\\uc8fc\\ub2f9\", \"\\ubc15\\ub78c\\ud68c\", \"\\ubc15\\uc2a4\", \"\\ubc18\\uc601\", \"\\ubc18\\uc601\", \"\\ubc1c\\uad74\", \"\\ubc1c\\uad74\", \"\\ubc1c\\uad74\", \"\\ubc1c\\ub300\\uc2dd\", \"\\ubc1c\\uc5b8\", \"\\ubc29\\ubb38\", \"\\ubc29\\uc548\", \"\\ubc29\\uc548\", \"\\ubc29\\uc5ed\", \"\\ubc30\\ud3ec\", \"\\ubc30\\ud3ec\", \"\\ubc30\\ud3ec\", \"\\ubc30\\ud3ec\", \"\\ubcf4\\uc120\", \"\\ubcf5\\uc9c0\", \"\\ubcf5\\uc9c0\", \"\\ubd80\\ub3d9\\uc0b0\", \"\\ubd80\\uc0b0\", \"\\ubd80\\uc0b0\", \"\\ubd80\\uc0b0\\uc2dc\", \"\\ubd80\\uc704\\uc6d0\\uc7a5\", \"\\ubd84\\uae30\", \"\\ubd84\\ub178\", \"\\ubd84\\uc57c\", \"\\ubd84\\uc57c\", \"\\ube44\\ub300\\uc704\", \"\\ube44\\uc0c1\", \"\\ube44\\uc11c\\uad00\", \"\\ube44\\uc6a9\", \"\\ube44\\uc804\", \"\\uc0ac\\uc5c5\", \"\\uc0ac\\uc5c5\", \"\\uc0ac\\ud68c\", \"\\uc0ac\\ud68c\", \"\\uc0b0\\uc5c5\", \"\\uc0c1\\uacf5\", \"\\uc0dd\\ud65c\", \"\\uc0dd\\ud65c\", \"\\uc11c\\uc6b8\", \"\\uc11c\\uc6b8\", \"\\uc11c\\uc6b8\", \"\\uc120\\uac70\", \"\\uc120\\ubc1c\", \"\\uc120\\uc815\", \"\\uc138\\ub300\", \"\\uc138\\ub300\", \"\\uc13c\\ud130\", \"\\uc13c\\ud130\", \"\\uc18c\\uac1c\", \"\\uc18c\\ud1b5\", \"\\uc18c\\ud1b5\", \"\\uc18c\\ud1b5\", \"\\uc218\\uae09\", \"\\uc218\\ub2f9\", \"\\uc218\\ub2f9\", \"\\uc218\\ub834\", \"\\uc218\\ub9bd\", \"\\uc218\\uc11d\", \"\\uc218\\uc6d0\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc7a5\", \"\\uc2dc\\uc7a5\", \"\\uc2e0\\uc18d\", \"\\uc2e0\\uccad\", \"\\uc2e0\\uccad\", \"\\uc2e0\\uccad\\uc11c\", \"\\uc2e4\\uc5c5\", \"\\uc2ec\\uc0ac\", \"\\uc544\\uc774\\ub514\\uc5b4\", \"\\uc548\\uc815\", \"\\uc548\\uc815\", \"\\uc548\\uc815\", \"\\uc5b4\\ub824\\uc6c0\", \"\\uc5b4\\ub824\\uc6c0\", \"\\uc5ec\\ub2f9\", \"\\uc5ec\\uc131\", \"\\uc5ec\\uc758\\ub3c4\", \"\\uc5ed\\ud560\", \"\\uc5ed\\ud560\", \"\\uc5f0\\uad6c\", \"\\uc608\\uc0b0\", \"\\uc608\\uc0b0\", \"\\uc608\\uc815\", \"\\uc608\\uc815\", \"\\uc608\\uc815\", \"\\uc608\\uc815\", \"\\uc628\\ub77c\\uc778\", \"\\uc628\\ub77c\\uc778\", \"\\uc62c\\ud574\", \"\\uc62c\\ud574\", \"\\uc62c\\ud574\", \"\\uc6b4\\uc601\", \"\\uc6b4\\uc601\", \"\\uc6b4\\uc601\", \"\\uc6d0\\ub0b4\\ub300\\ud45c\", \"\\uc704\\uc6d0\", \"\\uc704\\uc6d0\", \"\\uc704\\uc6d0\", \"\\uc704\\uc6d0\", \"\\uc704\\uc6d0\\uc7a5\", \"\\uc704\\uc6d0\\uc7a5\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc704\\uc6d0\\ud68c\", \"\\uc704\\ucd09\", \"\\uc720\\uc9c0\", \"\\uc721\\uc131\", \"\\uc721\\uc544\", \"\\uc724\\ud638\\uc911\", \"\\uc758\\uacac\", \"\\uc758\\uacac\", \"\\uc758\\uc6d0\", \"\\uc758\\ud68c\", \"\\uc774\\uc7ac\\uba85\", \"\\uc774\\ud558\", \"\\uc778\\uad6c\", \"\\uc778\\uad6c\", \"\\uc791\\uc131\", \"\\uc7a5\\ub824\\uae08\", \"\\uc801\\uadf9\", \"\\uc804\\ub0a8\", \"\\uc804\\ub2ec\", \"\\uc804\\ub2f4\", \"\\uc804\\ubd81\", \"\\uc804\\uc7ac\", \"\\uc804\\uc7ac\", \"\\uc804\\uc7ac\", \"\\uc804\\uc7ac\", \"\\uc815\\uae30\", \"\\uc815\\ubb34\", \"\\uc815\\ubd80\", \"\\uc815\\ubd80\", \"\\uc815\\ubd80\", \"\\uc815\\ucc29\", \"\\uc815\\uce58\", \"\\uc81c\\uc548\", \"\\uc81c\\uc678\", \"\\uc81c\\uc791\", \"\\uc870\\uc131\", \"\\uc870\\uc131\", \"\\uc870\\uc815\", \"\\uc885\\ub8cc\", \"\\uc885\\ub8cc\", \"\\uc885\\ub8cc\", \"\\uc8fc\\uac70\", \"\\uc8fc\\uac70\", \"\\uc8fc\\uac70\", \"\\uc8fc\\ub3c4\", \"\\uc8fc\\ubbfc\", \"\\uc8fc\\ud0dd\", \"\\uc8fc\\ud0dd\", \"\\uc9c0\\uae09\", \"\\uc9c0\\uae09\", \"\\uc9c0\\ub09c\\ud574\", \"\\uc9c0\\ub09c\\ud574\", \"\\uc9c0\\ub09c\\ud574\", \"\\uc9c0\\ub3c4\\ubd80\", \"\\uc9c0\\ubc29\", \"\\uc9c0\\uc0ac\", \"\\uc9c0\\uc18d\", \"\\uc9c0\\uc18d\", \"\\uc9c0\\uc18d\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc5ed\", \"\\uc9c0\\uc6d0\\uae08\", \"\\uc9c0\\uc6d0\\uae08\", \"\\uc9c0\\uc801\", \"\\ucc38\\uc11d\", \"\\ucc38\\uc5ec\", \"\\ucc38\\uc5ec\", \"\\ucc3d\\uc5c5\", \"\\ucc9c\\uc548\", \"\\uccad\\uc18c\\ub144\", \"\\uccad\\uc640\\ub300\", \"\\uccb4\\uac10\", \"\\ucd5c\\ub300\", \"\\ucd5c\\uc885\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucd94\\uc9c4\", \"\\ucd9c\\ubc94\", \"\\ucd9c\\ubc94\", \"\\ucd9c\\uc0b0\", \"\\ucda9\\ub0a8\", \"\\ucde8\\uc5c5\", \"\\ucde8\\uc5c5\", \"\\ucde8\\uc7ac\", \"\\ucde8\\uc7ac\", \"\\ucf54\\ub85c\\ub098\", \"\\ucf54\\ub85c\\ub098\", \"\\ucf54\\ub85c\\ub098\", \"\\ud1b5\\uc2e0\\uc0ac\", \"\\ud22c\\uc785\", \"\\ud504\\ub85c\\uadf8\\ub7a8\", \"\\ud53c\\ud574\\uc790\", \"\\ud574\\uacb0\", \"\\ud574\\uacb0\", \"\\ud589\\uc0ac\", \"\\ud604\\uc2e4\", \"\\ud604\\uc2e4\", \"\\ud604\\uc548\", \"\\ud611\\ub825\", \"\\ud611\\uc758\", \"\\ud648\\ud398\\uc774\\uc9c0\", \"\\ud64d\\ubcf4\", \"\\ud654\\ud3d0\", \"\\ud655\\ub300\", \"\\ud655\\ub300\", \"\\ud655\\ubcf4\", \"\\ud655\\uc778\", \"\\ud658\\uacbd\", \"\\ud65c\\ub3d9\", \"\\ud65c\\ub3d9\", \"\\ud65c\\ub825\", \"\\ud65c\\uc131\", \"\\ud65c\\uc6a9\", \"\\ud68c\\ub2f9\", \"\\ud68c\\ubcf5\", \"\\ud68c\\uc758\", \"\\ud68c\\uc758\", \"\\ud68c\\uc758\", \"\\ud6c4\\ubcf4\", \"\\ud76c\\ub9dd\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [1, 2, 4, 3, 5]};\n",
              "\n",
              "function LDAvis_load_lib(url, callback){\n",
              "  var s = document.createElement('script');\n",
              "  s.src = url;\n",
              "  s.async = true;\n",
              "  s.onreadystatechange = s.onload = callback;\n",
              "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
              "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "}\n",
              "\n",
              "if(typeof(LDAvis) !== \"undefined\"){\n",
              "   // already loaded: just create the visualization\n",
              "   !function(LDAvis){\n",
              "       new LDAvis(\"#\" + \"ldavis_el16921348818543210726447986212\", ldavis_el16921348818543210726447986212_data);\n",
              "   }(LDAvis);\n",
              "}else if(typeof define === \"function\" && define.amd){\n",
              "   // require.js is available: use it to load d3/LDAvis\n",
              "   require.config({paths: {d3: \"https://d3js.org/d3.v5\"}});\n",
              "   require([\"d3\"], function(d3){\n",
              "      window.d3 = d3;\n",
              "      LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
              "        new LDAvis(\"#\" + \"ldavis_el16921348818543210726447986212\", ldavis_el16921348818543210726447986212_data);\n",
              "      });\n",
              "    });\n",
              "}else{\n",
              "    // require.js not available: dynamically load d3 & LDAvis\n",
              "    LDAvis_load_lib(\"https://d3js.org/d3.v5.js\", function(){\n",
              "         LDAvis_load_lib(\"https://cdn.jsdelivr.net/gh/bmabey/pyLDAvis@3.4.0/pyLDAvis/js/ldavis.v3.0.0.js\", function(){\n",
              "                 new LDAvis(\"#\" + \"ldavis_el16921348818543210726447986212\", ldavis_el16921348818543210726447986212_data);\n",
              "            })\n",
              "         });\n",
              "}\n",
              "</script>"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "topics_table1_peak1 = create_topics_table(lda_model_peak1, num_topics=5)\n",
        "print(topics_table1_peak1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zh9L-rRJalDr",
        "outputId": "dd107b83-caa7-4afc-85ce-9cd7ce965e33"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Topic                                  Top Words\n",
            "0  Topic 1   의원, 민주당, 청와대, 대책, 서울, 문제, 국민, 정부, 세대, 회의\n",
            "1  Topic 2   소통, 위원회, 활동, 위원, 센터, 코로나, 단체, 적극, 경제, 정무\n",
            "2  Topic 3  면접, 취업, 신청, 지급, 수당, 경기도, 경기, 이재명, 지난해, 최대\n",
            "3  Topic 4     지사, 주택, 기본, 교육, 사업, 주거, 계획, 사회, 추진, 창업\n",
            "4  Topic 5    참여, 활동, 모집, 천안, 확인, 발굴, 부산, 구성, 선정, 부산시\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n",
            "  and should_run_async(code)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### LDA 토픽 기반 생성형 텍스트 추출"
      ],
      "metadata": {
        "id": "uyv_EJh2d-TW"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s5Ec4gednjTC",
        "outputId": "64a02c5f-ba0f-4e9b-8a71-11e61bbfb4e7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting openai\n",
            "  Downloading openai-0.28.1-py3-none-any.whl (76 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m77.0/77.0 kB\u001b[0m \u001b[31m1.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: requests>=2.20 in /usr/local/lib/python3.10/dist-packages (from openai) (2.31.0)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from openai) (4.66.1)\n",
            "Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from openai) (3.8.6)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (3.3.0)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (3.4)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (2.0.6)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (2023.7.22)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (23.1.0)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (6.0.4)\n",
            "Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (4.0.3)\n",
            "Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (1.9.2)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (1.4.0)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (1.3.1)\n",
            "Installing collected packages: openai\n",
            "Successfully installed openai-0.28.1\n"
          ]
        }
      ],
      "source": [
        " !pip install openai"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import openai\n",
        "\n",
        "def generate_policy_recommendation(policy, keywords):\n",
        "    question = f\"한국의 {policy}을 강화하고 발전시키기 위한 방법을 찾고 싶습니다. LDA 모델링 결과로 언급된 키워드 중 {', '.join(keywords)}을 활용하여 어떤 정책을 추천하시겠습니까?\"\n",
        "\n",
        "    openai.api_key =\"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\"  # 여기에 본인의 API 키를 넣어야 합니다.\n",
        "\n",
        "    response = openai.ChatCompletion.create(\n",
        "        model=\"gpt-4\",\n",
        "        messages=[\n",
        "            {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n",
        "            {\"role\": \"user\", \"content\": question}\n",
        "        ]\n",
        "    )\n",
        "\n",
        "    return response['choices'][0]['message']['content']\n"
      ],
      "metadata": {
        "id": "mSBs2Dq1pwue"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 데이터프레임에서 필요한 정보 반복 추출\n",
        "for i in range(len(df)):\n",
        "    policy_type = df.loc[i, 'Topic']\n",
        "    keywords = df.loc[i, 'TopicWords'].split(', ')\n",
        "\n",
        "    result = generate_policy_recommendation(policy_type, keywords)\n",
        "    print(f\"Result for Row {i + 1}:\")\n",
        "    print(result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QBiamjoxyzTn",
        "outputId": "e48d23d7-8f95-41a2-fc79-461206aa99c4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Result for Row 1:\n",
            "'청년 창업 지원 정책'을 추천드립니다.\n",
            "\n",
            "이런 방식으로 구체화할 수 있습니다:\n",
            "\n",
            "1. **청년 창업 인큐베이션 센터 설립 (키워드: 시장, 도시, 기업, 추진)**: 도시 중심부에 청년들이 새로운 사업 아이디어를 모색하고, 기업을 창업하고 성장시킬 수 있도록 지원하는 인큐베이션 센터를 설립합니다. 이를 통해 시장에 새로운 일자리를 창출하고, 도시의 활력을 더합니다.\n",
            "\n",
            "2. **교육과 직업 훈련 프로그램 개발 (키워드: 시민, 예비, 일자리)**: 청년들에게 현장진출을 위한 실질적인 교육과 훈련을 제공합니다. 이 개발된 프로그램은 창업에 대한 전반적인 지식과 기술을 제공할 수 있도록 구성합니다.\n",
            "\n",
            "3. **청년 주택 지원 정책 (키워드: 주택, 지역)**: 청년들이 창업 초기에 안정적으로 생활할 수 있도록 청년 주택 지원 프로그램을 개발하고 실행합니다. 이는 지역 고유의 주거 문제를 해결하는 데에도 도움이 될 수 있습니다.\n",
            "\n",
            "4. **미래 지향적 창업 아이디어 경진대회 운영 (키워드: 미래, 시민, 추진)**: 청년들에게 미래 지향적인 아이디어를 제시하고 이를 현실화시키는데 도움을 주는 경진대회를 운영합니다. 이를 통해 시민들의 참여를 유도하고, 미래지향적인 사업 아이디어를 발굴할 수 있습니다.\n",
            "\n",
            "\n",
            "이러한 정책들은 청년들이 직접 사업을 기획하고, 경험하고, 발전시키는데 도움을 줄 수 있고 지역 상생 및 도시의 경제 활성화에 기여할 수 있을 것입니다.\n",
            "Result for Row 2:\n",
            "청년 정책 발전을 위해 다음의 방법들을 고려해 봐도 좋을 것 같습니다.\n",
            "\n",
            "1. 청년의정사 참여 강화: 청년들을 대상으로 정치참여 의식을 높이는 교육 프로그램이나 워크샵을 운영하는 것은 어떨까요? 청년들이 정치에 대한 관심과 이해를 높이면, 유권자로서의 책임감도 더욱 강화될 수 있습니다.  \n",
            "\n",
            "2. 여성 청년 지원 정책: 여성 발전을 위한 청년 정책을 모색해 보는 것도 중요합니다. 여성 청년에게 사회 참여기회를 넓히고, 고용률 향상을 위한 구체적인 지원 방안을 마련하거나, 여성 청년 창업을 지원하는 프로그램 등을 고려해 보는 것이 좋을 것 같습니다.\n",
            "\n",
            "3. 청년 공약 실행 강화: 정부 및 의원들의 청년 공약을 철저히 관리하고 감독하는 체제를 강화합니다. 공약의 이행 상황을 점검하고, 관련 보고서를 국민들에게 공개함으로써, 국민들이 더욱 신뢰할 수 있는 판단을 할 수 있게 하는 것은 어떨까요?\n",
            "\n",
            "4. 청년 정책 개편: 청년 정책에 대한 국민들의 의견을 직접 듣고, 그것을 반영하여 청년 정책을 개편하는 것도 한 방안이 될 수 있습니다. 청년들의 실질적인 문제를 파악하고 이를 해결하는 정책을 마련하면, 청년층의 판단에 크게 영향을 미칠 수 있습니다.\n",
            "\n",
            "5. 청년 대표의 자문 참여: 청년들에게 마이크를 주고 당선인과 대통령에게 그들의 의견을 직접 전달할 수 있는 장을 마련하는 것은 어떨까요? 이러한 과정을 통해 청년들의 직접적인 목소리가 공식 정책에 반영될 수 있게 합니다.\n",
            "Result for Row 3:\n",
            "분석 결과에 근거하여, 다음과 같은 청년정책을 제안드립니다.\n",
            "\n",
            "1. 청년 지원금 제도 강화: 청년들에게 필요한 지원금의 규모를 키우고, 지급 기준을 다각화하여 더 많은 청년이 혜택을 받을 수 있도록 해야 합니다. 지원금의 신청 및 지급 과정에서 필요한 정보를 확인하고, 투명하게 공개함으로써 청년들의 신뢰를 얻고, 이에 따른 활동 의욕을 더욱 높일 수 있습니다.\n",
            "\n",
            "2. 면접 및 채용 훈련 지원: 청년들에게 기업 면접 및 채용 과정에서 필요한 기술들을 배울 수 있도록 하는 프로그램을 지원합니다. 이를 통해 청년들이 기업에서의 채용 경쟁력을 높일 수 있을 것입니다.\n",
            "\n",
            "3. 중소기업 지원 확대: 청년 일자리를 늘리는 방법 중 하나는 중소기업의 성장입니다. 중소기업에 대한 지원을 확대하여, 청년들에게 새로운 일자리를 제공할 수 있도록 도와줍니다. 중소기업이 성장함에 따라, 청년 구직자들에게 더 많은 기회가 제공될 것입니다.\n",
            "\n",
            "4. 실질적인 직업 훈련 프로그램: 청년들이 실질적인 직업 기술을 배울 수 있는 훈련 프로그램을 제공합니다. 이 프로그램은 청년들이 입사 이후에도 다양한 역량을 발휘할 수 있도록 돕는 역할을 합니다.\n",
            "\n",
            "이러한 다양한 정책들은 청년들이 경제 활동에 더욱 적극적으로 참여하도록 돕는 중요한 역할을 할 것입니다. 또한, 이를 통해 청년들의 고용률을 높이고, 그들이 마주하는 경제적 어려움을 해소하는 데 도움이 될 것입니다.\n",
            "Result for Row 4:\n",
            "LDA 모델링 결과를 바탕으로 한 정책 제안은 다음과 같습니다:\n",
            "\n",
            "\"청년들의 창의적 생각 활성화 및 사회 참여 촉진 정책\"\n",
            "\n",
            "1. 사람과 사람을 이어주는 교육 제도 개편 : 청년들이 단순 지식 외 창의적 사고와 문제 해결 능력, 인간관계 능력 등을 길러 청년의 고용률을 향상시키려는 노력 필요. \n",
            "\n",
            "2. 정치 참여의 기회 확대 : 청년들이 정치에 적극적으로 참여할 수 있도록 기회를 확대하고, 이를 위한 교육과 정보 제공을 촉진하는 정책 도입.\n",
            "\n",
            "3. 국민들의 참여 및 의견 수렴 : 청년 정책에 대한 국민들의 의견을 수렴하는 플랫폼을 제공, 사람들이 직접 청년 문제에 관한 정보를 공유하고 해결책을 제안하는 시스템 구축.\n",
            "\n",
            "4. 가족 기반의 청년 지원 : 가족을 중심으로 한 지원이 필요하다. 가족간의 대화와 서로를 이해하는 창을 열어줄 수 있는 프로그램이 필요하다.\n",
            "\n",
            "5. 스타 청년들의 성공 사례 확산 : 성공적으로 이루어진 청년들의 사례를 '스타'처럼 알려, 다른 청년들에게 희망과 동기부여를 제공.\n",
            "\n",
            "6. 대통령 주도의 청년 창업 지원 : 대통령의 지원 및 대통령 주도의 청년 창업 및 고용 촉진 정책.\n",
            "\n",
            "7. 비합리적인 제도 폐지 : 청년들에게 부담을 주는 제도의 폐지 및 개선, 청년일자리 창출에 방해가 되는 요소를 찾아 수정하는 정책 시행.\n",
            "Result for Row 5:\n",
            "청년들이 직면한 문제들을 해결하기 위해 다음과 같은 정책을 추천드립니다:\n",
            "\n",
            "1. 청년 지원 의원회의 설립: 청년 문제를 전담하여 다루는 의원회의를 설립하는 것이 필요합니다. 이 곳은 청년들이 직면한 문제를 집중적으로 연구하고 해결방안을 마련하는 역할을 하게 됩니다. \n",
            "\n",
            "2. 청년을 위한 종합 대책 마련: 국민적인 관심과 지원 하에 청년 문제를 종합적으로 다루는 대책을 마련하는 것이 중요합니다. 이를 위해 민주당과 청와대 및 정부와 함께 청년 문제를 해결하기 위한 다방면의 대책을 마련하는 것이 필요합니다.\n",
            "\n",
            "3. '젊은 세대를 위한 특별 정책' 제안: 서울을 중심으로 젊은 세대를 위한 특별 정책을 제안합니다. 예를 들어, 청년 창업 지원, 청년에게 일자리를 제공하는 기업에 대한 특별 혜택 제공 등이 있습니다.\n",
            "\n",
            "4. 청년 공공 참여 확대: 청년들이 정책 결정 과정에 더 활발하게 참여할 수 있도록 하는 기회가 필요합니다. 이를 위해, 청년 대표들이 정부와 청와대의 새로운 정책 회의에 참여할 수 있게 하는 것입니다.\n",
            "\n",
            "5. 청년 문제 해결의 일환으로 교육 개혁: 청년문제의 근원 중 하나인 실업문제 해결을 위한 교육 개혁이 필요합니다. 고등학교와 대학에서의 직업 교육과 진로 교육을 강화하고, 청년들이 취업 시장에 더 잘 대비할 수 있도록 돕는 것입니다.\n",
            "Result for Row 6:\n",
            "키워드를 통해, 아래와 같이 청년정책을 강화하고 발전시키는 몇 가지 제안을 드릴 수 있을 것 같습니다.\n",
            "\n",
            "1. **청년 소통 센터 구축**: 청년들이 정치·경제·사회적 이슈에 대해 의견을 나누고, 정보를 얻을 수 있는 플랫폼을 만드는 것이 필요합니다. 이 센터에서는 청년들의 의견이 정책 결정 과정에 반영되도록 하는 '청년 정책 위원회'의 설립도 고려해볼 만 합니다.\n",
            "\n",
            "2. **코로나19 대응 청년 경제 지원**: 코로나19로 인해 많은 청년들이 경제적인 어려움을 겪고 있습니다. 이에 정부는 청년들을 위한 다양한 경제 지원 정책을 마련하되, 이를 더욱 적극적으로 홍보하고 이용 채널을 간편화 해야 합니다.\n",
            "\n",
            "3. **청년 활동 지원**: 청년들이 다양한 분야에서 활동하고 경험을 쌓을 수 있도록 지원하는 정책이 필요합니다. 이를 위해 정부나 단체에서 주최하는 프로젝트나 대회 등에 참여할 수 있는 기회를 제공하거나, 창업 등에 대한 지원을 확대할 수 있습니다.\n",
            "\n",
            "4. **정무 교육 강화**: 청년들이 대한민국의 정치에 대해 더 잘 이해하고 참여할 수 있도록 정무 교육을 강화하는 것도 중요합니다. 이는 청년들이 미래의 지도자로서 사회 변화를 주도하는 데 도움이 될 것입니다. \n",
            "\n",
            "위의 제안들은 키워드들을 기반으로 한 것이므로, 실제로 이행하기 위해서는 자세한 조사와 계획이 필요하다는 점을 알려드립니다.\n",
            "Result for Row 7:\n",
            "1. '청년 창업 시장 활성화 정책': 청년들이 창업에 성공할 수 있도록 다양한 지원을 하는 정책을 세울 수 있습니다. 일례로 창업자금 지원이나 창업교육 프로그램, 멘토링 등을 통해 청년들이 시장에 나갈 수 있도록 지원하는 것입니다.\n",
            "\n",
            "2. '청년 노동자를 위한 개혁 정책': 청년 노동자들의 근무환경 개선을 위한 규정 개혁 등 청년 노동자의 권익을 보호하고, 임금 및 기타 근로조건을 개선하는 정책을 추진할 수 있습니다.\n",
            "\n",
            "3. '청년 의원 육성 프로그램': 청년대표를 국회나 정당 내에 육성하여 청년 문제에 대해 심도 있게 이야기하고 정책에 반영할 수 있도록 하는 프로그램을 만드는 것도 방법입니다. 이를 통해 정치에 직접 참여하여 청년들의 의견을 반영할 수 있습니다.\n",
            "\n",
            "4. '민주당과 함께하는 청년 퍼블릭포럼': 한국의 청년 문제에 대해 대중들이 함께 이야기하고 논의하며 해결책을 찾을 수 있는 플랫폼을 제공하는 것입니다. 이를 통해 청년 문제에 대한 인식을 높이고, 정치에 대한 청년들의 관심과 참여를 유도할 수 있습니다.\n",
            "\n",
            "5. '국민과 함께하는 청년 문제 해결 프로젝트': 청년 문제를 보다 심도 있게 다룰 수 있는 프로젝트를 진행할 수 있습니다. 이를 통해 국민과 함께 청년 문제를 이해하고, 함께 해결책을 모색하는데 기여할 수 있습니다. \n",
            "\n",
            "이러한 정책들은 청년들의 의견을 최대한 반영하도록 노력하므로, 청년들이 정치에 대해 더 큰 관심을 가지고 참여하게 해 정치의 활력을 불어넣을 것입니다.\n",
            "Result for Row 8:\n",
            "이러한 키워드를 중심으로 다음과 같은 청년정책을 추천해드릴 수 있습니다.\n",
            "\n",
            "1. 청년 구직자 지원금 제도 강화: 청년들의 어려운 취업 환경을 겪는 것을 돕기 위해 구직 활동을 지원하는 지원금 제도를 강화할 수 있습니다. 지원금의 지급 규모를 확대하거나 지원 대상을 확대하는 방안을 검토해 볼 수 있습니다.\n",
            "\n",
            "2. 청년 창업 지원 제도 강화: 취업이 아닌 창업을 통해 자립하려는 청년을 위한 지원 제도도 필요합니다. 시작자금, 멘토링, 상업용 임대공간 지원 등 다양한 형태의 지원을 통해 청년 창업을 돕는 정책을 강화할 수 있습니다.\n",
            "\n",
            "3. 지역 중심의 청년 일자리 창출: 특정 지역, 예를 들어 ‘경기도’와 같은 지역에 중점을 둔 청년 일자리 정책을 추진할 수 있습니다. 공공기관 이전, 대기업의 복합 산업단지 입지 유도 등을 통해 지역 특성에 맞는 일자리를 창출하는 방안을 검토해 볼 수 있습니다.\n",
            "\n",
            "4. 청년 우대 지원 신청 시스템 구축: 특정 사회 경제적 상황에 있는 청년을 대상으로 한 지원 제도를 만들거나 기존 제도의 접근성을 개선할 수 있습니다. 이를 위해 공공분야에서 청년을 위한 신청 시스템 구축을 통해 지원받기 어려웠던 청년들도 모든 지원 받을 수 있게 하는 정책을 추진할 수 있습니다.\n",
            "\n",
            "마지막으로, 청년의 다양한 의견을 수렴하고, 지속적으로 청년 정책을 점검하고 개선하는 과정이 필요합니다. 청년들의 실질적인 문제를 파악하고 해결할 수 있는 정책이 될 것입니다.\n",
            "Result for Row 9:\n",
            "스토킹 범죄의 처벌을 강화하고 발전시키기 위한 정책 추천은 아래와 같습니다:\n",
            "\n",
            "1. \"검찰-수사-조사 강화\": 스토킹 사건에 대한 검찰의 수사능력과 조사능력을 향상시키는 방향으로 정책을 추진합니다. 이는 정확한 증거 수집과 효율적인 사건 처리를 위해 필요하며, 그로 인해 피해자의 안전을 보장할 수 있습니다.\n",
            "\n",
            "2. \"법원 영장 발부기준 강화\": 스토킹 범인에 대한 법원의 영장 발부 기준을 강화합니다. 이는 더 빠르고 강력한 법적 조치를 취할 수 있게 해 스토킹 피해자를 보호하는데 도움이 될 것입니다. \n",
            "\n",
            "3. \"송치 절차 개선\": 스토킹 범죄자를 빠른 시간 내로 송치할 수 있는 절차를 개선합니다. 이로써 범인에게 빠른 처벌이 이루어질 수 있도록 합니다.\n",
            "\n",
            "4. \"스토킹 금지법 추가\": 스토킹 행위를 금지하는 법을 세우거나 기존의 법률을 강화합니다. 구체적인 행동 기준과 처벌 수준을 명시함으로써 범죄를 예방하고, 범죄자를 처벌하는데 도움이 됩니다.\n",
            "\n",
            "5. \"지난해 범죄 발생률 분석 및 보완\": 지난해 스토킹 범죄의 패턴과 발생률을 분석하고, 그에 기반한 대응책을 마련합니다. 이를 통해 더 효과적인 예방 및 대응 전략을 적용할 수 있습니다.\n",
            "\n",
            "위와 같은 추천 정책들은 LDA 모델링 결과로 언급된 키워드를 바탕으로 활용하였습니다. 이런 정책들이 스토킹 범죄의 감소와 피해자 보호에 도움이 되길 바랍니다.\n",
            "Result for Row 10:\n",
            "스토킹 사건에 대한 처벌을 강화하고 발전시키기 위해, 정부는 다음과 같은 정책 안을 고려해 볼 수 있습니다:\n",
            "\n",
            "1. **스토킹 특별법 제정**: 법무부가 주도적인 역할을 하는 법안을 제정함으로써 스토킹 행위에 대한 처벌을 강화할 수 있습니다. 이 법안은 스토킹의 정의와 범죄의 범위를 명확히 규정하며, 물질적, 정신적 피해를 입은 피해자를 보호하는 조치를 포함할 수 있습니다.\n",
            "\n",
            "2. **스토킹 처벌대책 강화**: 대책은 스토킹을 예방하고 피해를 최소화하는 데 초점을 맞출 수 있습니다. 법무부와 정부는 스토킹과 관련된 대책을 강화하고, 그러한 조치들이 효과적으로 실행될 수 있도록 감독하는 역할을 할 수 있습니다.\n",
            "\n",
            "3. **국민 알림 시스템 구축**: 정부는 스토킹 사건에 대한 인식을 높이는 데 중요한 역할을 합니다. 국민들에게 스토킹 범죄의 심각성과 그에 대한 법적 대응에 대해 알리는 교육 프로그램을 실시하고, 피해자들이 쉽게 도움을 청할 수 있는 상황을 만들 수 있습니다.\n",
            "\n",
            "4. **국민 참여 위원회 설립**: 장관, 대통령, 의원 등의 정치인들은 법무부와 협력하여 스토킹 범죄에 대한 국민의 실질적 참여를 독려하는 위원회를 설립할 수 있습니다. 이 방식으로, 스토킹과 관련된 문제에 대한 국민들의 생각과 의견을 정부에 전달할 수 있습니다.\n",
            "\n",
            "5. **법안 개선 제안**: 민주당과 다른 정당들은 스토킹 행위에 대한 법률을 개선하고 강화하는 법안 제안을 의원들에게 제시할 수 있습니다. 이러한 제안은 스토킹 피해자들이 더 나은 지원을 받을 수 있도록 하는 데 기여할 것입니다. \n",
            "\n",
            "이러한 정책들은 스토킹에 대한 처벌 강화와 관련하여 법무부와 정부, 그리고 국민들이 상호작용하며 효과적인 결과를 도출할 수 있을 것입니다.\n",
            "Result for Row 11:\n",
            "이러한 LDA 모델링 결과를 바탕으로 한국의 스토킹처벌 강화와 발전을 위한 몇 가지 정책 건의를 해봅니다.\n",
            "\n",
            "1. 선제적 구속 강화: 스토킹 행위가 발생하면서 혐의가 제기되는 구속 절차를 강화하면 이를 통해 피해자를 보호하고 잠재적인 사건을 사전에 방지할 수 있습니다. 이는 신당역, 전주환 등 특정 구역에서 스토킹 사건이 발생했던 이력에 대한 반성에서 비롯된 것일 수 있습니다.\n",
            "\n",
            "2. 여성 보호 강화: 여성은 스토킹의 주요 피해 대상일 수 있으므로, 여성 보호를 위한 다양한 정책을 개발하고 실시해야 합니다. 이러한 정책은 공공장소에서의 안전한 이동을 돕는 것부터 시작해 경찰과의 긴밀한 협력, 스토킹 행동을 신고할 수 있는 쉬운 방법 제공 등이 포함될 수 있습니다.\n",
            "\n",
            "3. 강력한 처벌 제도: 스토킹 행위를 저지른 한국내 모든 인구에 대해 강력한 처벌 제도를 도입해야 합니다. 스토킹 행위의 심각성을 인식하게 함으로써 예방과 함께 엄중한 처벌이 이뤄질 수 있도록 해야 합니다. 스토킹은 살인과 같은 심각한 범죄로 이어질 수 있다는 점을 심각하게 받아들여야 합니다.\n",
            "\n",
            "4. 서울 및 기타 도시에서의 보호 로그라ム 강화: 특히 대도시에서 스토킹 사례가 증가하는 추세를 보여, 특히 이 지역에서 보호를 강화하고 안전을 확보하는 로그라ム을 구현해야 합니다. 이러한 로그램은 물리적인 보호뿐만 아니라, 스토킹 행위를 신고하고 경찰과의 효과적인 소통을 돕는 기능을 제공해야 합니다.\n",
            "\n",
            "5. 스토킹 범죄에 대한 교육 및 인식 캠페인: 광범위한 교육 및 인식 캠페인을 통해서만 사람들이 스토킹에 대해 전반적으로 이해하고, 이 행동이 왜 위험하고 불법적인지 알게 될 수 있습니다. 이것은 결국 스토킹을 감히 시도하지 않는 사회를 구축하는 데 기여할 것입니다.\n",
            "Result for Row 12:\n",
            "스토킹처벌 강화를 위한 정책은 피해자 보호, 가해자 처벌 강화, 예방 교육 등의 여러 가지 요소를 포함할 수 있습니다. 주어진 키워드들을 소개하는 몇 가지 방안을 제시해 드리겠습니다.\n",
            "\n",
            "1. **현행법 강화**: 민주당 의원들이 주도하여, 스토킹을 촬영하거나 유포하는 범죄에 대한 처벌을 강화하는 법안을 발의합니다. 이는 특정 사람들에 대한 스토킹 행위가 중대 범죄로 인식되도록 하는데 초점을 둘 수 있습니다.\n",
            "\n",
            "2. **스토킹 피해 예방 교육**: 서울시내의 학생들을 대상으로 스토킹 피해 예방 교육을 실시할 수 있습니다. 이 교육에서는 스토킹의 위험성과 피해를 인지하고, 스토킹이 발생했을 때 어떻게 대응해야 하는지에 대한 지식을 제공합니다.\n",
            "\n",
            "3. **피해자 정보 공개 조심스럽게 고려**: 피해자의 동의 하에 스토킹 사건을 공개함으로써 사회적인 인식을 높입니다. 이 정보는 민감하기 때문에 개인의 사생활 침해와 관련하여 신중하게 다루어야합니다.\n",
            "\n",
            "4. **적극적인 스토킹 사건 조사**: '이걸'이라는 키워드를 스토킹 사건의 신고나 증거 수집의 필요성으로 해석할 수 있습니다. 경찰이나 기타 관련 기관은 스토킹 사건에 대한 신고를 적극적으로 수용하고, 피해자를 보호하고, 사건을 철저히 수사해야 합니다.\n",
            "\n",
            "이들 정책은 스토킹의 수를 줄이고 피해자를 보호하는데 중점을 둘 것입니다. 그러나 구체적인 정책 수립과 실행은 광범위한 논의와 함께, 스토킹 피해자와 전문가들의 의견을 충분히 듣는 것이 중요합니다.\n",
            "Result for Row 13:\n",
            "이러한 키워드를 바탕으로 한국의 스토킹처벌 강화와 발전에 대해 다음과 같은 정책을 추천하겠습니다.\n",
            "\n",
            "1. 교육: \"교수\" 키워드를 활용해, 초등학교부터 대학교 차원에서 스토킹이 무엇인지, 왜 문제인지에 대한 인식을 제고하는 교육을 진행하는 것을 제안합니다. 이를 통해, 학생들이 스토킹에 대한 올바른 인식을 갖고 대처할 수 있게 될 것입니다.\n",
            "\n",
            "2. 방송 캠페인: \"방송\" 키워드를 기반으로, 공중파와 케이블 TV, 인터넷 스트리밍 서비스 등 다양한 매체를 통해 스토킹 문제 인식 캠페인을 진행하는 것을 추천합니다. 이러한 캠페인은 스토킹 문제에 대한 사회적 관심을 높이고, 피해자들이 적극적으로 도움을 청할 수 있는 환경을 만드는데 도움이 될 것입니다.\n",
            "\n",
            "3. 정치적 행동: \"정치\", \"공약\", \"진행\" 키워드를 참고하여, 정치인들이 스토킹 문제에 대한 공약을 설정하고 이를 실천에 옮기는 것이 중요합니다. 법률 개정, 천명작업 등을 통해 스토킹 처벌을 강화하는 법률안을 발의해야 합니다.\n",
            "\n",
            "4. 사회적 대화: \"사람\", \"이야기\", \"그것\", \"모습\" 키워드를 활용하여, 스토킹 문제에 대한 사회적 대화를 늘리는 것이 필요합니다. 거리에서의 토론회, 커뮤니티 모임, 온라인 포럼 등에서 스토킹 문제를 다루면서 국민들의 의견을 수집하고 해결책을 모색해 보는 것이 좋을 것 같습니다.\n",
            "\n",
            "5. 퍼블릭 프라이버시 보호 증강: \"문제\" 키워드를 이용해, 공공장소에서의 프라이버시 보호를 증진하는 일련의 대책을 수립해볼 수 있습니다. CCTV 설치 확대, 유해 사이트 차단 등을 통해 스토킹을 막는데 집중할 수 있습니다.\n",
            "\n",
            "기억해야 할 점은 이 모든 정책들이 서로 연결되어 있으며, 하나의 문제를 해결하기 위해선 다각도에서 접근해야 한다는 것입니다. 이러한 다양한 방법을 통해 스토킹 처벌을 강화하는 데 리더십을 발휘해야 합니다.\n",
            "Result for Row 14:\n",
            "이러한 키워드를 바탕으로 강화된 스토킹처벌을 위한 몇 가지 정책 추천을 해드릴 수 있겠습니다.\n",
            "\n",
            "1. \"디지털 스토킹 법안\" 제정: 디지털 공간에서의 스토킹 행위를 천명하고 처벌하는 법안을 제정합니다. 특히 청소년과 아동을 보호하기 위한 규정을 포함할 필요가 있습니다.\n",
            "\n",
            "2. 스토킹 행위 감지 및 자동 신고 시스템 설치: 디지털 플랫폼에서의 스토킹 행위를 감지하며, 이러한 행위를 자동으로 관련 기관에 신고하는 시스템을 구축합니다.\n",
            "\n",
            "3. 교육 및 예방 프로그램 개발: 불법 촬영, 디지털 폭력, 스토킹 등에 대한 인식을 높이고 예방하기 위한 교육 프로그램을 개발하고, 모든 나이에 걸쳐 이러한 프로그램을 전파합니다.\n",
            "\n",
            "4. 스토킹 피해자 보호 및 지원 관련 법안 제정: 스토킹 피해자들이 안전하게 신고할 수 있도록 하고, 신고 이후에도 필요한 보호와 지원이 제공될 수 있도록 하는 법안을 제정합니다.\n",
            "\n",
            "5. 효과적인 처벌을 위한 법적 기준 마련: 불법 행위에 대한 효과적인 처벌을 위해, 법적 기준을 명확히 하고 엄정하게 처리할 수 있도록 합니다.\n",
            "\n",
            "이런 방향으로 국회에서 협력하여 법률을 수정하고 제정하는 것이 중요합니다.\n",
            "Result for Row 15:\n",
            "스토킹에 대한 처벌 강화를 위해 다음과 같은 정책을 제안드릴 수 있습니다:\n",
            "\n",
            "1. 교육 강화 : 청소년과 아동에 대한 성범죄 교육을 강화해, 스토킹과 관련된 범죄에 대한 이해와 인식을 높이는 것이 필요합니다. 연령에 맞는 교육 커리큘럼을 개발하고, 이를 교육체계에 정착시켜 일찍부터 스토킹에 대한 인식을 높일 수 있습니다.\n",
            "\n",
            "2. 디지털 감시 강화 : 디지털 환경에서의 스토킹이 증가하고 있습니다. 디지털 시대에 맞게 아동, 청소년, 여성을 보호하기 위한 기술적 대책 마련이 필요합니다. 예를 들어, 스토킹에 사용되는 디지털 플랫폼에 대한 감시를 강화하여, 잠재적 범죄를 조기에 예방하는 것이 필요합니다.\n",
            "\n",
            "3. 법령 개선 : 스토킹과 관련된 법령을 강화하고, 피해자를 보호할 수 있는 강력한 법적 척도를 마련할 필요가 있습니다. 특히, 착취 및 폭력과 관련된 행위에 대한 범죄 처벌을 보다 강화하여, 심각한 범죄에 대한 엄정한 처리가 가능하도록 해야 합니다.\n",
            "\n",
            "4. 피해자 지원 강화 : 스토킹 피해자에 대한 지원 체계를 강화하는 것도 중요합니다. 가해자에 대한 처벌 뿐 아니라, 피해자의 심리적, 사회적 회복을 돕는 지원 체계를 강화하고, 이에 대한 널리 알리는 캠페인 등도 필요할 것입니다.\n",
            "\n",
            "이런 정책들이 스토킹에 대한 처벌을 강화하고 발전시키는 데 도움이 될 것입니다.\n",
            "Result for Row 16:\n",
            "스토킹 문제에 대한 효과적인 해결책을 찾기 위해, 관련 키워드들을 활용해 여러 경로를 고려해 볼 수 있습니다:\n",
            "\n",
            "1. 법안 개정: 현재의 스토킹 대응 법률이 미흡하므로, 국회에서 스토킹 행위에 대한 과태료 제도 및 강력한 처벌을 할 수 있는 법률 강화를 추진하면 좋을 것 같습니다.\n",
            "\n",
            "2. 법률 교육 강화: 시민들이 스토킹 행위에 대한 법률적인 관련성과 그로 인한 법적 대응 방법을 알 수 있도록 교육을 강화하는 것이 필요합니다. 이러한 교육은 학교, 사회 복지 기관, 또는 인터넷 강의 등 다양한 방법으로 진행될 수 있습니다.\n",
            "\n",
            "3. 전문 변호사 지원: 스토킹 피해자들이 자신의 권리를 적극적으로 주장하고 법적 조치를 취할 수 있도록, 스토킹 문제에 특화된 변호사들을 통한 법률 상담을 지원해야 합니다.\n",
            "\n",
            "4. 보호 시스템 구축: 스토킹 피해자들이 피해로부터 즉각적인 보호를 받을 수 있도록 긴급 보호 시스템을 정비하고, 이에 관한 정책을 마련하는 것이 중요합니다. 그리고 이와 함께, 수사기관 등에서 피해자의 보호를 최우선으로 생각하는 문화를 조성해야 합니다.\n",
            "\n",
            "5. 사건 발생 추적 및 데이터 분석: 스토킹 사건이 발생했을 때, 이를 즉각적으로 신고하고 대응할 수 있는 시스템을 구축하는 것이 필요합니다. 또한 발생한 스토킹 사건 데이터를 수집하고 분석하여, 이를 예방 정책에 반영하는 것이 도움이 될 것입니다.\n",
            "\n",
            "이상의 방안을 종합적으로 접근하고 실행한다면, 스토킹 처벌을 강화하고 보다 효과적으로 대응할 수 있을 것입니다.\n",
            "Result for Row 17:\n",
            "기반으로 한 정책 추천드리겠습니다.\n",
            "\n",
            "1. \"금융 및 은행 관련 진행 방안으로 전세 대출 안정화\"\n",
            "금융권에서 제공하는 전세 대출에 대한 이자율의 안정화로 시장의 불안함을 줄일 수 있습니다. 은행의 대출 수요를 줄이면서 금융 안정을 도모하기 위해 전세 대출을 활용하는 것이 필요합니다. 이를 통해, 주택 소유자들은 더욱 안정적인 자금 운용을 할 수 있게 되고, 동시에 전세 선호도가 높아질 것입니다.\n",
            "\n",
            "2. \"경매 및 매입 정책으로 주거 안정 보장\"\n",
            "정부가 경매를 통해 부동산을 매입하고, 그 주택들을 전세로 공급함으로써 주거 안정을 유지할 수 있습니다. 이 정책을 통해 전세 가격의 급등을 막을 수 있으며, 보다 많은 사람들이 전세 주택을 얻을 기회를 가질 수 있습니다.\n",
            "\n",
            "3. \"전세 사기 충족을 위한 강화 대출 방안\"\n",
            "정부나 금융기관들이 전세 대출 자금을 더욱 확대하거나, 이에 대한 보증을 강화하는 방안을 마련하면서, 전세계약자가 계약을 성사시키는데 필요한 금액을 충족시킬 수 있는 방안을 마련합니다. 이러한 대책은 전세계약자를 보호하면서, 시장의 안정성을 유지하는데 도움이 됩니다. \n",
            "\n",
            "위의 정책들은 전체적으로 전세 사기를 강화하고 발전시킬 수 있는 방안을 제시하였습니다. 이를 통해, 주택 시장의 안정화와 함께 국민들의 주거 안정을 보장할 수 있습니다.\n",
            "Result for Row 18:\n",
            "전세사기를 강화하고 발전시키기 위한 정책 방향으로 다음과 같은 추천을 드릴 수 있습니다.\n",
            "\n",
            "1. \"월세 및 전세 모니터링 시스템 구축\": 월세와 전세 거래를 공개하고 투명하게 관리하는 시스템을 구축하여 부동산 시장의 변동성을 감소시켜야 합니다. 이 시스템은 임차인과 임대인 간의 불합리한 월세나 보증금 상승을 막는 데 도움이 될 것입니다.\n",
            "\n",
            "2. \"전세대출 장려 및 지원 확대\": 전세대출의 상한선을 인상하거나 이자를 줄여서 저소득 임차인들이 용이하게 전세대출을 받을 수 있도록 지원해야 합니다. 이는 임대인에게도 더 안정적인 수익을 보장할 것이며, 그 결과 전체적으로 전세 시장이 활성화될 것입니다.\n",
            "\n",
            "3. \"부동산 투명거래 확립\": 부동산 거래를 투명하게 하기 위해서는 임차인과 임대인 모두에게 유리한 거래를 위한 친화적인 환경이 필요합니다. 이를 위해 계약 기간, 보증금 반환, 월세 등 전반적인 부동산 거래 관련 법규를 강화하고 철저히 시행해야 합니다.\n",
            "\n",
            "4. \"서울 지역 특화 정책 실시\": 특히 서울 같은 대도시에서는 전세 시장이 더욱 불안정할 수 있기 때문에, 이 지역에 특화된 정책을 실시하는 것이 중요하다. 이는 지역별 특성에 맞는 전세 및 월세 시스템을 구축하고 지원하는 것을 포함할 수 있으며, 전세 사기 근절을 위한 교육 및 공공캠페인을 확대하는 것을 포함할 수 있다. \n",
            "\n",
            "각각의 정책은 그 효과를 극대화하기 위해 서로 연계되어 있어야 합니다. 이러한 정책들을 통해 한국의 전세사기를 안정화하고 발전시키는 데 기여하길 바랍니다.\n",
            "Result for Row 19:\n",
            "LDA 모델링 결과에서 언급된 키워드를 고려하여 전세사기를 강화하고 발전시키기 위한 몇 가지 정책을 제안합니다:\n",
            "\n",
            "1. 공증제도 강화: 임대차 계약 시 계약서를 통한 확인이 필요하며, 해당 계약서는 중개사 혹은 공인으로부터 검토 받아야 합니다. 이러한 과정에서 공인이나 중개사의 역할이 중요해집니다. 이런 제도를 강화하여 불법적인 실거래가 이뤄지지 않도록 해야하며, 만약 이러한 불법 거래가 발생할 경우 중개사나 공인에게도 책임을 물을 수 있는 방안이 필요합니다.\n",
            "\n",
            "2. 중개사의 역할 강화: 중개사는 임차인과 세입자 사이에서 중요한 역할을 합니다. 전세사기를 방지하기 위해선 중개사의 역할과 책임이 분명해져야 합니다. 중개사에게는 임차인과 세입자 간 계약의 공정성을 유지하는 역할 및 계약 내용을 이해할 수 있도록 설명하는 의무를 부여하면 좋습니다. \n",
            "\n",
            "3. 보증금 반환 보장제도: 임대차 계약 종료 후 보증금 반환 문제가 가장 큰 이슈입니다. 보증금 반환을 보장하는 새로운 제도를 도입하여 세입자의 권리를 보호하면 좋을 것 같습니다. \n",
            "\n",
            "4. 대출가능성 평가 체계: 전세사기를 방지하기 위해 전세 대출 가능성에 대한 평가 체계를 만들어 계약 전에 사전에 대출 가능 여부를 판단할 수 있게 하는 것이 필요합니다. 이를 통해 선 작정적인 전세 사기를 줄일 수 있을 것입니다.\n",
            "\n",
            "5. 부동산 투명성 증대: 부동산의 정보는 투명해야 합니다. 이에 세입자나 임차인이 부동산에 대한 정보를 쉽게 얻을 수 있도록 하는 플랫폼을 제공하는 것이 필요합니다. 이를 통해 사전에 부동산의 진위여부를 파악하는데 도움을 줄 것입니다. \n",
            "\n",
            "이외에도 많은 방안들이 있겠지만, 위의 제안을 먼저 고려해보시는 것도 좋을 것 같습니다.\n",
            "Result for Row 20:\n",
            "기존의 LDA 모델링 결과에 대한 키워드를 바탕으로 아래와 같은 정책들을 추천드리고자 합니다:\n",
            "\n",
            "1. \"부동산 금융 상품 개발\": 아파트, 서울, 주택 등의 키워드를 참조할 때, 부동산 금융 상품을 개발하여 소비자들이 다양한 방법으로 자산을 운용할 수 있는 기회를 제공하면 좋을 것입니다. 이러한 금융 상품을 통해 부동산 투자에 대한 접근성을 높일 수 있고, 이는 전체적인 경제 활성화에 도움을 줄 수 있습니다.\n",
            "\n",
            "2. \"부동산 대출 정책 개선\": 대출이라는 키워드를 고려할 때, 기존의 대출 규정을 보다 유연하게 만들어 소비자들이 부동산 투자에 대한 부담을 줄일 수 있도록 할 필요가 있습니다. 특히, 저소득층이나 청년층 등이 주택을 소유하는데 도움이 될 수 있도록 대출이자율 등을 개선하는 정책이 필요해 보입니다.\n",
            "\n",
            "3. \"지역특화형 부동산 정책\": 지역이라는 키워드를 바탕으로, 각 지역의 특성과 수요를 최대한 반영한 주택 정책을 추진하는 것이 필요해 보입니다. 이를 통해 지역 간 부동산 가격 격차를 해소하고, 전국적인 부동산 시장의 안정을 도모할 수 있습니다.\n",
            "\n",
            "4. \"분양 가격 안정화 정책\": 분양이라는 키워드를 보면, 아파트 및 신규 주택의 분양 가격에 대한 안정화가 필요해 보입니다. 이를 위해 정부의 공공분양 의무화, 분양가 상한제 도입 등을 검토해볼 수 있겠습니다.\n",
            "\n",
            "이상의 정책들은 각 키워드를 바탕으로 한 종합적인 방안들이므로, 구체적인 정책 진행에는 더욱 깊은 연구와 검토가 필요할 것입니다.\n",
            "Result for Row 21:\n",
            "기반으로 한 제안은 다음과 같습니다:\n",
            "\n",
            "1. \"임대인-임차인 계약 강화\" - 임대인과 임차인 사이의 계약을 강화하는 법률을 제정하거나 개선할 수 있습니다. 이 계약은 임차인의 권리를 보호하고 임대인에게 책임을 부과하는 데 중점을 둘 수 있습니다. 임대료 인상률, 임대 기간, 보증금 반환 등에 관한 명확한 가이드라인이 포함되어야 합니다. \n",
            "\n",
            "2. \"종합 보험 가입\" - 임차인과 임대인 모두에게 임대차 보험 가입을 의무화하는 법안을 추진할 수 있습니다. 이 보험은 임차인의 보험료를 보호하고, 임대인이 임차인에게 발생할 수 있는 가능한 손실을 보상하는 데 도움이 될 수 있습니다.\n",
            "\n",
            "3. \"전세사기 근절 프로그램\" - '깡통 전세' 사기를 방지하기 위해 교육 프로그램을 실시하고, 이를 위한 정보를 제공하는 웹사이트나 앱을 제작할 수 있습니다. 이와 더불어, 사기를 주도한 사람들에 대한 처벌을 강화하는 법률을 제정하여 우발적인 사기를 억제할 수 있습니다.\n",
            "\n",
            "4. \"인천 전세 혁신 프로젝트\" - 인천 지역에 특별한 초점을 맞추어 전세시장을 혁신하는 프로젝트를 시작할 수 있습니다. 이는 향후 다른 지역에 적용할 수 있는 모범 사례를 제공할 수 있습니다. \n",
            "\n",
            "이러한 정책은 \"계약\", \"임대인\", \"임차인\", \"보험\", \"가입\", \"인천\", \"깡통 전세\", \"세입자\", \"지난해\"와 같은 키워드를 바탕으로 전세 시장의 사기를 줄이고 시장을 발전시키는데 도움이 될 것입니다.\n",
            "Result for Row 22:\n",
            "이러한 키워드를 바탕으로, 전세사기을 강화하고 발전시키기 위한 몇 가지 정책을 제안해드릴 수 있습니다.\n",
            "\n",
            "1. 대표 및 의원들이 참여하는 민주당의 주도하에 정부 차원에서의 전세시장 규제 강화 및 감시 활동 증가를 주도할 수 있습니다. 이는 투명성을 높이고 사기 가능성을 줄이데 도움이 될 것입니다.\n",
            "\n",
            "2. 정부와 민주당은 국민들에게 전세사기에 대한 교육과 알림을 제공하여 사기를 예방하는데 초점을 맞출 수 있습니다. 이는 공공서비스 이니셔티브의 일환으로, 이해하기 어려운 부동산 법률과 절차에 대한 이해를 증가시키는데 도움이 될 것입니다.\n",
            "\n",
            "3. 정부는 전세 시장의 안정성을 확보하기 위해 경제적 인사이트를 인입할 수 있습니다. 이는 불안정한 경제 상황에서 전세 계약이 안정적으로 이루어질 수 있도록 보장하는 데 도움이 될 것입니다.\n",
            "\n",
            "4. 정치적 레벨에서, 민생 문제로서 전세사기를 강조하고 이에 대한 대책을 마련하는 것이 중요합니다. 강력한 법적 조치를 통해 전세 사기를 징벌하고, 철저한 감사를 통해서는 사기를 예방하게 될 것입니다. \n",
            "\n",
            "이러한 정책들은 한국의 전세시장을 보다 안전하고 효율적으로 만드는 데 기여할 수 있으며, 전세사기를 강화하고 발전시키는 방향으로 가는데 도움이 될 것입니다.\n",
            "Result for Row 23:\n",
            "기반으로 LDA 모델링 결과에서 언급된 키워드를 바탕으로 추천할만한 한국의 전세사기 방지 및 개선 정책은 다음과 같습니다.\n",
            "\n",
            "1. **발급**: 정부에서는 전세 계약 시 필요한 중요 서류들을 발급하고 이를 기록하여 합법적인 계약이 이루어지도록 통제해야 합니다. 이를 위한 새로운 발급 시스템을 구축할 필요가 있습니다.\n",
            "\n",
            "2. **진행**: 전세 계약의 진행 상황을 확인하고 모니터링 할 수 있는 전세 계약 관리 시스템을 구축하고, 이를 통해 사기 사례를 미리 예방할 수 있어야 합니다. \n",
            "\n",
            "3. **경우 / 사람 / 오늘 / 문제**: 전세 계약이 진행되는 경우, 그리고 이에 관한 문제가 발생했을 때 이를 즉각적으로 알고 대응할 수 있는 시스템이 구축되어야 한다고 생각합니다. 이므로, 교육 및 예방 활동들이 필요합니다.\n",
            "\n",
            "4. **정도 / 소송**: 사기를 당한 사람이 적절한 소송을 진행할 수 있도록, 사기 진행 정도에 따른 법적 책임과 도움을 제공하는 법률상담 서비스를 강화하면 도움이 될 것입니다.\n",
            "\n",
            "5. **개월 / 생각**: 전세 계약서에는 반드시 계약기간이 명시되어야 하며, 그 기간 동안 계약자가 안전하다는 것을 생각하게 해야합니다. 이를 위해, 계약기간 동안 계약 비용을 보호하는 전세 보증금 보호제도를 강화하는 것을 고려해보면 좋을 것 같습니다. \n",
            "\n",
            "기존 방안들 외에도, 아파트의 전체 기록을 공개하고, 전세 계약 소비자를 보호하는 법률을 강화하는등 다양한 방안들을 생각해 볼 수 있을 것 같습니다. 이러한 정책들이 모두 시행되게 된다면 한국의 전세사기 문제를 해결하는데 큰 도움이 될 것입니다.\n",
            "Result for Row 24:\n",
            "한국의 전세 사기(전세 계약 및 전세대출 )를 강화하고 발전시키기 위해 아래와 같은 정책들을 추천 드리겠습니다. \n",
            "\n",
            "1. 정부지원 확대 : 정부가 전세 대출에 대한 지원을 늘려 접근성을 좋게 만들면 좋습니다. 예를 들어, 전세 대출가능한 한도를 높이거나, 저소득층에 대한 보증금 반환에 대한 보조금을 늘리는 방법이 있습니다. 또한, 대출이자율을 낮추는 것도 고려해볼 만한 사항입니다.\n",
            "\n",
            "2. 주택 시장 정비 : 서울 등 큰 도시에서 주택 가격이 급등하고 있는 상황이므로, 정부는 주택 시장을 안정화하고 불공정 거래를 방지하기 위한 조치를 취해야 합니다. 예를 들어, 신규 아파트 단지 건설을 활성화하거나 주택 재산세를 수정하여 과열된 주택 시장을 안정시키는 것이 필요합니다.\n",
            "\n",
            "3. 지역별 전세사기 강화 : 지역간 전세 사기 불균형을 해결하기 위해, 정부는 지역별 전세대출 지원 정책을 마련하면 좋습니다. 특히, 시장 상황, 소득 수준, 주택 수요 등을 고려하여 지역별 맞춤형 전세대출 정책을 시행하는 것이 중요합니다.\n",
            "\n",
            "4. 최근 트렌드 반영 : 최근 트렌드를 반영하여, 공공임대주택 제도나 젊은 사람들을 위한 임대주택 제도 등의 확대와 함께 전세대출 제도 개선도 고려해볼 만 합니다.\n",
            "\n",
            "5. 투명한 정보 공유 : 정부가 주택 가격, 전세 가격, 대출 이자율 등에 대한 정보를 투명하게 공개하면, 시민들이 사기를 더 잘 이해하고 효율적으로 활용할 수 있습니다. 이 정보는 정부 웹사이트나 공공 데이터 포털을 통해 손쉽게 접근 가능해야 합니다. \n",
            "\n",
            "이러한 정책들이 한국의 전세사기 강화와 발전에 도움이 되길 바랍니다.\n",
            "Result for Row 25:\n",
            "기반으로 추천하는 정책은 다음과 같습니다:\n",
            "\n",
            "1. **투명성 강화:** 간호법의 개정 및 발전과 관련된 논의를 집회는 물론, 언론과 뉴스를 통해 투명하게 공개함으로써 투명성을 높이는 방안을 시행합니다. 이를 통해 공익을 위한 정책 개발 및 수립에 시민들의 참여를 유도할 수 있습니다.\n",
            "\n",
            "2. **제보 시스템 강화:** 간호분야에서 일어나는 부정행위나 미흡한 점 등을 신고할 수 있는 제보 시스템을 강화합니다. 이를 통해 문제점을 신속하게 파악하고, 해결하는데 필요한 장치를 마련할 수 있습니다.\n",
            "\n",
            "3. **정보공유 및 인력교류:** '노총', '서울', '앵커' 등의 키워드를 고려하여 간호 관련 정보공유 및 인력교류를 활성화해볼 수 있습니다. 간호사단체나 연합체의 활동을 통해 전국적으로 정보를 공유하고, 서울을 중심으로 한 대규모 집회나 행사를 개최해 인력교류를 활용해 간호법 정책 개발에 참여시킬 수 있습니다. \n",
            "\n",
            "4. **조사 및 분석 강화:** 간호직 현장에서의 문제점이나 필요성 등을 파악하기 위해 지속적인 조사 및 분석을 강화해야 합니다. 이를 통해 더욱 실질적이고 효과적인 법 개정안을 마련할 수 있습니다.\n",
            "\n",
            "5. **경찰간호과 협력 강화:** '경찰' 키워드를 활용해 생각해볼 수 있는 것은, 간호와 경찰을 연계한 특화 프로그램을 운영하거나, 국가 수준에서 경찰 병원의 간호 직무를 강화하는 등의 방안을 고려해볼 수 있습니다. 이는 간호법 이외의 법적인 문제를 해결하는데도 힘을 실어 줄 수 있습니다.\n",
            "Result for Row 26:\n",
            "한국의 간호법 강화 및 발전을 위하여 아래와 같은 정책들을 추천드립니다:\n",
            "\n",
            "1. 간호 직역 및 성장: 간호 직역을 확장하고 강화하기 위한 프로그램을 개발하고, 특히 간호 전문성을 높이는 교육 및 훈련을 제공해야 합니다. 또한, 간호사들의 경력 발전을 위해 지원을 늘려야 합니다. \n",
            "\n",
            "2. 정치적 참여: 국회나 지방 의회에 간호사들을 대표하는 의원을 늘리고, 간호 관련 법률에 대한 의사결정에 간호사들의 의견이 반영되도록 해야 합니다. \n",
            "\n",
            "3. 지역 건강 관리 개편: 지역 사회의 건강을 증진하고, 지역의 비교적 취약한 집단에 대한 간호 서비스를 강화해야 합니다.\n",
            "\n",
            "4. 사회 갈등 해결: 간호사와 환자, 간호사와 다른 의료 직원 간의 갈등을 해결하기 위한 체계적인 접근이 필요합니다. 이것은 효과적인 커뮤니케이션, 팀워크 개선 등을 통해 이루어질 수 있습니다.\n",
            "\n",
            "5. 건강 문제 해결: 공중 보걼 문제를 모니터링하고 분석하는데 필요한 데이터를 수집하고, 이를 바탕으로 간호 계획을 개발하고 실행해야 합니다.\n",
            "\n",
            "실제로 이러한 정책을 시행함으로써, 간호법의 발전은 물론 간호 분야의 서비스 품질이 개선될 것입니다.\n",
            "Result for Row 27:\n",
            "이러한 키워드들을 기반으로, 아래와 같은 정책들을 제안해봅니다:\n",
            "\n",
            "1. '봉투': 임상 시험에 필요한 제품을 제공하는 봉투 제공 회사를 통한 지원책을 마련하고, 커뮤니티 간호 서비스 활성화를 위해 필요한 봉투의 공급량을 늘려보세요.\n",
            "\n",
            "2. '기업, 시장, 기술': 간호 분야에서의 기술적 혁신을 장려하고, 간호 관련 기업의 창업을 지원하여 시장의 경쟁력을 높임으로써 간호법 강화를 이룰 수 있을 것입니다.\n",
            "\n",
            "3. '일본, 중국': 일본이나 중국처럼 간호법이 잘 발달되어 있는 나라들의 사례를 좀 더 연구하고, 이를 한국에 적용하면서 법률을 개선시켜 보는 것을 추천드립니다.\n",
            "\n",
            "4. '대출, 금리': 교육 대출 저금리화를 통해 더 많은 사람들이 간호 교육을 받을 수 있도록 지원하는 것도 좋을 것 같습니다. 이로써 간호인력 부족 문제도 해결할 수 있을 것입니다.\n",
            "\n",
            "5. '위원장, 경제': 국회보건복지위원회 위원장이나 경제 관련 정부 부처의 협력을 통해 간호분야의 경제 적자 문제를 해결하고, 간호인력의 노동 상황 개선에 나설 수 있게 하는 것이 중요합니다.\n",
            "Result for Row 28:\n",
            "1. 향상된 교육 및 훈련 프로그램: 간호사의 역량을 강화하기 위해 진료와 관련된 교육과 훈련 프로그램을 강화하는 정책을 제안합니다. 이는 환자의 치료 질을 향상시킬 수 있습니다.\n",
            "\n",
            "2. 업무 부담 축소: 간호사의 업무 부담을 줄이기 위한 정책을 제안합니다. 이를 위해 기술의 표준화와 업무 과정의 효율화를 추구하는 정책을 도입하는 것이 필요합니다. 이는 간호사의 업무 부담을 줄일 수 있고, 이에 따라 병원에서의 업무 효율성을 높여줄 수 있습니다.\n",
            "\n",
            "3. 간호사 권리 강화: 간호사들의 권리를 강화하고 보호하는 정책을 개발하는 것이 필요합니다. 이는 간호를 사회적으로 중요한 직업으로 인식시키고, 간호사들의 임금, 복지, 작업 환경 등을 개선하는 것을 목표로 합니다. \n",
            "\n",
            "4. 안전한 병원 환경 제공: 환자와 간호사 모두를 위한 안전한 병원 환경을 제공하는 정책이 필요합니다. 이는 인력 부족, 설비 미비 등으로 인한 문제를 해결하는 것으로 시작할 수 있습니다. \n",
            "\n",
            "5. 간호 법규 제정: 간호사의 역할과 책임, 간호의 질 등을 규정하는 별도의 간호법을 제정하거나 강화하여 간호 분야의 전반적인 발전을 도모하는 것이 필요합니다. 이는 간호사가 자신의 전문성을 발휘하고, 환자의 케어를 제공하는데 더욱 효과적이게 할 수 있습니다.\n",
            "Result for Row 29:\n",
            "1. 교육 및 업무 개선: 간호사들의 역할과 업무범위를 확대하고, 간호 고등교육을 강화하여 직업을 통한 전문성을 향상시킬 수 있습니다. 더 나아가서, 한국에서 간호사의 역할을 정의하는 법률을 개정하고, 일본이나 미국처럼 간호사들이 의사와 비슷한 역할을 하도록 허용하는 것을 고려해 볼 수 있습니다.\n",
            "\n",
            "2. 인력 개발 및 보건서비스 강화: 보건분야에서 인력 부족 문제를 해결하기 위해, 간호사 교육과 훈련을 지원하고 능력 개발 프로그램을 구축할 수 있습니다. 이는 고령화 사회에서 더욱 체계적인 의료 서비스를 제공할 수 있도록 하며, 고질적으로 풀리지 않는 인력 문제를 해결하는데 도움이 될 것입니다.\n",
            "\n",
            "3. 규정 개선: 간호 법률에 명시된 직역 범위와 규정을 더욱 명확하게 정의하고, 간호사들이 법적 허용 범위 내에서 더 많은 의료 서비스를 제공할 수 있도록 법률을 개정할 수 있습니다. 이는 간호사가 연관된 의료 분야에서 더 활동할 수 있도록 함으로써, 환자에게 더 나은 의료 서비스를 제공하는데 도움이 될 것입니다.\n",
            "\n",
            "4. 나라 및 단체와 협력: 간호사들의 국제 교류 활동을 촉진하고, 간호 직업의 상호 인정을 추진함으로써, 한국 간호사들이 세계적으로 인정받는 전문가가 될 수 있도록 도움을 줄 수 있습니다. 또한 국제 보건기구나 다른국가의 간호 단체와 협력하여, 간호 분야에서의 지속적인 학문적 교류를 통해 간호 서비스의 질을 향상시킬 수 있습니다. \n",
            "\n",
            "5. 보건 협회의 주장: 기존의 보건 협회의 주장에 귀를 기울이고, 그들의 요구 사항과 건의사항을 충족하기 위한 정책을 마련할 수 있습니다. 이를 통해 간호사들의 교육, 훈련, 보건 서비스 제공의 향상 뿐만 아니라, 간호사들의 보건 분야에서의 역할 확대를 지원하도록 도와줄 수 있습니다.\n",
            "Result for Row 30:\n",
            "이러한 키워드들을 바탕으로 추론해볼 수 있는 정책은 다음과 같습니다:\n",
            "\n",
            "1. 청년 간호사 양성 및 고용 증대 정책: 청년 고용률 증진과 공공 의료 서비스의 개선을 동시에 이룰 수 있습니다. 정부는 간호사들을 위한 교육 코스들을 지원하고 청년들이 간호사가 되는 것을 장려하여 이 분야에서의 청년 고용률을 높일 수 있습니다.\n",
            "\n",
            "2. 지역중심 간호서비스 확대: 지역사회의 공공 의료 서비스를 개선하기 위해, 지역별 병원과 클리닉에서 간호사들의 역할을 강화하고 확장할 수 있습니다. 이를 통해 의료 서비스의 접근성을 높이고, 지역사회 건강을 향상시킬 수 있습니다.\n",
            "\n",
            "3. 울산 지역 간호법 개선 프로젝트: 특정 지역인 울산을 대상으로 한 간호법 강화 프로젝트를 진행할 수 있습니다. 이 프로젝트는 울산 지역의 간호사들이 지역사회에 더 효과적으로 기여할 수 있도록 도와줄 것입니다.\n",
            "\n",
            "정책이 추진되기 위해서는 후보자와 민주당의 지지를 받아야 하며, 이러한 정책들은 이재명 후보의 공약 중 하나일 수 있습니다. 이 또한 후보의 지지율을 높이는 요인이 될 수 있습니다. 이처럼 키워드를 통해 다양한 정책을 생각해 볼 수 있습니다.\n",
            "Result for Row 31:\n",
            "한국의 간호법을 강화하고 발전시키기 위한 정책 몇 가지를 제안해 드리겠습니다:\n",
            "\n",
            "1. 경제적 지원 강화: 간호분야에 대한 더 많은 경제적 지원을 제공하여, 간호인력의 수를 증가시키고, 그들의 교육 및 훈련을 개선하는 데 도움이 될 수 있습니다. 이를 통해, 간호사들의 역할을 강화하고, 고독사를 예방하는 데에 큰 도움이 될 수 있습니다.\n",
            "\n",
            "2. 외국인 간호사 직업 허가: 최대한 많은 만큼의 외국인 간호사, 특히 우크라이나 같은 국가에서의 간호사를 독려하여 한국에 와서 일하도록 유도할 수 있습니다. 이를 통해 간호사 부족 문제를 해결할 수 있을 뿐만 아니라, 국제간호사교류를 통해 한국 간호 직업의 발전에 기여할 수 있습니다.\n",
            "\n",
            "3. 대구 모델 확산: 대구에서 실행되어 성공적인 결과를 보여준 병원 및 의료 정책을 전국적으로 확산시키는 것입니다. 대구는 문화적, 경제적으로 한국의 다른 도시들과 다르기 때문에, 대구에서 성공한 정책이 다른 지역에도 긍정적인 결과를 가져올 수 있을 것입니다.\n",
            "\n",
            "4. 간호 인력 활용 강화: 한국의 고령화 인구를 위해, 간호사들에게 더 중요한 역할을 수행하도록 하는 것이 필요합니다. 이를 위해 간호법을 개정하거나, 간호사의 직무를 확장하는 등의 방안을 모색해야 합니다.\n",
            "\n",
            "5. 직업 교육 및비용 반납 프로그램: 간호학생들을 위한 교육비 지원을 제공하고, 그 대가로 학생들은 간호사로서 일정 기간 동안 공공의료 분야에서 일하는 방식의 반납 프로그램을 시행하면, 교육비를 지불하는 부담에 대한 문제와 간호사 인력 부족 문제를 동시에 해결할 수 있을 것입니다.\n",
            "Result for Row 32:\n",
            "기반으로 LDA 모델링 결과를 활용하여, 한국의 간호법 강화와 발전에 대한 제안을 다음과 같이 드릴 수 있습니다:\n",
            "\n",
            "1. **병원과 환자의 관계 강화 정책:** 병원은 환자의 건강을 책임지는 공간이므로, 정부는 간호사를 학습하고 지원하는 병원의 조건을 개선하는 정책을 시행해 볼 수 있습니다. 이는 병원에서 제공하는 간호 서비스의 질을 향상시키고, 환자의 만족도를 증가시키는데 기여할 것입니다.\n",
            "\n",
            "2. **코로나와 같은 대유행 대응능력 강화:** 코로나는 세계적인 대유행으로, 간호 인력이 중요한 역할을 하고 있습니다. 인력 부족 문제가 심각해질 수 있는 상황에서, 코로나와 같은 비상 상황에 대비한 특별한 대응 체계가 있어야 합니다. 즉, 간호사에 대한 충분한 보호장비 지원과 훈련을 강화하는 것이 필요할 것입니다. \n",
            "\n",
            "3. **현실적인 인력 관리 정책:** 국가 간호사 인력 수요와 공급을 관리하고, 간호직에 대한 이해와 인식을 높이는 정책이 필요합니다. 이것은 간호인력의 유출을 막고, 직업의 안정성을 높이는데 도움이 될 것입니다. 적절한 인력 관리는 향후 국가 건강 체계에 긍정적인 결과를 가져올 것입니다.\n",
            "\n",
            "4. **건강을 중심으로 한 정책:** 마지막으로, 간호법 강화는 환자의 건강에 중점을 두어야 합니다. 법률이나 정책이 환자의 건강을 우선시하도록 설계되어야 합니다. \n",
            "\n",
            "이러한 제안들이 한국 간호법의 강화와 발전에 조금이나마 도움이 되길 바랍니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "policy_type = df.loc[27, 'Topic']\n",
        "keywords = df.loc[27, 'TopicWords'].split(', ')"
      ],
      "metadata": {
        "id": "w7Y3KGB42pIk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "result = generate_policy_recommendation(policy_type, keywords)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "brs2K4I57dzi",
        "outputId": "26809a1c-b6c2-472b-cb60-220d4703b8c8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function print>"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Oy35guiO7t9d",
        "outputId": "1915a521-d67b-4bdc-c7dd-c9fbc664bfef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "키워드를 바탕으로 한국의 간호법을 강화하고 발전시키기 위한 정책 몇 가지를 제안하겠습니다.\n",
            "\n",
            "1. 간호사의 업무 부담 감소: 간호사의 업무가 과중하면 질 높은 환자 관리를 할 수 없기 때문에 부담을 경감시키는 정책이 필요합니다. 간호사의 인력을 증강하거나, 간호사의 업무를 관련 인력과 분산시키는 등의 방안을 고려해볼 수 있습니다.\n",
            "\n",
            "2. 교육 및 훈련 강화: 간호사의 업무 수행능력을 높이기 위해 진료 관련 교육 및 훈련을 강화하면 좋겠습니다. 이를 위해 교육 기관과 병원 간의 협력을 통해 실무 교육 프로그램을 활성화하는 것을 제안합니다.\n",
            "\n",
            "3. 환자 안전 정책의 강화: 환자의 안전과 질 높은 진료를 위한 법안을 제정하고 이를 엄격히 시행할 수 있는 기능을 강화해야 합니다. 이는 환자의 권리를 보장하며, 간호사로서의 직무유기를 방지합니다.\n",
            "\n",
            "4. 피드백 시스템 도입: 간호사와 환자, 그리고 병원 간 의사소통을 강화하고 문제 해결을 위한 피드백 시스템을 도입하면 좋겠습니다. 이를 통해 실질적인 문제를 파악하고 개선방안을 찾는 데 도움이 될 것입니다.\n",
            "\n",
            "5. 사회적 인식 개선: 간호사의 업무 중요성과 필요성에 대한 사회적 인식을 개선하기 위한 캠페인이 필요합니다. 이를 통해 간호사의 직업 만족도를 높이고, 잠재적인 간호사들에게 긍정적인 이미지를 제공할 수 있습니다.\n",
            "\n",
            "이러한 정책들을 통해 한국의 간호법을 강화하고 발전시키는 것이 가능해질 것입니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "policy_type = df.loc[22, 'Topic']\n",
        "keywords = df.loc[22, 'TopicWords'].split(', ')\n",
        "result = generate_policy_recommendation(policy_type, keywords)\n",
        "print(result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i694pr3JE7pX",
        "outputId": "fdc3052e-d585-46f4-e082-a02dea739650"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "한국의 전세사기를 강화하고 발전시키기 위한 추천 정책은 다음과 같습니다:\n",
            "\n",
            "1. **전세사기 정보 발급 제도 강화**: 전세 계약을 체결할 때 사람들이 전세 사기 여부를 쉽게 판단할 수 있도록 정부가 검증한 전세 인증 정보를 발급하는 제도를 강화하겠습니다. 이것은 잠재적 사기를 미리 방지하고, 사기를 당한 경우에도 피해복구를 용이하게 할 것입니다.\n",
            "\n",
            "2. **실효적인 진행 관리 시스템 도입**: 전세 계약 진행 과정을 관리하는 전용 시스템을 구축할 것입니다. 사람들이 계약 단계마다 어떤 절차를 밟아야 하는지 쉽게 알 수 있게 하고, 위반 사항이 발생했을 경우 즉시 알림이 가도록 할 것입니다.\n",
            "\n",
            "3. **전세사기 관련 소송 절차 간소화**: 전세사기 피해가 발생했을 경우, 개월 단위의 장기화된 소송과정은 피해자에게 더 큰 부담을 줄 수 있습니다. 따라서, 이를 간소화하고, 신속하게 진행할 수 있는 소송 절차를 마련하는 것이 필요합니다.\n",
            "\n",
            "4. **전세사기 예방 교육 확대**: 오늘날의 사회에서 지식은 힘입니다. 전세사기에 대한 예방 교육을 확대하면 사람들이 가지고 있는 정보의 정도를 향상시켜 사기를 예방할 수 있습니다.\n",
            "\n",
            "5. **전세사기 문제점 파악 및 개선**: 정부는 지속적으로 전세사기의 문제점을 파악하고 이를 해결하기 위한 조치를 적용해야 합니다. 실제로 발생하는 전세 사기의 사례를 분석하고, 이를 바탕으로 정책을 개선하여 사기를 예방하는 데 효과적인 대응을 할 수 있습니다. 이를 위해 사용자 피드백 시스템을 통해 실제 사람들의 경험과 생각을 들어 볼 수 있습니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "policy_type = df.loc[23, 'Topic']\n",
        "keywords = df.loc[23, 'TopicWords'].split(', ')\n",
        "result = generate_policy_recommendation(policy_type, keywords)\n",
        "print(result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "41As0YEEFGLL",
        "outputId": "b820fa94-3fe0-41c1-cf22-49a943dc3799"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1. \"정부 주도의 지역별 주택 시장 안정화 정책\": 특정 지역에 집중된 부동산 수요를 분산시키기 위해, 정부가 비수도권의 발전을 촉진하는 의미에서 지역 주택시장을 안정화하도록 지원해야 합니다. 이는 지역 경제 활성화를 통해 중장기적으로 전국적인 주택 시장 안정에 기여할 것입니다.\n",
            "\n",
            "2. \"금리 조정에 따른 전세 사기 대책\": 최근 낮아진 금리로 인해 전세 사기가 늘어날 가능성이 있습니다. 이에 대비하여, 정부는 금리 조정에 따른 전세 사기를 방지하고자 미리 대책을 마련해야 합니다. 특히, 이런 사기를 예방하는 방법 중 하나는 렌트 계약 시 의무적으로 법적 검토를 받게 하는 것입니다.\n",
            "\n",
            "3. \"서울 중심의 아파트 공급 확대\": 서울은 전세 사기가 가장 자주 발생하는 도시입니다. 왜냐하면 이 도시는 아파트 수요가 공급을 초과하기 때문입니다. 이러한 상황을 해결하기 위해 서울 내의 아파트 공급을 확대하는 것이 필요합니다. 이를 통해 아파트 공급과 수요의 불균형을 해결하고 주택 가격을 안정시킬 수 있습니다.\n",
            "\n",
            "4. \"발표 및 교육 캠페인\": 전세 사기를 막기 위한 가장 효과적인 방법 중 하나는, 정부가 사전에 이러한 사기를 예방하고 대처하는 방법에 대한 정보를 공개하는 것입니다. 또한, 전세 계약과 관련된 법률에 대한 교육 캠페인을 실시해야 합니다.\n",
            "   \n",
            "이상과 같은 다양한 방안을 통해 한국의 전세 사기를 강화하고 발전시킬 수 있을 것입니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ypzOAWEiFHyh"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}